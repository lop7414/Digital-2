

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Mar 07 20:47:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  0019                     _TXREG	set	25
   448  001A                     _RCREG	set	26
   449  000B                     _INTCONbits	set	11
   450  0018                     _RCSTAbits	set	24
   451  0013                     _SSPBUF	set	19
   452  0014                     _SSPCON	set	20
   453  0009                     _PORTE	set	9
   454  0008                     _PORTD	set	8
   455  0007                     _PORTC	set	7
   456  0006                     _PORTB	set	6
   457  0005                     _PORTA	set	5
   458  0006                     _PORTBbits	set	6
   459  0065                     _RCIF	set	101
   460  0063                     _SSPIF	set	99
   461  005E                     _PEIE	set	94
   462  005F                     _GIE	set	95
   463  008F                     _OSCCONbits	set	143
   464  008C                     _PIE1bits	set	140
   465  0098                     _TXSTAbits	set	152
   466  0099                     _SPBRG	set	153
   467  0091                     _SSPCON2bits	set	145
   468  0087                     _TRISCbits	set	135
   469  0094                     _SSPSTAT	set	148
   470  0093                     _SSPADD	set	147
   471  0091                     _SSPCON2	set	145
   472  0089                     _TRISE	set	137
   473  0088                     _TRISD	set	136
   474  0087                     _TRISC	set	135
   475  0086                     _TRISB	set	134
   476  0085                     _TRISA	set	133
   477  04C1                     _TRMT	set	1217
   478  0463                     _SSPIE	set	1123
   479  043C                     _TRISC4	set	1084
   480  043B                     _TRISC3	set	1083
   481  048B                     _RCEN	set	1163
   482                           
   483                           	psect	cinit
   484  07F7                     start_initialization:	
   485                           ; #config settings
   486                           
   487  07F7                     __initialization:
   488                           
   489                           ; Clear objects allocated to BANK0
   490  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   491  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   492  07F9  01AB               	clrf	__pbssBANK0& (0+127)
   493  07FA  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   494  07FB  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   495  07FC                     end_of_initialization:	
   496                           ;End of C runtime variable initialization code
   497                           
   498  07FC                     __end_of__initialization:
   499  07FC  0183               	clrf	3
   500  07FD  120A  118A  2F79   	ljmp	_main	;jump to C main() function
   501                           
   502                           	psect	bssBANK0
   503  002B                     __pbssBANK0:
   504  002B                     _sensor:
   505  002B                     	ds	2
   506  002D                     _Estado:
   507  002D                     	ds	1
   508                           
   509                           	psect	cstackCOMMON
   510  0070                     __pcstackCOMMON:
   511  0070                     ?_setup:
   512  0070                     ??_setup:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_InitOSC:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ??_InitOSC:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_SERIAL_Init:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_SERIAL_Init:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_I2C_M_Start:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_I2C_M_Start:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_I2C_M_Stop:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ??_I2C_M_Stop:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_UART_Write:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ??_UART_Write:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_UART_READ:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ??_UART_READ:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_main:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_I2C_M_Wait:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ??_I2C_M_Wait:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_I2C_M_Read:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?___lldiv:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     UART_Write@a:	
   567                           ; 4 bytes @ 0x0
   568                           
   569  0070                     I2C_M_Read@a:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ___lldiv@divisor:	
   573                           ; 2 bytes @ 0x0
   574                           
   575                           
   576                           ; 4 bytes @ 0x0
   577  0070                     	ds	2
   578  0072                     ??_I2C_M_Read:
   579  0072                     InitOSC@frec:	
   580                           ; 1 bytes @ 0x2
   581                           
   582                           
   583                           ; 1 bytes @ 0x2
   584  0072                     	ds	2
   585  0074                     I2C_M_Read@temp:
   586  0074                     ___lldiv@dividend:	
   587                           ; 2 bytes @ 0x4
   588                           
   589                           
   590                           ; 4 bytes @ 0x4
   591  0074                     	ds	4
   592  0078                     ??___lldiv:
   593                           
   594                           ; 1 bytes @ 0x8
   595  0078                     	ds	1
   596  0079                     ___lldiv@quotient:
   597                           
   598                           ; 4 bytes @ 0x9
   599  0079                     	ds	4
   600  007D                     ___lldiv@counter:
   601                           
   602                           ; 1 bytes @ 0xD
   603  007D                     	ds	1
   604                           
   605                           	psect	cstackBANK0
   606  0020                     __pcstackBANK0:
   607  0020                     ?_I2C_Init:
   608  0020                     I2C_Init@a:	
   609                           ; 1 bytes @ 0x0
   610                           
   611                           
   612                           ; 4 bytes @ 0x0
   613  0020                     	ds	4
   614  0024                     ??_I2C_Init:
   615                           
   616                           ; 1 bytes @ 0x4
   617  0024                     	ds	4
   618  0028                     ??_main:
   619                           
   620                           ; 1 bytes @ 0x8
   621  0028                     	ds	3
   622                           
   623                           	psect	maintext
   624  0779                     __pmaintext:	
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 65 in file "Master.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : B00/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       3       0       0       0
   647 ;;      Totals:         0       3       0       0       0
   648 ;;Total ram usage:        3 bytes
   649 ;; Hardware stack levels required when called: 2
   650 ;; This function calls:
   651 ;;		_I2C_Init
   652 ;;		_I2C_M_Read
   653 ;;		_I2C_M_Start
   654 ;;		_I2C_M_Stop
   655 ;;		_InitOSC
   656 ;;		_SERIAL_Init
   657 ;;		_UART_READ
   658 ;;		_UART_Write
   659 ;;		_setup
   660 ;; This function is called by:
   661 ;;		Startup code after reset
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _main
   667  0779                     _main:
   668  0779                     l1078:	
   669                           ;incstack = 0
   670                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   671                           
   672                           
   673                           ;Master.c: 67:     setup();
   674  0779  120A  118A  262E  120A  118A  	fcall	_setup
   675                           
   676                           ;Master.c: 68:     I2C_Init(100000);
   677  077E  3000               	movlw	0
   678  077F  1283               	bcf	3,5	;RP0=0, select bank0
   679  0780  1303               	bcf	3,6	;RP1=0, select bank0
   680  0781  00A3               	movwf	I2C_Init@a+3
   681  0782  3001               	movlw	1
   682  0783  00A2               	movwf	I2C_Init@a+2
   683  0784  3086               	movlw	134
   684  0785  00A1               	movwf	I2C_Init@a+1
   685  0786  30A0               	movlw	160
   686  0787  00A0               	movwf	I2C_Init@a
   687  0788  120A  118A  267F  120A  118A  	fcall	_I2C_Init
   688  078D                     l1080:
   689                           
   690                           ;Master.c: 69:     InitOSC(6);
   691  078D  3006               	movlw	6
   692  078E  120A  118A  26B7  120A  118A  	fcall	_InitOSC
   693  0793                     l1082:
   694                           
   695                           ;Master.c: 70:     SERIAL_Init();
   696  0793  120A  118A  263E  120A  118A  	fcall	_SERIAL_Init
   697  0798                     l1084:
   698                           
   699                           ;Master.c: 77:         I2C_M_Start();
   700  0798  120A  118A  2603  120A  118A  	fcall	_I2C_M_Start
   701  079D                     l1086:
   702                           
   703                           ;Master.c: 78:         sensor = I2C_M_Read(0);
   704  079D  3000               	movlw	0
   705  079E  00F0               	movwf	I2C_M_Read@a
   706  079F  00F1               	movwf	I2C_M_Read@a+1
   707  07A0  120A  118A  2651  120A  118A  	fcall	_I2C_M_Read
   708  07A5  0871               	movf	?_I2C_M_Read+1,w
   709  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   710  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   711  07A8  00AC               	movwf	_sensor+1
   712  07A9  0870               	movf	?_I2C_M_Read,w
   713  07AA  00AB               	movwf	_sensor
   714  07AB                     l1088:
   715                           
   716                           ;Master.c: 79:         I2C_M_Stop();
   717  07AB  120A  118A  260C  120A  118A  	fcall	_I2C_M_Stop
   718  07B0                     l1090:
   719                           
   720                           ;Master.c: 81:         _delay((unsigned long)((200)*(8000000/4000.0)));
   721  07B0  3003               	movlw	3
   722  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   723  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   724  07B3  00AA               	movwf	??_main+2
   725  07B4  3008               	movlw	8
   726  07B5  00A9               	movwf	??_main+1
   727  07B6  3076               	movlw	118
   728  07B7  00A8               	movwf	??_main
   729  07B8                     u297:
   730  07B8  0BA8               	decfsz	??_main,f
   731  07B9  2FB8               	goto	u297
   732  07BA  0BA9               	decfsz	??_main+1,f
   733  07BB  2FB8               	goto	u297
   734  07BC  0BAA               	decfsz	??_main+2,f
   735  07BD  2FB8               	goto	u297
   736  07BE  0000               	nop
   737  07BF                     l1092:
   738                           
   739                           ;Master.c: 83:         UART_Write(sensor);
   740  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   741  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   742  07C1  082B               	movf	_sensor,w
   743  07C2  120A  118A  2615  120A  118A  	fcall	_UART_Write
   744  07C7                     l1094:
   745                           
   746                           ;Master.c: 84:         _delay((unsigned long)((10)*(8000000/4000.0)));
   747  07C7  301A               	movlw	26
   748  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   749  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   750  07CA  00A9               	movwf	??_main+1
   751  07CB  30F7               	movlw	247
   752  07CC  00A8               	movwf	??_main
   753  07CD                     u307:
   754  07CD  0BA8               	decfsz	??_main,f
   755  07CE  2FCD               	goto	u307
   756  07CF  0BA9               	decfsz	??_main+1,f
   757  07D0  2FCD               	goto	u307
   758  07D1  2FD2               	nop2
   759  07D2                     l1096:
   760                           
   761                           ;Master.c: 86:         Estado = UART_READ();
   762  07D2  120A  118A  25FB  120A  118A  	fcall	_UART_READ
   763  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   764  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   765  07D9  00A8               	movwf	??_main
   766  07DA  0828               	movf	??_main,w
   767  07DB  00AD               	movwf	_Estado
   768  07DC                     l1098:
   769                           
   770                           ;Master.c: 87:         _delay((unsigned long)((10)*(8000000/4000.0)));
   771  07DC  301A               	movlw	26
   772  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   773  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   774  07DF  00A9               	movwf	??_main+1
   775  07E0  30F7               	movlw	247
   776  07E1  00A8               	movwf	??_main
   777  07E2                     u317:
   778  07E2  0BA8               	decfsz	??_main,f
   779  07E3  2FE2               	goto	u317
   780  07E4  0BA9               	decfsz	??_main+1,f
   781  07E5  2FE2               	goto	u317
   782  07E6  2FE7               	nop2
   783  07E7                     l1100:
   784                           
   785                           ;Master.c: 89:         if (Estado==1){
   786  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   787  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   788  07E9  032D               	decf	_Estado,w
   789  07EA  1D03               	btfss	3,2
   790  07EB  2FED               	goto	u281
   791  07EC  2FEE               	goto	u280
   792  07ED                     u281:
   793  07ED  2FF1               	goto	l52
   794  07EE                     u280:
   795  07EE                     l1102:
   796                           
   797                           ;Master.c: 90:             PORTBbits.RB0 = 1;
   798  07EE  1406               	bsf	6,0	;volatile
   799                           
   800                           ;Master.c: 91:             PORTBbits.RB1 = 0;
   801  07EF  1086               	bcf	6,1	;volatile
   802                           
   803                           ;Master.c: 92:         }
   804  07F0  2F98               	goto	l1084
   805  07F1                     l52:	
   806                           ;Master.c: 93:         else {
   807                           
   808                           
   809                           ;Master.c: 94:             PORTBbits.RB0 = 0;
   810  07F1  1006               	bcf	6,0	;volatile
   811                           
   812                           ;Master.c: 95:             PORTBbits.RB1 = 1;
   813  07F2  1486               	bsf	6,1	;volatile
   814  07F3  2F98               	goto	l1084
   815  07F4  120A  118A  2800   	ljmp	start
   816  07F7                     __end_of_main:
   817                           
   818                           	psect	text1
   819  062E                     __ptext1:	
   820 ;; *************** function _setup *****************
   821 ;; Defined at:
   822 ;;		line 105 in file "Master.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0
   839 ;;      Totals:         0       0       0       0       0
   840 ;;Total ram usage:        0 bytes
   841 ;; Hardware stack levels used: 1
   842 ;; This function calls:
   843 ;;		Nothing
   844 ;; This function is called by:
   845 ;;		_main
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _setup
   851  062E                     _setup:
   852  062E                     l982:	
   853                           ;incstack = 0
   854                           ; Regs used in _setup: [wreg+status,2]
   855                           
   856                           
   857                           ;Master.c: 106:     TRISA=0;
   858  062E  1683               	bsf	3,5	;RP0=1, select bank1
   859  062F  1303               	bcf	3,6	;RP1=0, select bank1
   860  0630  0185               	clrf	5	;volatile
   861                           
   862                           ;Master.c: 107:     TRISB=0;
   863  0631  0186               	clrf	6	;volatile
   864  0632                     l984:
   865                           
   866                           ;Master.c: 108:     TRISC=0b000011000;
   867  0632  3018               	movlw	24
   868  0633  0087               	movwf	7	;volatile
   869  0634                     l986:
   870                           
   871                           ;Master.c: 109:     TRISD=0;
   872  0634  0188               	clrf	8	;volatile
   873  0635                     l988:
   874                           
   875                           ;Master.c: 110:     TRISE=0;
   876  0635  0189               	clrf	9	;volatile
   877  0636                     l990:
   878                           
   879                           ;Master.c: 112:     PORTA=0;
   880  0636  1283               	bcf	3,5	;RP0=0, select bank0
   881  0637  1303               	bcf	3,6	;RP1=0, select bank0
   882  0638  0185               	clrf	5	;volatile
   883  0639                     l992:
   884                           
   885                           ;Master.c: 113:     PORTB=0;
   886  0639  0186               	clrf	6	;volatile
   887  063A                     l994:
   888                           
   889                           ;Master.c: 114:     PORTC=0;
   890  063A  0187               	clrf	7	;volatile
   891  063B                     l996:
   892                           
   893                           ;Master.c: 115:     PORTD=0;
   894  063B  0188               	clrf	8	;volatile
   895  063C                     l998:
   896                           
   897                           ;Master.c: 116:     PORTE=0;
   898  063C  0189               	clrf	9	;volatile
   899  063D                     l59:
   900  063D  0008               	return
   901  063E                     __end_of_setup:
   902                           
   903                           	psect	text2
   904  0615                     __ptext2:	
   905 ;; *************** function _UART_Write *****************
   906 ;; Defined at:
   907 ;;		line 35 in file "UART.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  a               1    wreg     unsigned char 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  a               1    0[COMMON] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         0       0       0       0       0
   922 ;;      Locals:         1       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0
   924 ;;      Totals:         1       0       0       0       0
   925 ;;Total ram usage:        1 bytes
   926 ;; Hardware stack levels used: 1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _UART_Write
   936  0615                     _UART_Write:
   937                           
   938                           ;incstack = 0
   939                           ; Regs used in _UART_Write: [wreg]
   940                           ;UART_Write@a stored from wreg
   941  0615  00F0               	movwf	UART_Write@a
   942  0616                     l1068:
   943  0616                     l149:	
   944                           ;UART.c: 36:   while(!TRMT);
   945                           
   946  0616  1683               	bsf	3,5	;RP0=1, select bank1
   947  0617  1303               	bcf	3,6	;RP1=0, select bank1
   948  0618  1C98               	btfss	24,1	;volatile
   949  0619  2E1B               	goto	u261
   950  061A  2E1C               	goto	u260
   951  061B                     u261:
   952  061B  2E16               	goto	l149
   953  061C                     u260:
   954  061C                     l1070:
   955                           
   956                           ;UART.c: 37:   TXREG = a;
   957  061C  0870               	movf	UART_Write@a,w
   958  061D  1283               	bcf	3,5	;RP0=0, select bank0
   959  061E  1303               	bcf	3,6	;RP1=0, select bank0
   960  061F  0099               	movwf	25	;volatile
   961  0620                     l152:
   962  0620  0008               	return
   963  0621                     __end_of_UART_Write:
   964                           
   965                           	psect	text3
   966  05FB                     __ptext3:	
   967 ;; *************** function _UART_READ *****************
   968 ;; Defined at:
   969 ;;		line 25 in file "UART.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      unsigned char 
   976 ;; Registers used:
   977 ;;		wreg
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _UART_READ
   998  05FB                     _UART_READ:
   999  05FB                     l1072:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _UART_READ: [wreg]
  1002                           
  1003  05FB                     l140:	
  1004                           ;UART.c: 26:     while(!RCIF);
  1005                           
  1006  05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1007  05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1008  05FD  1E8C               	btfss	12,5	;volatile
  1009  05FE  2E00               	goto	u271
  1010  05FF  2E01               	goto	u270
  1011  0600                     u271:
  1012  0600  2DFB               	goto	l140
  1013  0601                     u270:
  1014  0601                     l1074:
  1015                           
  1016                           ;UART.c: 27:     return RCREG;
  1017  0601  081A               	movf	26,w	;volatile
  1018  0602                     l143:
  1019  0602  0008               	return
  1020  0603                     __end_of_UART_READ:
  1021                           
  1022                           	psect	text4
  1023  063E                     __ptext4:	
  1024 ;; *************** function _SERIAL_Init *****************
  1025 ;; Defined at:
  1026 ;;		line 8 in file "UART.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0
  1042 ;;      Temps:          0       0       0       0       0
  1043 ;;      Totals:         0       0       0       0       0
  1044 ;;Total ram usage:        0 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _SERIAL_Init
  1055  063E                     _SERIAL_Init:
  1056  063E                     l1022:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _SERIAL_Init: [wreg]
  1059                           
  1060                           
  1061                           ;UART.c: 9:     SPBRG = 25;
  1062  063E  3019               	movlw	25
  1063  063F  1683               	bsf	3,5	;RP0=1, select bank1
  1064  0640  1303               	bcf	3,6	;RP1=0, select bank1
  1065  0641  0099               	movwf	25	;volatile
  1066  0642                     l1024:
  1067                           
  1068                           ;UART.c: 11:     TXSTAbits.BRGH = 1;
  1069  0642  1518               	bsf	24,2	;volatile
  1070  0643                     l1026:
  1071                           
  1072                           ;UART.c: 12:     TXSTAbits.TXEN = 1;
  1073  0643  1698               	bsf	24,5	;volatile
  1074  0644                     l1028:
  1075                           
  1076                           ;UART.c: 13:     TXSTAbits.SYNC = 0;
  1077  0644  1218               	bcf	24,4	;volatile
  1078  0645                     l1030:
  1079                           
  1080                           ;UART.c: 14:     TXSTAbits.TX9 = 0;
  1081  0645  1318               	bcf	24,6	;volatile
  1082  0646                     l1032:
  1083                           
  1084                           ;UART.c: 16:     RCSTAbits.CREN = 1;
  1085  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0648  1618               	bsf	24,4	;volatile
  1088  0649                     l1034:
  1089                           
  1090                           ;UART.c: 17:     RCSTAbits.SPEN = 1;
  1091  0649  1798               	bsf	24,7	;volatile
  1092  064A                     l1036:
  1093                           
  1094                           ;UART.c: 18:     RCSTAbits.RX9 = 0;
  1095  064A  1318               	bcf	24,6	;volatile
  1096  064B                     l1038:
  1097                           
  1098                           ;UART.c: 20:     PIE1bits.RCIE = 1;
  1099  064B  1683               	bsf	3,5	;RP0=1, select bank1
  1100  064C  1303               	bcf	3,6	;RP1=0, select bank1
  1101  064D  168C               	bsf	12,5	;volatile
  1102  064E                     l1040:
  1103                           
  1104                           ;UART.c: 21:     INTCONbits.PEIE = 1;
  1105  064E  170B               	bsf	11,6	;volatile
  1106  064F                     l1042:
  1107                           
  1108                           ;UART.c: 22:     INTCONbits.GIE = 1;
  1109  064F  178B               	bsf	11,7	;volatile
  1110  0650                     l137:
  1111  0650  0008               	return
  1112  0651                     __end_of_SERIAL_Init:
  1113                           
  1114                           	psect	text5
  1115  06B7                     __ptext5:	
  1116 ;; *************** function _InitOSC *****************
  1117 ;; Defined at:
  1118 ;;		line 9 in file "OSC.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  frec            1    wreg     unsigned char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  frec            1    2[COMMON] unsigned char 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         0       0       0       0       0
  1133 ;;      Locals:         1       0       0       0       0
  1134 ;;      Temps:          2       0       0       0       0
  1135 ;;      Totals:         3       0       0       0       0
  1136 ;;Total ram usage:        3 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _InitOSC
  1147  06B7                     _InitOSC:
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _InitOSC: [wreg-fsr0h+status,2+status,0]
  1151                           ;InitOSC@frec stored from wreg
  1152  06B7  00F2               	movwf	InitOSC@frec
  1153  06B8                     l1012:
  1154                           
  1155                           ;OSC.c: 10:     switch(frec){
  1156  06B8  2EEF               	goto	l1016
  1157  06B9                     l158:	
  1158                           ;OSC.c: 11:         case 0:
  1159                           
  1160                           
  1161                           ;OSC.c: 12:             OSCCONbits.IRCF0 = 0;
  1162  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  1163  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  1164  06BB  120F               	bcf	15,4	;volatile
  1165                           
  1166                           ;OSC.c: 13:             OSCCONbits.IRCF1 = 0;
  1167  06BC  128F               	bcf	15,5	;volatile
  1168                           
  1169                           ;OSC.c: 14:             OSCCONbits.IRCF2 = 0;
  1170  06BD  130F               	bcf	15,6	;volatile
  1171                           
  1172                           ;OSC.c: 15:             break;
  1173  06BE  2F11               	goto	l159
  1174  06BF                     l160:	
  1175                           ;OSC.c: 16:         case 1:
  1176                           
  1177                           
  1178                           ;OSC.c: 17:             OSCCONbits.IRCF0 = 1;
  1179  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  1180  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  1181  06C1  160F               	bsf	15,4	;volatile
  1182                           
  1183                           ;OSC.c: 18:             OSCCONbits.IRCF1 = 0;
  1184  06C2  128F               	bcf	15,5	;volatile
  1185                           
  1186                           ;OSC.c: 19:             OSCCONbits.IRCF2 = 0;
  1187  06C3  130F               	bcf	15,6	;volatile
  1188                           
  1189                           ;OSC.c: 20:             break;
  1190  06C4  2F11               	goto	l159
  1191  06C5                     l161:	
  1192                           ;OSC.c: 21:         case 2:
  1193                           
  1194                           
  1195                           ;OSC.c: 22:             OSCCONbits.IRCF0 = 0;
  1196  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  1197  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  1198  06C7  120F               	bcf	15,4	;volatile
  1199                           
  1200                           ;OSC.c: 23:             OSCCONbits.IRCF1 = 1;
  1201  06C8  168F               	bsf	15,5	;volatile
  1202                           
  1203                           ;OSC.c: 24:             OSCCONbits.IRCF2 = 0;
  1204  06C9  130F               	bcf	15,6	;volatile
  1205                           
  1206                           ;OSC.c: 25:             break;
  1207  06CA  2F11               	goto	l159
  1208  06CB                     l162:	
  1209                           ;OSC.c: 26:         case 3:
  1210                           
  1211                           
  1212                           ;OSC.c: 27:             OSCCONbits.IRCF0 = 1;
  1213  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  1214  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  1215  06CD  160F               	bsf	15,4	;volatile
  1216                           
  1217                           ;OSC.c: 28:             OSCCONbits.IRCF1 = 1;
  1218  06CE  168F               	bsf	15,5	;volatile
  1219                           
  1220                           ;OSC.c: 29:             OSCCONbits.IRCF2 = 0;
  1221  06CF  130F               	bcf	15,6	;volatile
  1222                           
  1223                           ;OSC.c: 30:             break;
  1224  06D0  2F11               	goto	l159
  1225  06D1                     l163:	
  1226                           ;OSC.c: 31:         case 4:
  1227                           
  1228                           
  1229                           ;OSC.c: 32:             OSCCONbits.IRCF0 = 0;
  1230  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  1231  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  1232  06D3  120F               	bcf	15,4	;volatile
  1233                           
  1234                           ;OSC.c: 33:             OSCCONbits.IRCF1 = 0;
  1235  06D4  128F               	bcf	15,5	;volatile
  1236                           
  1237                           ;OSC.c: 34:             OSCCONbits.IRCF2 = 1;
  1238  06D5  170F               	bsf	15,6	;volatile
  1239                           
  1240                           ;OSC.c: 35:             break;
  1241  06D6  2F11               	goto	l159
  1242  06D7                     l164:	
  1243                           ;OSC.c: 36:         case 5:
  1244                           
  1245                           
  1246                           ;OSC.c: 37:             OSCCONbits.IRCF0 = 1;
  1247  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  1248  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  1249  06D9  160F               	bsf	15,4	;volatile
  1250                           
  1251                           ;OSC.c: 38:             OSCCONbits.IRCF1 = 0;
  1252  06DA  128F               	bcf	15,5	;volatile
  1253                           
  1254                           ;OSC.c: 39:             OSCCONbits.IRCF2 = 1;
  1255  06DB  170F               	bsf	15,6	;volatile
  1256                           
  1257                           ;OSC.c: 40:             break;
  1258  06DC  2F11               	goto	l159
  1259  06DD                     l165:	
  1260                           ;OSC.c: 41:         case 6:
  1261                           
  1262                           
  1263                           ;OSC.c: 42:             OSCCONbits.IRCF0 = 0;
  1264  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  1265  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  1266  06DF  120F               	bcf	15,4	;volatile
  1267                           
  1268                           ;OSC.c: 43:             OSCCONbits.IRCF1 = 1;
  1269  06E0  168F               	bsf	15,5	;volatile
  1270                           
  1271                           ;OSC.c: 44:             OSCCONbits.IRCF2 = 1;
  1272  06E1  170F               	bsf	15,6	;volatile
  1273                           
  1274                           ;OSC.c: 45:             break;
  1275  06E2  2F11               	goto	l159
  1276  06E3                     l166:	
  1277                           ;OSC.c: 46:         case 7:
  1278                           
  1279                           
  1280                           ;OSC.c: 47:             OSCCONbits.IRCF0 = 1;
  1281  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  1282  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  1283  06E5  160F               	bsf	15,4	;volatile
  1284                           
  1285                           ;OSC.c: 48:             OSCCONbits.IRCF1 = 1;
  1286  06E6  168F               	bsf	15,5	;volatile
  1287                           
  1288                           ;OSC.c: 49:             OSCCONbits.IRCF2 = 1;
  1289  06E7  170F               	bsf	15,6	;volatile
  1290                           
  1291                           ;OSC.c: 50:             break;
  1292  06E8  2F11               	goto	l159
  1293  06E9                     l167:	
  1294                           ;OSC.c: 51:         default:
  1295                           
  1296                           
  1297                           ;OSC.c: 52:             OSCCONbits.IRCF0 = 0;
  1298  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  1299  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  1300  06EB  120F               	bcf	15,4	;volatile
  1301                           
  1302                           ;OSC.c: 53:             OSCCONbits.IRCF1 = 1;
  1303  06EC  168F               	bsf	15,5	;volatile
  1304                           
  1305                           ;OSC.c: 54:             OSCCONbits.IRCF2 = 1;
  1306  06ED  170F               	bsf	15,6	;volatile
  1307                           
  1308                           ;OSC.c: 55:             break;
  1309  06EE  2F11               	goto	l159
  1310  06EF                     l1016:
  1311  06EF  0872               	movf	InitOSC@frec,w
  1312  06F0  00F0               	movwf	??_InitOSC
  1313  06F1  01F1               	clrf	??_InitOSC+1
  1314                           
  1315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1316                           ; Switch size 1, requested type "simple"
  1317                           ; Number of cases is 1, Range of values is 0 to 0
  1318                           ; switch strategies available:
  1319                           ; Name         Instructions Cycles
  1320                           ; simple_byte            4     3 (average)
  1321                           ; direct_byte           11     8 (fixed)
  1322                           ; jumptable            260     6 (fixed)
  1323                           ;	Chosen strategy is simple_byte
  1324  06F2  0871               	movf	??_InitOSC+1,w
  1325  06F3  3A00               	xorlw	0	; case 0
  1326  06F4  1903               	skipnz
  1327  06F5  2EF7               	goto	l1132
  1328  06F6  2EE9               	goto	l167
  1329  06F7                     l1132:
  1330                           
  1331                           ; Switch size 1, requested type "simple"
  1332                           ; Number of cases is 8, Range of values is 0 to 7
  1333                           ; switch strategies available:
  1334                           ; Name         Instructions Cycles
  1335                           ; simple_byte           25    13 (average)
  1336                           ; direct_byte           32     8 (fixed)
  1337                           ; jumptable            260     6 (fixed)
  1338                           ;	Chosen strategy is simple_byte
  1339  06F7  0870               	movf	??_InitOSC,w
  1340  06F8  3A00               	xorlw	0	; case 0
  1341  06F9  1903               	skipnz
  1342  06FA  2EB9               	goto	l158
  1343  06FB  3A01               	xorlw	1	; case 1
  1344  06FC  1903               	skipnz
  1345  06FD  2EBF               	goto	l160
  1346  06FE  3A03               	xorlw	3	; case 2
  1347  06FF  1903               	skipnz
  1348  0700  2EC5               	goto	l161
  1349  0701  3A01               	xorlw	1	; case 3
  1350  0702  1903               	skipnz
  1351  0703  2ECB               	goto	l162
  1352  0704  3A07               	xorlw	7	; case 4
  1353  0705  1903               	skipnz
  1354  0706  2ED1               	goto	l163
  1355  0707  3A01               	xorlw	1	; case 5
  1356  0708  1903               	skipnz
  1357  0709  2ED7               	goto	l164
  1358  070A  3A03               	xorlw	3	; case 6
  1359  070B  1903               	skipnz
  1360  070C  2EDD               	goto	l165
  1361  070D  3A01               	xorlw	1	; case 7
  1362  070E  1903               	skipnz
  1363  070F  2EE3               	goto	l166
  1364  0710  2EE9               	goto	l167
  1365  0711                     l159:
  1366                           
  1367                           ;OSC.c: 58:     OSCCONbits.SCS = 1;
  1368  0711  140F               	bsf	15,0	;volatile
  1369  0712                     l168:
  1370  0712  0008               	return
  1371  0713                     __end_of_InitOSC:
  1372                           
  1373                           	psect	text6
  1374  060C                     __ptext6:	
  1375 ;; *************** function _I2C_M_Stop *****************
  1376 ;; Defined at:
  1377 ;;		line 43 in file "I2C.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0, pclath, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 1
  1398 ;; This function calls:
  1399 ;;		_I2C_M_Wait
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function _I2C_M_Stop
  1407  060C                     _I2C_M_Stop:
  1408  060C                     l1064:	
  1409                           ;incstack = 0
  1410                           ; Regs used in _I2C_M_Stop: [wreg+status,2+status,0+pclath+cstack]
  1411                           
  1412                           
  1413                           ;I2C.c: 44:     I2C_M_Wait();
  1414  060C  120A  118A  2621  120A  118A  	fcall	_I2C_M_Wait
  1415  0611                     l1066:
  1416                           
  1417                           ;I2C.c: 45:     SSPCON2bits.PEN = 1;
  1418  0611  1683               	bsf	3,5	;RP0=1, select bank1
  1419  0612  1303               	bcf	3,6	;RP1=0, select bank1
  1420  0613  1511               	bsf	17,2	;volatile
  1421  0614                     l105:
  1422  0614  0008               	return
  1423  0615                     __end_of_I2C_M_Stop:
  1424                           
  1425                           	psect	text7
  1426  0603                     __ptext7:	
  1427 ;; *************** function _I2C_M_Start *****************
  1428 ;; Defined at:
  1429 ;;		line 25 in file "I2C.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, pclath, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1443 ;;      Params:         0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0
  1446 ;;      Totals:         0       0       0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 1
  1450 ;; This function calls:
  1451 ;;		_I2C_M_Wait
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           
  1458                           ;psect for function _I2C_M_Start
  1459  0603                     _I2C_M_Start:
  1460  0603                     l1044:	
  1461                           ;incstack = 0
  1462                           ; Regs used in _I2C_M_Start: [wreg+status,2+status,0+pclath+cstack]
  1463                           
  1464                           
  1465                           ;I2C.c: 26:     I2C_M_Wait();
  1466  0603  120A  118A  2621  120A  118A  	fcall	_I2C_M_Wait
  1467  0608                     l1046:
  1468                           
  1469                           ;I2C.c: 27:     SSPCON2bits.SEN = 1;
  1470  0608  1683               	bsf	3,5	;RP0=1, select bank1
  1471  0609  1303               	bcf	3,6	;RP1=0, select bank1
  1472  060A  1411               	bsf	17,0	;volatile
  1473  060B                     l99:
  1474  060B  0008               	return
  1475  060C                     __end_of_I2C_M_Start:
  1476                           
  1477                           	psect	text8
  1478  0651                     __ptext8:	
  1479 ;; *************** function _I2C_M_Read *****************
  1480 ;; Defined at:
  1481 ;;		line 61 in file "I2C.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  a               2    0[COMMON] unsigned short 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  temp            2    4[COMMON] unsigned short 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  2    0[COMMON] unsigned short 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, pclath, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         2       0       0       0       0
  1496 ;;      Locals:         2       0       0       0       0
  1497 ;;      Temps:          2       0       0       0       0
  1498 ;;      Totals:         6       0       0       0       0
  1499 ;;Total ram usage:        6 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 1
  1502 ;; This function calls:
  1503 ;;		_I2C_M_Wait
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function _I2C_M_Read
  1511  0651                     _I2C_M_Read:
  1512  0651                     l1048:	
  1513                           ;incstack = 0
  1514                           ; Regs used in _I2C_M_Read: [wreg+status,2+status,0+pclath+cstack]
  1515                           
  1516                           
  1517                           ;I2C.c: 62:     unsigned short temp;;I2C.c: 63:     I2C_M_Wait();
  1518  0651  120A  118A  2621  120A  118A  	fcall	_I2C_M_Wait
  1519  0656                     l1050:
  1520                           
  1521                           ;I2C.c: 64:     RCEN = 1;
  1522  0656  1683               	bsf	3,5	;RP0=1, select bank1
  1523  0657  1303               	bcf	3,6	;RP1=0, select bank1
  1524  0658  1591               	bsf	17,3	;volatile
  1525                           
  1526                           ;I2C.c: 65:     I2C_M_Wait();
  1527  0659  120A  118A  2621  120A  118A  	fcall	_I2C_M_Wait
  1528  065E                     l1052:
  1529                           
  1530                           ;I2C.c: 66:     temp = SSPBUF;
  1531  065E  1283               	bcf	3,5	;RP0=0, select bank0
  1532  065F  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0660  0813               	movf	19,w	;volatile
  1534  0661  00F2               	movwf	??_I2C_M_Read
  1535  0662  01F3               	clrf	??_I2C_M_Read+1
  1536  0663  0872               	movf	??_I2C_M_Read,w
  1537  0664  00F4               	movwf	I2C_M_Read@temp
  1538  0665  0873               	movf	??_I2C_M_Read+1,w
  1539  0666  00F5               	movwf	I2C_M_Read@temp+1
  1540  0667                     l1054:
  1541                           
  1542                           ;I2C.c: 67:     I2C_M_Wait();
  1543  0667  120A  118A  2621  120A  118A  	fcall	_I2C_M_Wait
  1544  066C                     l1056:
  1545                           
  1546                           ;I2C.c: 68:     if(a == 1){
  1547  066C  0370               	decf	I2C_M_Read@a,w
  1548  066D  0471               	iorwf	I2C_M_Read@a+1,w
  1549  066E  1D03               	btfss	3,2
  1550  066F  2E71               	goto	u251
  1551  0670  2E72               	goto	u250
  1552  0671                     u251:
  1553  0671  2E76               	goto	l111
  1554  0672                     u250:
  1555  0672                     l1058:
  1556                           
  1557                           ;I2C.c: 69:         SSPCON2bits.ACKDT = 0;
  1558  0672  1683               	bsf	3,5	;RP0=1, select bank1
  1559  0673  1303               	bcf	3,6	;RP1=0, select bank1
  1560  0674  1291               	bcf	17,5	;volatile
  1561                           
  1562                           ;I2C.c: 70:     }
  1563  0675  2E79               	goto	l112
  1564  0676                     l111:	
  1565                           ;I2C.c: 71:     else{
  1566                           
  1567                           
  1568                           ;I2C.c: 72:         SSPCON2bits.ACKDT = 1;
  1569  0676  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0677  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0678  1691               	bsf	17,5	;volatile
  1572  0679                     l112:	
  1573                           ;I2C.c: 73:     }
  1574                           
  1575                           
  1576                           ;I2C.c: 74:     SSPCON2bits.ACKEN = 1;
  1577  0679  1611               	bsf	17,4	;volatile
  1578  067A                     l1060:
  1579                           
  1580                           ;I2C.c: 75:     return temp;
  1581  067A  0875               	movf	I2C_M_Read@temp+1,w
  1582  067B  00F1               	movwf	?_I2C_M_Read+1
  1583  067C  0874               	movf	I2C_M_Read@temp,w
  1584  067D  00F0               	movwf	?_I2C_M_Read
  1585  067E                     l113:
  1586  067E  0008               	return
  1587  067F                     __end_of_I2C_M_Read:
  1588                           
  1589                           	psect	text9
  1590  0621                     __ptext9:	
  1591 ;; *************** function _I2C_M_Wait *****************
  1592 ;; Defined at:
  1593 ;;		line 17 in file "I2C.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         0       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0
  1609 ;;      Temps:          0       0       0       0       0
  1610 ;;      Totals:         0       0       0       0       0
  1611 ;;Total ram usage:        0 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_I2C_M_Start
  1617 ;;		_I2C_M_Stop
  1618 ;;		_I2C_M_Read
  1619 ;;		_I2C_M_Restart
  1620 ;;		_I2C_M_Write
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _I2C_M_Wait
  1626  0621                     _I2C_M_Wait:
  1627  0621                     l954:	
  1628                           ;incstack = 0
  1629                           ; Regs used in _I2C_M_Wait: [wreg+status,2]
  1630                           
  1631  0621                     l93:	
  1632                           ;I2C.c: 18:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1633                           
  1634  0621  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0622  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0623  1914               	btfsc	20,2	;volatile
  1637  0624  2E26               	goto	u151
  1638  0625  2E27               	goto	u150
  1639  0626                     u151:
  1640  0626  2E21               	goto	l93
  1641  0627                     u150:
  1642  0627                     l956:
  1643  0627  0811               	movf	17,w	;volatile
  1644  0628  391F               	andlw	31
  1645  0629  1D03               	btfss	3,2
  1646  062A  2E2C               	goto	u161
  1647  062B  2E2D               	goto	u160
  1648  062C                     u161:
  1649  062C  2E21               	goto	l93
  1650  062D                     u160:
  1651  062D                     l96:
  1652  062D  0008               	return
  1653  062E                     __end_of_I2C_M_Wait:
  1654                           
  1655                           	psect	text10
  1656  067F                     __ptext10:	
  1657 ;; *************** function _I2C_Init *****************
  1658 ;; Defined at:
  1659 ;;		line 8 in file "I2C.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  a               4    0[BANK0 ] const unsigned long 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;		None
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0, pclath, cstack
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1673 ;;      Params:         0       4       0       0       0
  1674 ;;      Locals:         0       0       0       0       0
  1675 ;;      Temps:          0       4       0       0       0
  1676 ;;      Totals:         0       8       0       0       0
  1677 ;;Total ram usage:        8 bytes
  1678 ;; Hardware stack levels used: 1
  1679 ;; Hardware stack levels required when called: 1
  1680 ;; This function calls:
  1681 ;;		___lldiv
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _I2C_Init
  1689  067F                     _I2C_Init:
  1690  067F                     l1000:	
  1691                           ;incstack = 0
  1692                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  1693                           
  1694                           
  1695                           ;I2C.c: 9:     SSPCON = 0b00101000;
  1696  067F  3028               	movlw	40
  1697  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0682  0094               	movwf	20	;volatile
  1700  0683                     l1002:
  1701                           
  1702                           ;I2C.c: 10:     SSPCON2 = 0;
  1703  0683  1683               	bsf	3,5	;RP0=1, select bank1
  1704  0684  1303               	bcf	3,6	;RP1=0, select bank1
  1705  0685  0191               	clrf	17	;volatile
  1706  0686                     l1004:
  1707                           
  1708                           ;I2C.c: 11:     SSPADD = (8000000/(4*a))-1;
  1709  0686  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0687  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0688  0820               	movf	I2C_Init@a,w
  1712  0689  00A4               	movwf	??_I2C_Init
  1713  068A  0821               	movf	I2C_Init@a+1,w
  1714  068B  00A5               	movwf	??_I2C_Init+1
  1715  068C  0822               	movf	I2C_Init@a+2,w
  1716  068D  00A6               	movwf	??_I2C_Init+2
  1717  068E  0823               	movf	I2C_Init@a+3,w
  1718  068F  00A7               	movwf	??_I2C_Init+3
  1719  0690  3002               	movlw	2
  1720  0691                     u245:
  1721  0691  1003               	clrc
  1722  0692  0DA4               	rlf	??_I2C_Init,f
  1723  0693  0DA5               	rlf	??_I2C_Init+1,f
  1724  0694  0DA6               	rlf	??_I2C_Init+2,f
  1725  0695  0DA7               	rlf	??_I2C_Init+3,f
  1726  0696                     u240:
  1727  0696  3EFF               	addlw	-1
  1728  0697  1D03               	skipz
  1729  0698  2E91               	goto	u245
  1730  0699  0827               	movf	??_I2C_Init+3,w
  1731  069A  00F3               	movwf	___lldiv@divisor+3
  1732  069B  0826               	movf	??_I2C_Init+2,w
  1733  069C  00F2               	movwf	___lldiv@divisor+2
  1734  069D  0825               	movf	??_I2C_Init+1,w
  1735  069E  00F1               	movwf	___lldiv@divisor+1
  1736  069F  0824               	movf	??_I2C_Init,w
  1737  06A0  00F0               	movwf	___lldiv@divisor
  1738  06A1  3000               	movlw	0
  1739  06A2  00F7               	movwf	___lldiv@dividend+3
  1740  06A3  307A               	movlw	122
  1741  06A4  00F6               	movwf	___lldiv@dividend+2
  1742  06A5  3012               	movlw	18
  1743  06A6  00F5               	movwf	___lldiv@dividend+1
  1744  06A7  3000               	movlw	0
  1745  06A8  00F4               	movwf	___lldiv@dividend
  1746  06A9  120A  118A  2713  120A  118A  	fcall	___lldiv
  1747  06AE  0870               	movf	?___lldiv,w
  1748  06AF  3EFF               	addlw	255
  1749  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  1750  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  1751  06B2  0093               	movwf	19	;volatile
  1752  06B3                     l1006:
  1753                           
  1754                           ;I2C.c: 12:     SSPSTAT = 0;
  1755  06B3  0194               	clrf	20	;volatile
  1756  06B4                     l1008:
  1757                           
  1758                           ;I2C.c: 13:     TRISCbits.TRISC3 = 1;
  1759  06B4  1587               	bsf	7,3	;volatile
  1760  06B5                     l1010:
  1761                           
  1762                           ;I2C.c: 14:     TRISCbits.TRISC4 = 1;
  1763  06B5  1607               	bsf	7,4	;volatile
  1764  06B6                     l90:
  1765  06B6  0008               	return
  1766  06B7                     __end_of_I2C_Init:
  1767                           
  1768                           	psect	text11
  1769  0713                     __ptext11:	
  1770 ;; *************** function ___lldiv *****************
  1771 ;; Defined at:
  1772 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;  divisor         4    0[COMMON] unsigned long 
  1775 ;;  dividend        4    4[COMMON] unsigned long 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  quotient        4    9[COMMON] unsigned long 
  1778 ;;  counter         1   13[COMMON] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  4    0[COMMON] unsigned long 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         8       0       0       0       0
  1789 ;;      Locals:         5       0       0       0       0
  1790 ;;      Temps:          1       0       0       0       0
  1791 ;;      Totals:        14       0       0       0       0
  1792 ;;Total ram usage:       14 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_I2C_Init
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function ___lldiv
  1803  0713                     ___lldiv:
  1804  0713                     l958:	
  1805                           ;incstack = 0
  1806                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1807                           
  1808  0713  3000               	movlw	0
  1809  0714  00FC               	movwf	___lldiv@quotient+3
  1810  0715  3000               	movlw	0
  1811  0716  00FB               	movwf	___lldiv@quotient+2
  1812  0717  3000               	movlw	0
  1813  0718  00FA               	movwf	___lldiv@quotient+1
  1814  0719  3000               	movlw	0
  1815  071A  00F9               	movwf	___lldiv@quotient
  1816  071B  0873               	movf	___lldiv@divisor+3,w
  1817  071C  0472               	iorwf	___lldiv@divisor+2,w
  1818  071D  0471               	iorwf	___lldiv@divisor+1,w
  1819  071E  0470               	iorwf	___lldiv@divisor,w
  1820  071F  1903               	skipnz
  1821  0720  2F22               	goto	u171
  1822  0721  2F23               	goto	u170
  1823  0722                     u171:
  1824  0722  2F70               	goto	l978
  1825  0723                     u170:
  1826  0723                     l960:
  1827  0723  01FD               	clrf	___lldiv@counter
  1828  0724  0AFD               	incf	___lldiv@counter,f
  1829  0725  2F33               	goto	l964
  1830  0726                     l962:
  1831  0726  3001               	movlw	1
  1832  0727  00F8               	movwf	??___lldiv
  1833  0728                     u185:
  1834  0728  1003               	clrc
  1835  0729  0DF0               	rlf	___lldiv@divisor,f
  1836  072A  0DF1               	rlf	___lldiv@divisor+1,f
  1837  072B  0DF2               	rlf	___lldiv@divisor+2,f
  1838  072C  0DF3               	rlf	___lldiv@divisor+3,f
  1839  072D  0BF8               	decfsz	??___lldiv,f
  1840  072E  2F28               	goto	u185
  1841  072F  3001               	movlw	1
  1842  0730  00F8               	movwf	??___lldiv
  1843  0731  0878               	movf	??___lldiv,w
  1844  0732  07FD               	addwf	___lldiv@counter,f
  1845  0733                     l964:
  1846  0733  1FF3               	btfss	___lldiv@divisor+3,7
  1847  0734  2F36               	goto	u191
  1848  0735  2F37               	goto	u190
  1849  0736                     u191:
  1850  0736  2F26               	goto	l962
  1851  0737                     u190:
  1852  0737                     l966:
  1853  0737  3001               	movlw	1
  1854  0738  00F8               	movwf	??___lldiv
  1855  0739                     u205:
  1856  0739  1003               	clrc
  1857  073A  0DF9               	rlf	___lldiv@quotient,f
  1858  073B  0DFA               	rlf	___lldiv@quotient+1,f
  1859  073C  0DFB               	rlf	___lldiv@quotient+2,f
  1860  073D  0DFC               	rlf	___lldiv@quotient+3,f
  1861  073E  0BF8               	decfsz	??___lldiv,f
  1862  073F  2F39               	goto	u205
  1863  0740                     l968:
  1864  0740  0873               	movf	___lldiv@divisor+3,w
  1865  0741  0277               	subwf	___lldiv@dividend+3,w
  1866  0742  1D03               	skipz
  1867  0743  2F4E               	goto	u215
  1868  0744  0872               	movf	___lldiv@divisor+2,w
  1869  0745  0276               	subwf	___lldiv@dividend+2,w
  1870  0746  1D03               	skipz
  1871  0747  2F4E               	goto	u215
  1872  0748  0871               	movf	___lldiv@divisor+1,w
  1873  0749  0275               	subwf	___lldiv@dividend+1,w
  1874  074A  1D03               	skipz
  1875  074B  2F4E               	goto	u215
  1876  074C  0870               	movf	___lldiv@divisor,w
  1877  074D  0274               	subwf	___lldiv@dividend,w
  1878  074E                     u215:
  1879  074E  1C03               	skipc
  1880  074F  2F51               	goto	u211
  1881  0750  2F52               	goto	u210
  1882  0751                     u211:
  1883  0751  2F61               	goto	l974
  1884  0752                     u210:
  1885  0752                     l970:
  1886  0752  0870               	movf	___lldiv@divisor,w
  1887  0753  02F4               	subwf	___lldiv@dividend,f
  1888  0754  0871               	movf	___lldiv@divisor+1,w
  1889  0755  1C03               	skipc
  1890  0756  0F71               	incfsz	___lldiv@divisor+1,w
  1891  0757  02F5               	subwf	___lldiv@dividend+1,f
  1892  0758  0872               	movf	___lldiv@divisor+2,w
  1893  0759  1C03               	skipc
  1894  075A  0F72               	incfsz	___lldiv@divisor+2,w
  1895  075B  02F6               	subwf	___lldiv@dividend+2,f
  1896  075C  0873               	movf	___lldiv@divisor+3,w
  1897  075D  1C03               	skipc
  1898  075E  0F73               	incfsz	___lldiv@divisor+3,w
  1899  075F  02F7               	subwf	___lldiv@dividend+3,f
  1900  0760                     l972:
  1901  0760  1479               	bsf	___lldiv@quotient,0
  1902  0761                     l974:
  1903  0761  3001               	movlw	1
  1904  0762                     u225:
  1905  0762  1003               	clrc
  1906  0763  0CF3               	rrf	___lldiv@divisor+3,f
  1907  0764  0CF2               	rrf	___lldiv@divisor+2,f
  1908  0765  0CF1               	rrf	___lldiv@divisor+1,f
  1909  0766  0CF0               	rrf	___lldiv@divisor,f
  1910  0767  3EFF               	addlw	-1
  1911  0768  1D03               	skipz
  1912  0769  2F62               	goto	u225
  1913  076A                     l976:
  1914  076A  3001               	movlw	1
  1915  076B  02FD               	subwf	___lldiv@counter,f
  1916  076C  1D03               	btfss	3,2
  1917  076D  2F6F               	goto	u231
  1918  076E  2F70               	goto	u230
  1919  076F                     u231:
  1920  076F  2F37               	goto	l966
  1921  0770                     u230:
  1922  0770                     l978:
  1923  0770  087C               	movf	___lldiv@quotient+3,w
  1924  0771  00F3               	movwf	?___lldiv+3
  1925  0772  087B               	movf	___lldiv@quotient+2,w
  1926  0773  00F2               	movwf	?___lldiv+2
  1927  0774  087A               	movf	___lldiv@quotient+1,w
  1928  0775  00F1               	movwf	?___lldiv+1
  1929  0776  0879               	movf	___lldiv@quotient,w
  1930  0777  00F0               	movwf	?___lldiv
  1931  0778                     l290:
  1932  0778  0008               	return
  1933  0779                     __end_of___lldiv:
  1934  007E                     btemp	set	126	;btemp
  1935  007E                     wtemp0	set	126
  1936                           
  1937                           	psect	config
  1938                           
  1939                           ;Config register CONFIG1 @ 0x2007
  1940                           ;	Oscillator Selection bits
  1941                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1942                           ;	Watchdog Timer Enable bit
  1943                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1944                           ;	Power-up Timer Enable bit
  1945                           ;	PWRTE = OFF, PWRT disabled
  1946                           ;	RE3/MCLR pin function select bit
  1947                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1948                           ;	Code Protection bit
  1949                           ;	CP = OFF, Program memory code protection is disabled
  1950                           ;	Data Code Protection bit
  1951                           ;	CPD = OFF, Data memory code protection is disabled
  1952                           ;	Brown Out Reset Selection bits
  1953                           ;	BOREN = OFF, BOR disabled
  1954                           ;	Internal External Switchover bit
  1955                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1956                           ;	Fail-Safe Clock Monitor Enabled bit
  1957                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1958                           ;	Low Voltage Programming Enable bit
  1959                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1960                           ;	In-Circuit Debugger Mode bit
  1961                           ;	DEBUG = 0x1, unprogrammed default
  1962  2007                     	org	8199
  1963  2007  20D4               	dw	8404
  1964                           
  1965                           ;Config register CONFIG2 @ 0x2008
  1966                           ;	Brown-out Reset Selection bit
  1967                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1968                           ;	Flash Program Memory Self Write Enable bits
  1969                           ;	WRT = OFF, Write protection off
  1970  2008                     	org	8200
  1971  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     577
                                              8 BANK0      3     3      0
                           _I2C_Init
                         _I2C_M_Read
                        _I2C_M_Start
                         _I2C_M_Stop
                            _InitOSC
                        _SERIAL_Init
                          _UART_READ
                         _UART_Write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SERIAL_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitOSC                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_M_Stop                                           0     0      0       0
                         _I2C_M_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_M_Start                                          0     0      0       0
                         _I2C_M_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_M_Read                                           6     4      2     121
                                              0 COMMON     6     4      2
                         _I2C_M_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_M_Wait                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_M_Read
     _I2C_M_Wait
   _I2C_M_Start
     _I2C_M_Wait
   _I2C_M_Stop
     _I2C_M_Wait
   _InitOSC
   _SERIAL_Init
   _UART_READ
   _UART_Write
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       E       5       17.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Mar 07 20:47:57 2021

    __size_of_I2C_M_Read 002E      __size_of_I2C_M_Wait 000D      __size_of_I2C_M_Stop 0009  
                     l52 07F1                       l90 06B6                       l59 063D  
                     l93 0621                       l96 062D                       l99 060B  
   __size_of_I2C_M_Start 0009                      l111 0676                      l112 0679  
                    l113 067E                      l105 0614                      l140 05FB  
                    l143 0602                      l160 06BF                      l152 0620  
                    l161 06C5                      l137 0650                      l162 06CB  
                    l163 06D1                      l164 06D7                      l165 06DD  
                    l149 0616                      l166 06E3                      l158 06B9  
                    l167 06E9                      l159 0711                      l168 0712  
                    l290 0778                      l960 0723                      l970 0752  
                    l962 0726                      l954 0621                      l972 0760  
                    l964 0733                      l956 0627                      l974 0761  
                    l966 0737                      l958 0713                      l990 0636  
                    l982 062E                      l976 076A                      l968 0740  
                    l992 0639                      l984 0632                      l978 0770  
                    l994 063A                      l986 0634                      _GIE 005F  
                    l996 063B                      l988 0635                      l998 063C  
                    u210 0752                      u211 0751                      u205 0739  
                    u230 0770                      u150 0627                      u231 076F  
                    u215 074E                      u151 0626                      u240 0696  
                    u160 062D                      u225 0762                      u161 062C  
                    u170 0723                      u250 0672                      u171 0722  
                    u251 0671                      u307 07CD                      u260 061C  
                    u245 0691                      u261 061B                      u317 07E2  
                    u190 0737                      u270 0601                      u191 0736  
                    u271 0600                      u280 07EE                      u185 0728  
                    u281 07ED                      u297 07B8                     l1000 067F  
                   l1010 06B5                     l1002 0683                     l1004 0686  
                   l1012 06B8                     l1100 07E7                     l1006 06B3  
                   l1030 0645                     l1022 063E                     l1102 07EE  
                   l1008 06B4                     l1016 06EF                     l1040 064E  
                   l1032 0646                     l1024 0642                     l1050 0656  
                   l1042 064F                     l1034 0649                     l1026 0643  
                   l1060 067A                     l1052 065E                     l1044 0603  
                   l1132 06F7                     l1036 064A                     l1028 0644  
                   l1054 0667                     l1046 0608                     l1038 064B  
                   l1070 061C                     l1056 066C                     l1048 0651  
                   l1064 060C                     l1072 05FB                     l1080 078D  
                   l1058 0672                     l1066 0611                     l1074 0601  
                   l1090 07B0                     l1082 0793                     l1068 0616  
                   l1092 07BF                     l1084 0798                     l1094 07C7  
                   l1086 079D                     l1078 0779                     l1096 07D2  
                   l1088 07AB                     l1098 07DC                     _PEIE 005E  
                   _RCEN 048B                     _RCIF 0065                     _TRMT 04C1  
            InitOSC@frec 0072                     _main 0779         __end_of_I2C_Init 06B7  
                   btemp 007E                     start 0000          __end_of_InitOSC 0713  
                  ?_main 0070          __end_of___lldiv 0779                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIE 0463                    _TRISE 0089  
                  _SSPIF 0063                    _TXREG 0019       __size_of_UART_READ 0008  
            ?_UART_Write 0070                    _setup 062E                    status 0003  
                  wtemp0 007E             ?_SERIAL_Init 0070          __initialization 07F7  
           __end_of_main 07F7                   ??_main 0028           I2C_M_Read@temp 0074  
              I2C_Init@a 0020             ??_I2C_M_Read 0072             ??_I2C_M_Wait 0070  
           ??_I2C_M_Stop 0070                   ?_setup 0070                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013                ??_InitOSC 0070                   _Estado 002D  
      __end_of_UART_READ 0603      __size_of_UART_Write 000C                ??___lldiv 0078  
     __end_of_I2C_M_Read 067F       __end_of_I2C_M_Wait 062E       __end_of_I2C_M_Stop 0615  
                 _sensor 002B                ?_I2C_Init 0020  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 063E               ??_I2C_Init 0024  
                ??_setup 0070               __pbssBANK0 002B               __pmaintext 0779  
          ??_I2C_M_Start 0070     __size_of_SERIAL_Init 0013             ??_UART_Write 0070  
                _SSPCON2 0091                  _SSPSTAT 0094                  _InitOSC 06B7  
                ___lldiv 0713       __end_of_UART_Write 0621                  __ptext1 062E  
                __ptext2 0615                  __ptext3 05FB                  __ptext4 063E  
                __ptext5 06B7                  __ptext6 060C                  __ptext7 0603  
                __ptext8 0651                  __ptext9 0621      __end_of_I2C_M_Start 060C  
            UART_Write@a 0070     end_of_initialization 07FC          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                _RCSTAbits 0018                _UART_READ 05FB  
              _PORTBbits 0006                _TRISCbits 0087        __size_of_I2C_Init 0038  
              _TXSTAbits 0098              _I2C_M_Start 0603               ?_UART_READ 0070  
    start_initialization 07F7                ___latbits 0002            __pcstackBANK0 0020  
            I2C_M_Read@a 0070                 ?_InitOSC 0070            ??_SERIAL_Init 0070  
               ?___lldiv 0070              ??_UART_READ 0070                 _I2C_Init 067F  
         __size_of_setup 0010                 _PIE1bits 008C      __end_of_SERIAL_Init 0651  
             _I2C_M_Read 0651               _I2C_M_Wait 0621               _I2C_M_Stop 060C  
       __size_of_InitOSC 005C             ?_I2C_M_Start 0070         __size_of___lldiv 0066  
               __ptext10 067F                 __ptext11 0713            __size_of_main 007E  
            _SERIAL_Init 063E               _INTCONbits 000B              ?_I2C_M_Read 0070  
            ?_I2C_M_Wait 0070              ?_I2C_M_Stop 0070         ___lldiv@dividend 0074  
             _OSCCONbits 008F         ___lldiv@quotient 0079               _UART_Write 0615  
            _SSPCON2bits 0091  
