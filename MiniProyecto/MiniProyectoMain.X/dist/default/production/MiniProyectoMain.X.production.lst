

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 21:36:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0019                     _TXREG	set	25
   453  0018                     _RCSTAbits	set	24
   454  000B                     _INTCONbits	set	11
   455  0009                     _PORTE	set	9
   456  0008                     _PORTD	set	8
   457  0007                     _PORTC	set	7
   458  0005                     _PORTA	set	5
   459  0006                     _PORTBbits	set	6
   460  0006                     _PORTB	set	6
   461  001A                     _RCREG	set	26
   462  0013                     _SSPBUF	set	19
   463  0014                     _SSPCON	set	20
   464  004A                     _RE2	set	74
   465  0049                     _RE1	set	73
   466  0048                     _RE0	set	72
   467  0065                     _RCIF	set	101
   468  0098                     _TXSTAbits	set	152
   469  0099                     _SPBRG	set	153
   470  008C                     _PIE1bits	set	140
   471  0089                     _TRISE	set	137
   472  0088                     _TRISD	set	136
   473  0087                     _TRISC	set	135
   474  0086                     _TRISB	set	134
   475  0085                     _TRISA	set	133
   476  0094                     _SSPSTATbits	set	148
   477  0094                     _SSPSTAT	set	148
   478  04C1                     _TRMT	set	1217
   479  043B                     _TRISC3	set	1083
   480  043C                     _TRISC4	set	1084
   481  043D                     _TRISC5	set	1085
   482  0189                     _ANSELH	set	393
   483  0188                     _ANSEL	set	392
   484                           
   485                           	psect	strings
   486  030F                     __pstrings:
   487  030F                     stringtab:
   488  030F                     __stringtab:
   489  030F                     stringcode:	
   490                           ;	String table - string pointers are 1 byte each
   491                           
   492  030F                     stringdir:
   493  030F  3003               	movlw	high stringdir
   494  0310  008A               	movwf	10
   495  0311  0804               	movf	4,w
   496  0312  0A84               	incf	4,f
   497  0313  0782               	addwf	2,f
   498  0314                     __stringbase:
   499  0314  3400               	retlw	0
   500  0315                     __end_of__stringtab:
   501  0315                     STR_1:
   502  0315  3453               	retlw	83	;'S'
   503  0316  3431               	retlw	49	;'1'
   504  0317  3420               	retlw	32	;' '
   505  0318  3420               	retlw	32	;' '
   506  0319  3420               	retlw	32	;' '
   507  031A  3420               	retlw	32	;' '
   508  031B  3453               	retlw	83	;'S'
   509  031C  3432               	retlw	50	;'2'
   510  031D  3420               	retlw	32	;' '
   511  031E  3420               	retlw	32	;' '
   512  031F  3420               	retlw	32	;' '
   513  0320  3420               	retlw	32	;' '
   514  0321  3453               	retlw	83	;'S'
   515  0322  3433               	retlw	51	;'3'
   516  0323  3420               	retlw	32	;' '
   517  0324  3420               	retlw	32	;' '
   518  0325  3400               	retlw	0
   519  0324                     
   520                           	psect	cinit
   521  0013                     start_initialization:	
   522                           ; #config settings
   523                           
   524  0013                     __initialization:
   525                           
   526                           ; Clear objects allocated to BANK0
   527  0013  1283               	bcf	3,5	;RP0=0, select bank0
   528  0014  1303               	bcf	3,6	;RP1=0, select bank0
   529  0015  01B5               	clrf	__pbssBANK0& (0+127)
   530  0016  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   531  0017  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   532  0018  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   533  0019  01B9               	clrf	(__pbssBANK0+4)& (0+127)
   534  001A  01BA               	clrf	(__pbssBANK0+5)& (0+127)
   535  001B  01BB               	clrf	(__pbssBANK0+6)& (0+127)
   536  001C  01BC               	clrf	(__pbssBANK0+7)& (0+127)
   537  001D  01BD               	clrf	(__pbssBANK0+8)& (0+127)
   538  001E  01BE               	clrf	(__pbssBANK0+9)& (0+127)
   539  001F  01BF               	clrf	(__pbssBANK0+10)& (0+127)
   540  0020  01C0               	clrf	(__pbssBANK0+11)& (0+127)
   541  0021  01C1               	clrf	(__pbssBANK0+12)& (0+127)
   542  0022  01C2               	clrf	(__pbssBANK0+13)& (0+127)
   543  0023                     end_of_initialization:	
   544                           ;End of C runtime variable initialization code
   545                           
   546  0023                     __end_of__initialization:
   547  0023  0183               	clrf	3
   548  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   549                           
   550                           	psect	bssBANK0
   551  0035                     __pbssBANK0:
   552  0035                     _Destination:
   553  0035                     	ds	2
   554  0037                     _O:
   555  0037                     	ds	2
   556  0039                     _Contador:
   557  0039                     	ds	1
   558  003A                     _Slave3:
   559  003A                     	ds	1
   560  003B                     _Slave2:
   561  003B                     	ds	1
   562  003C                     _Slave1:
   563  003C                     	ds	1
   564  003D                     _Ready:
   565  003D                     	ds	1
   566  003E                     _COMPARE:
   567  003E                     	ds	5
   568                           
   569                           	psect	cstackCOMMON
   570  0070                     __pcstackCOMMON:
   571  0070                     ?_setup:
   572  0070                     ?_Lcd_Init:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_SERIAL_Init:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_Lcd_Write_String:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_Lcd_Cmd:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_Lcd_Write_Char:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_SPI_Read:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_ISR:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_main:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_CONTADOR:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?___lwdiv:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     ?___lwmod:	
   603                           ; 2 bytes @ 0x0
   604                           
   605  0070                     CONTADOR@n:	
   606                           ; 2 bytes @ 0x0
   607                           
   608  0070                     ___lwdiv@divisor:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0070                     ___lwmod@divisor:	
   612                           ; 2 bytes @ 0x0
   613                           
   614                           
   615                           ; 2 bytes @ 0x0
   616  0070                     	ds	2
   617  0072                     ??_CONTADOR:
   618  0072                     ___lwdiv@dividend:	
   619                           ; 1 bytes @ 0x2
   620                           
   621  0072                     ___lwmod@dividend:	
   622                           ; 2 bytes @ 0x2
   623                           
   624                           
   625                           ; 2 bytes @ 0x2
   626  0072                     	ds	2
   627  0074                     ??___lwdiv:
   628  0074                     ??___lwmod:	
   629                           ; 1 bytes @ 0x4
   630                           
   631                           
   632                           ; 1 bytes @ 0x4
   633  0074                     	ds	1
   634  0075                     ___lwmod@counter:
   635  0075                     ___lwdiv@quotient:	
   636                           ; 1 bytes @ 0x5
   637                           
   638                           
   639                           ; 2 bytes @ 0x5
   640  0075                     	ds	2
   641  0077                     ___lwdiv@counter:
   642                           
   643                           ; 1 bytes @ 0x7
   644  0077                     	ds	1
   645  0078                     ?_utoa:
   646  0078                     utoa@val:	
   647                           ; 1 bytes @ 0x8
   648                           
   649                           
   650                           ; 2 bytes @ 0x8
   651  0078                     	ds	2
   652  007A                     utoa@base:
   653                           
   654                           ; 2 bytes @ 0xA
   655  007A                     	ds	2
   656  007C                     ??_utoa:
   657                           
   658                           ; 1 bytes @ 0xC
   659  007C                     	ds	1
   660  007D                     ??_itoa:
   661                           
   662                           ; 1 bytes @ 0xD
   663  007D                     	ds	1
   664                           
   665                           	psect	cstackBANK0
   666  0020                     __pcstackBANK0:
   667  0020                     utoa@v:
   668                           
   669                           ; 2 bytes @ 0x0
   670  0020                     	ds	2
   671  0022                     utoa@c:
   672                           
   673                           ; 1 bytes @ 0x2
   674  0022                     	ds	1
   675  0023                     utoa@buf:
   676                           
   677                           ; 1 bytes @ 0x3
   678  0023                     	ds	1
   679  0024                     ?_itoa:
   680  0024                     itoa@val:	
   681                           ; 1 bytes @ 0x4
   682                           
   683                           
   684                           ; 2 bytes @ 0x4
   685  0024                     	ds	2
   686  0026                     itoa@base:
   687                           
   688                           ; 2 bytes @ 0x6
   689  0026                     	ds	3
   690  0029                     itoa@buf:
   691                           
   692                           ; 1 bytes @ 0x9
   693  0029                     	ds	1
   694  002A                     ??_ISR:
   695                           
   696                           ; 1 bytes @ 0xA
   697  002A                     	ds	5
   698  002F                     ??_setup:
   699  002F                     ??_SERIAL_Init:	
   700                           ; 1 bytes @ 0xF
   701                           
   702  002F                     ??_Lcd_Cmd:	
   703                           ; 1 bytes @ 0xF
   704                           
   705  002F                     ??_Lcd_Write_Char:	
   706                           ; 1 bytes @ 0xF
   707                           
   708  002F                     ?_SPI_Init:	
   709                           ; 1 bytes @ 0xF
   710                           
   711  002F                     ??_SPI_Read:	
   712                           ; 1 bytes @ 0xF
   713                           
   714  002F                     SPI_Init@sDataSample:	
   715                           ; 1 bytes @ 0xF
   716                           
   717                           
   718                           ; 1 bytes @ 0xF
   719  002F                     	ds	1
   720  0030                     SPI_Init@sClockIdle:
   721                           
   722                           ; 1 bytes @ 0x10
   723  0030                     	ds	1
   724  0031                     SPI_Init@sTransmitEdge:
   725  0031                     Lcd_Cmd@a:	
   726                           ; 1 bytes @ 0x11
   727                           
   728  0031                     Lcd_Write_Char@a:	
   729                           ; 1 bytes @ 0x11
   730                           
   731                           
   732                           ; 1 bytes @ 0x11
   733  0031                     	ds	1
   734  0032                     ??_Lcd_Init:
   735  0032                     ??_Lcd_Write_String:	
   736                           ; 1 bytes @ 0x12
   737                           
   738  0032                     ??_SPI_Init:	
   739                           ; 1 bytes @ 0x12
   740                           
   741  0032                     SPI_Init@sType:	
   742                           ; 1 bytes @ 0x12
   743                           
   744                           
   745                           ; 1 bytes @ 0x12
   746  0032                     	ds	1
   747  0033                     Lcd_Write_String@a:
   748                           
   749                           ; 1 bytes @ 0x13
   750  0033                     	ds	1
   751  0034                     ??_main:
   752                           
   753                           ; 1 bytes @ 0x14
   754  0034                     	ds	1
   755                           
   756                           	psect	maintext
   757  0027                     __pmaintext:	
   758 ;;
   759 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   760 ;;
   761 ;; *************** function _main *****************
   762 ;; Defined at:
   763 ;;		line 79 in file "Master.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : B00/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0
   779 ;;      Temps:          0       1       0       0       0
   780 ;;      Totals:         0       1       0       0       0
   781 ;;Total ram usage:        1 bytes
   782 ;; Hardware stack levels required when called:    6
   783 ;; This function calls:
   784 ;;		_Lcd_Cmd
   785 ;;		_Lcd_Init
   786 ;;		_Lcd_Write_Char
   787 ;;		_Lcd_Write_String
   788 ;;		_SERIAL_Init
   789 ;;		_SPI_Init
   790 ;;		_SPI_Read
   791 ;;		_setup
   792 ;; This function is called by:
   793 ;;		Startup code after reset
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _main
   799  0027                     _main:
   800  0027                     l1347:	
   801                           ;incstack = 0
   802                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   803                           
   804                           
   805                           ;Master.c: 81:     setup();
   806  0027  120A  118A  22F5  120A  118A  	fcall	_setup
   807  002C                     l116:	
   808                           ;Master.c: 87:     while (1) {
   809                           
   810                           
   811                           ;Master.c: 88:         Lcd_Init();
   812  002C  120A  118A  22D6  120A  118A  	fcall	_Lcd_Init
   813                           
   814                           ;Master.c: 89:         SPI_Init(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
   815  0031  1283               	bcf	3,5	;RP0=0, select bank0
   816  0032  1303               	bcf	3,6	;RP1=0, select bank0
   817  0033  01AF               	clrf	SPI_Init@sDataSample
   818  0034  01B0               	clrf	SPI_Init@sClockIdle
   819  0035  01B1               	clrf	SPI_Init@sTransmitEdge
   820  0036  3020               	movlw	32
   821  0037  120A  118A  22B7  120A  118A  	fcall	_SPI_Init
   822                           
   823                           ;Master.c: 90:         SERIAL_Init();
   824  003C  120A  118A  2326  120A  118A  	fcall	_SERIAL_Init
   825  0041                     l1349:
   826                           
   827                           ;Master.c: 92:         Lcd_Write_String("S1    S2    S3  ");
   828  0041  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   829  0042  120A  118A  2294  120A  118A  	fcall	_Lcd_Write_String
   830  0047                     l1351:
   831                           
   832                           ;Master.c: 93:         Lcd_Cmd(0xC0);
   833  0047  30C0               	movlw	192
   834  0048  120A  118A  21C1  120A  118A  	fcall	_Lcd_Cmd
   835  004D                     l1353:
   836                           
   837                           ;Master.c: 95:         PORTB = 0;
   838  004D  1283               	bcf	3,5	;RP0=0, select bank0
   839  004E  1303               	bcf	3,6	;RP1=0, select bank0
   840  004F  0186               	clrf	6	;volatile
   841  0050                     l1355:
   842                           
   843                           ;Master.c: 97:         PORTBbits.RB0 = 1;
   844  0050  1406               	bsf	6,0	;volatile
   845  0051                     l1357:
   846                           
   847                           ;Master.c: 98:         _delay((unsigned long)((1)*(4000000/4000.0)));
   848  0051  30C7               	movlw	199
   849  0052  1283               	bcf	3,5	;RP0=0, select bank0
   850  0053  1303               	bcf	3,6	;RP1=0, select bank0
   851  0054  00B4               	movwf	??_main
   852  0055                     u537:
   853  0055  2856               	nop2
   854  0056  0BB4               	decfsz	??_main,f
   855  0057  2855               	goto	u537
   856  0058  2859               	nop2
   857  0059                     l1359:
   858                           
   859                           ;Master.c: 100:         Slave1 = SPI_Read();
   860  0059  120A  118A  2344  120A  118A  	fcall	_SPI_Read
   861  005E  1283               	bcf	3,5	;RP0=0, select bank0
   862  005F  1303               	bcf	3,6	;RP1=0, select bank0
   863  0060  00B4               	movwf	??_main
   864  0061  0834               	movf	??_main,w
   865  0062  00BC               	movwf	_Slave1
   866  0063                     l1361:
   867                           
   868                           ;Master.c: 101:         Lcd_Write_Char(Slave1);
   869  0063  083C               	movf	_Slave1,w
   870  0064  120A  118A  217E  120A  118A  	fcall	_Lcd_Write_Char
   871  0069                     l1363:
   872                           
   873                           ;Master.c: 103:         _delay((unsigned long)((1)*(4000000/4000.0)));
   874  0069  30C7               	movlw	199
   875  006A  1283               	bcf	3,5	;RP0=0, select bank0
   876  006B  1303               	bcf	3,6	;RP1=0, select bank0
   877  006C  00B4               	movwf	??_main
   878  006D                     u547:
   879  006D  286E               	nop2
   880  006E  0BB4               	decfsz	??_main,f
   881  006F  286D               	goto	u547
   882  0070  2871               	nop2
   883  0071                     l1365:
   884                           
   885                           ;Master.c: 104:         PORTBbits.RB0 = 0;
   886  0071  1283               	bcf	3,5	;RP0=0, select bank0
   887  0072  1303               	bcf	3,6	;RP1=0, select bank0
   888  0073  1006               	bcf	6,0	;volatile
   889  0074                     l1367:
   890                           
   891                           ;Master.c: 105:         Lcd_Write_String(" ");
   892  0074  3010               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
   893  0075  120A  118A  2294  120A  118A  	fcall	_Lcd_Write_String
   894  007A                     l1369:
   895                           
   896                           ;Master.c: 106:         PORTBbits.RB1 = 1;
   897  007A  1283               	bcf	3,5	;RP0=0, select bank0
   898  007B  1303               	bcf	3,6	;RP1=0, select bank0
   899  007C  1486               	bsf	6,1	;volatile
   900  007D                     l1371:
   901                           
   902                           ;Master.c: 107:         _delay((unsigned long)((1)*(4000000/4000.0)));
   903  007D  30C7               	movlw	199
   904  007E  1283               	bcf	3,5	;RP0=0, select bank0
   905  007F  1303               	bcf	3,6	;RP1=0, select bank0
   906  0080  00B4               	movwf	??_main
   907  0081                     u557:
   908  0081  2882               	nop2
   909  0082  0BB4               	decfsz	??_main,f
   910  0083  2881               	goto	u557
   911  0084  2885               	nop2
   912  0085                     l1373:
   913                           
   914                           ;Master.c: 109:         Slave2 = SPI_Read();
   915  0085  120A  118A  2344  120A  118A  	fcall	_SPI_Read
   916  008A  1283               	bcf	3,5	;RP0=0, select bank0
   917  008B  1303               	bcf	3,6	;RP1=0, select bank0
   918  008C  00B4               	movwf	??_main
   919  008D  0834               	movf	??_main,w
   920  008E  00BB               	movwf	_Slave2
   921  008F                     l1375:
   922                           
   923                           ;Master.c: 110:         Lcd_Write_Char(Slave2);
   924  008F  083B               	movf	_Slave2,w
   925  0090  120A  118A  217E  120A  118A  	fcall	_Lcd_Write_Char
   926  0095                     l1377:
   927                           
   928                           ;Master.c: 112:         _delay((unsigned long)((1)*(4000000/4000.0)));
   929  0095  30C7               	movlw	199
   930  0096  1283               	bcf	3,5	;RP0=0, select bank0
   931  0097  1303               	bcf	3,6	;RP1=0, select bank0
   932  0098  00B4               	movwf	??_main
   933  0099                     u567:
   934  0099  289A               	nop2
   935  009A  0BB4               	decfsz	??_main,f
   936  009B  2899               	goto	u567
   937  009C  289D               	nop2
   938  009D                     l1379:
   939                           
   940                           ;Master.c: 113:         PORTBbits.RB1 = 0;
   941  009D  1283               	bcf	3,5	;RP0=0, select bank0
   942  009E  1303               	bcf	3,6	;RP1=0, select bank0
   943  009F  1086               	bcf	6,1	;volatile
   944  00A0                     l1381:
   945                           
   946                           ;Master.c: 114:         Lcd_Write_String(" ");
   947  00A0  3010               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
   948  00A1  120A  118A  2294  120A  118A  	fcall	_Lcd_Write_String
   949  00A6                     l1383:
   950                           
   951                           ;Master.c: 115:         PORTBbits.RB2 = 1;
   952  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   953  00A7  1303               	bcf	3,6	;RP1=0, select bank0
   954  00A8  1506               	bsf	6,2	;volatile
   955  00A9                     l1385:
   956                           
   957                           ;Master.c: 116:         _delay((unsigned long)((1)*(4000000/4000.0)));
   958  00A9  30C7               	movlw	199
   959  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   960  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   961  00AC  00B4               	movwf	??_main
   962  00AD                     u577:
   963  00AD  28AE               	nop2
   964  00AE  0BB4               	decfsz	??_main,f
   965  00AF  28AD               	goto	u577
   966  00B0  28B1               	nop2
   967  00B1                     l1387:
   968                           
   969                           ;Master.c: 118:         Slave3 = SPI_Read();
   970  00B1  120A  118A  2344  120A  118A  	fcall	_SPI_Read
   971  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   972  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   973  00B8  00B4               	movwf	??_main
   974  00B9  0834               	movf	??_main,w
   975  00BA  00BA               	movwf	_Slave3
   976  00BB                     l1389:
   977                           
   978                           ;Master.c: 119:         Lcd_Write_Char(Slave3);
   979  00BB  083A               	movf	_Slave3,w
   980  00BC  120A  118A  217E  120A  118A  	fcall	_Lcd_Write_Char
   981  00C1                     l1391:
   982                           
   983                           ;Master.c: 121:         PORTBbits.RB3 = 0;
   984  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   985  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   986  00C3  1186               	bcf	6,3	;volatile
   987  00C4  282C               	goto	l116
   988  00C5  120A  118A  2810   	ljmp	start
   989  00C8                     __end_of_main:
   990                           
   991                           	psect	text1
   992  02F5                     __ptext1:	
   993 ;; *************** function _setup *****************
   994 ;; Defined at:
   995 ;;		line 129 in file "Master.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, status,2
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    4
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _setup
  1025  02F5                     _setup:
  1026  02F5                     l1295:	
  1027                           ;incstack = 0
  1028                           ; Regs used in _setup: [wreg+status,2]
  1029                           
  1030                           
  1031                           ;Master.c: 130:     ANSEL = 0b00001001;
  1032  02F5  3009               	movlw	9
  1033  02F6  1683               	bsf	3,5	;RP0=1, select bank3
  1034  02F7  1703               	bsf	3,6	;RP1=1, select bank3
  1035  02F8  0088               	movwf	8	;volatile
  1036  02F9                     l1297:
  1037                           
  1038                           ;Master.c: 131:     ANSELH= 0b00000000;
  1039  02F9  0189               	clrf	9	;volatile
  1040  02FA                     l1299:
  1041                           
  1042                           ;Master.c: 132:     TRISA = 0b00001001;
  1043  02FA  3009               	movlw	9
  1044  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  1045  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  1046  02FD  0085               	movwf	5	;volatile
  1047                           
  1048                           ;Master.c: 133:     TRISB = 0b00000000;
  1049  02FE  0186               	clrf	6	;volatile
  1050                           
  1051                           ;Master.c: 134:     TRISC = 0b00000000;
  1052  02FF  0187               	clrf	7	;volatile
  1053                           
  1054                           ;Master.c: 135:     TRISD = 0b00000000;
  1055  0300  0188               	clrf	8	;volatile
  1056                           
  1057                           ;Master.c: 136:     TRISE = 0;
  1058  0301  0189               	clrf	9	;volatile
  1059                           
  1060                           ;Master.c: 138:     PORTA = 0;
  1061  0302  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0303  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0304  0185               	clrf	5	;volatile
  1064                           
  1065                           ;Master.c: 139:     PORTB = 0;
  1066  0305  0186               	clrf	6	;volatile
  1067                           
  1068                           ;Master.c: 140:     PORTC = 0;
  1069  0306  0187               	clrf	7	;volatile
  1070                           
  1071                           ;Master.c: 141:     PORTD = 0;
  1072  0307  0188               	clrf	8	;volatile
  1073                           
  1074                           ;Master.c: 142:     PORTE = 0;
  1075  0308  0189               	clrf	9	;volatile
  1076  0309                     l1301:
  1077                           
  1078                           ;Master.c: 144:     PIE1bits.RCIE = 1;
  1079  0309  1683               	bsf	3,5	;RP0=1, select bank1
  1080  030A  1303               	bcf	3,6	;RP1=0, select bank1
  1081  030B  168C               	bsf	12,5	;volatile
  1082  030C                     l1303:
  1083                           
  1084                           ;Master.c: 145:     INTCONbits.PEIE = 1;
  1085  030C  170B               	bsf	11,6	;volatile
  1086  030D                     l1305:
  1087                           
  1088                           ;Master.c: 146:     INTCONbits.GIE = 1;
  1089  030D  178B               	bsf	11,7	;volatile
  1090  030E                     l122:
  1091  030E  0008               	return
  1092  030F                     __end_of_setup:
  1093                           
  1094                           	psect	text2
  1095  0344                     __ptext2:	
  1096 ;; *************** function _SPI_Read *****************
  1097 ;; Defined at:
  1098 ;;		line 38 in file "SPI.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      unsigned char 
  1105 ;; Registers used:
  1106 ;;		wreg
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; Hardware stack levels required when called:    4
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           
  1127                           ;psect for function _SPI_Read
  1128  0344                     _SPI_Read:
  1129  0344                     l1271:	
  1130                           ;incstack = 0
  1131                           ; Regs used in _SPI_Read: [wreg]
  1132                           
  1133  0344                     l30:	
  1134                           ;SPI.c: 39:     while ( !SSPSTATbits.BF );
  1135                           
  1136  0344  1683               	bsf	3,5	;RP0=1, select bank1
  1137  0345  1303               	bcf	3,6	;RP1=0, select bank1
  1138  0346  1C14               	btfss	20,0	;volatile
  1139  0347  2B49               	goto	u471
  1140  0348  2B4A               	goto	u470
  1141  0349                     u471:
  1142  0349  2B44               	goto	l30
  1143  034A                     u470:
  1144  034A                     l1273:
  1145                           
  1146                           ;SPI.c: 40:     return (SSPBUF);
  1147  034A  1283               	bcf	3,5	;RP0=0, select bank0
  1148  034B  1303               	bcf	3,6	;RP1=0, select bank0
  1149  034C  0813               	movf	19,w	;volatile
  1150  034D                     l33:
  1151  034D  0008               	return
  1152  034E                     __end_of_SPI_Read:
  1153                           
  1154                           	psect	text3
  1155  02B7                     __ptext3:	
  1156 ;; *************** function _SPI_Init *****************
  1157 ;; Defined at:
  1158 ;;		line 8 in file "SPI.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  sType           1    wreg     enum E1349
  1161 ;;  sDataSample     1   15[BANK0 ] enum E1357
  1162 ;;  sClockIdle      1   16[BANK0 ] enum E1361
  1163 ;;  sTransmitEdg    1   17[BANK0 ] enum E1365
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  sType           1   18[BANK0 ] enum E1349
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         0       3       0       0       0
  1176 ;;      Locals:         0       1       0       0       0
  1177 ;;      Temps:          0       0       0       0       0
  1178 ;;      Totals:         0       4       0       0       0
  1179 ;;Total ram usage:        4 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; Hardware stack levels required when called:    4
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _SPI_Init
  1191  02B7                     _SPI_Init:
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  1195                           ;SPI_Init@sType stored from wreg
  1196  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1197  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1198  02B9  00B2               	movwf	SPI_Init@sType
  1199  02BA                     l1261:
  1200                           
  1201                           ;SPI.c: 8: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:     TRISC5 = 0;
  1202  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1203  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1204  02BC  1287               	bcf	7,5	;volatile
  1205                           
  1206                           ;SPI.c: 11:     TRISC4 = 1;
  1207  02BD  1607               	bsf	7,4	;volatile
  1208                           
  1209                           ;SPI.c: 13:     if(sType & 0b00000100)
  1210  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1211  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1212  02C0  1D32               	btfss	SPI_Init@sType,2
  1213  02C1  2AC3               	goto	u461
  1214  02C2  2AC4               	goto	u460
  1215  02C3                     u461:
  1216  02C3  2ACA               	goto	l1267
  1217  02C4                     u460:
  1218  02C4                     l1263:
  1219                           
  1220                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1221  02C4  0831               	movf	SPI_Init@sTransmitEdge,w
  1222  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  1223  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  1224  02C7  0094               	movwf	20	;volatile
  1225  02C8                     l1265:
  1226                           
  1227                           ;SPI.c: 16:         TRISC3 = 1;
  1228  02C8  1587               	bsf	7,3	;volatile
  1229                           
  1230                           ;SPI.c: 17:     }
  1231  02C9  2AD0               	goto	l18
  1232  02CA                     l1267:
  1233                           
  1234                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1235  02CA  082F               	movf	SPI_Init@sDataSample,w
  1236  02CB  0431               	iorwf	SPI_Init@sTransmitEdge,w
  1237  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  1238  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  1239  02CE  0094               	movwf	20	;volatile
  1240  02CF                     l1269:
  1241                           
  1242                           ;SPI.c: 21:         TRISC3 = 0;
  1243  02CF  1187               	bcf	7,3	;volatile
  1244  02D0                     l18:	
  1245                           ;SPI.c: 22:     }
  1246                           
  1247                           
  1248                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1249  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1250  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1251  02D2  0832               	movf	SPI_Init@sType,w
  1252  02D3  0430               	iorwf	SPI_Init@sClockIdle,w
  1253  02D4  0094               	movwf	20	;volatile
  1254  02D5                     l19:
  1255  02D5  0008               	return
  1256  02D6                     __end_of_SPI_Init:
  1257                           
  1258                           	psect	text4
  1259  0326                     __ptext4:	
  1260 ;; *************** function _SERIAL_Init *****************
  1261 ;; Defined at:
  1262 ;;		line 13 in file "UART.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1276 ;;      Params:         0       0       0       0       0
  1277 ;;      Locals:         0       0       0       0       0
  1278 ;;      Temps:          0       0       0       0       0
  1279 ;;      Totals:         0       0       0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    4
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _SERIAL_Init
  1292  0326                     _SERIAL_Init:
  1293  0326                     l1309:	
  1294                           ;incstack = 0
  1295                           ; Regs used in _SERIAL_Init: [wreg]
  1296                           
  1297                           
  1298                           ;UART.c: 14:     SPBRG = 25;
  1299  0326  3019               	movlw	25
  1300  0327  1683               	bsf	3,5	;RP0=1, select bank1
  1301  0328  1303               	bcf	3,6	;RP1=0, select bank1
  1302  0329  0099               	movwf	25	;volatile
  1303  032A                     l1311:
  1304                           
  1305                           ;UART.c: 16:     TXSTAbits.BRGH = 1;
  1306  032A  1518               	bsf	24,2	;volatile
  1307  032B                     l1313:
  1308                           
  1309                           ;UART.c: 17:     TXSTAbits.TXEN = 1;
  1310  032B  1698               	bsf	24,5	;volatile
  1311  032C                     l1315:
  1312                           
  1313                           ;UART.c: 18:     TXSTAbits.SYNC = 0;
  1314  032C  1218               	bcf	24,4	;volatile
  1315  032D                     l1317:
  1316                           
  1317                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  1318  032D  1318               	bcf	24,6	;volatile
  1319  032E                     l1319:
  1320                           
  1321                           ;UART.c: 21:     RCSTAbits.CREN = 1;
  1322  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1323  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0330  1618               	bsf	24,4	;volatile
  1325  0331                     l1321:
  1326                           
  1327                           ;UART.c: 22:     RCSTAbits.SPEN = 1;
  1328  0331  1798               	bsf	24,7	;volatile
  1329  0332                     l1323:
  1330                           
  1331                           ;UART.c: 23:     RCSTAbits.RX9 = 0;
  1332  0332  1318               	bcf	24,6	;volatile
  1333  0333                     l1325:
  1334                           
  1335                           ;UART.c: 25:     PIE1bits.RCIE = 1;
  1336  0333  1683               	bsf	3,5	;RP0=1, select bank1
  1337  0334  1303               	bcf	3,6	;RP1=0, select bank1
  1338  0335  168C               	bsf	12,5	;volatile
  1339  0336                     l1327:
  1340                           
  1341                           ;UART.c: 26:     INTCONbits.PEIE = 1;
  1342  0336  170B               	bsf	11,6	;volatile
  1343  0337                     l1329:
  1344                           
  1345                           ;UART.c: 27:     INTCONbits.GIE = 1;
  1346  0337  178B               	bsf	11,7	;volatile
  1347  0338                     l194:
  1348  0338  0008               	return
  1349  0339                     __end_of_SERIAL_Init:
  1350                           
  1351                           	psect	text5
  1352  0294                     __ptext5:	
  1353 ;; *************** function _Lcd_Write_String *****************
  1354 ;; Defined at:
  1355 ;;		line 83 in file "LCD.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  a               1    wreg     PTR unsigned char 
  1358 ;;		 -> STR_3(2), STR_2(2), STR_1(17), 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  a               1   19[BANK0 ] PTR unsigned char 
  1361 ;;		 -> STR_3(2), STR_2(2), STR_1(17), 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         0       0       0       0       0
  1372 ;;      Locals:         0       1       0       0       0
  1373 ;;      Temps:          0       1       0       0       0
  1374 ;;      Totals:         0       2       0       0       0
  1375 ;;Total ram usage:        2 bytes
  1376 ;; Hardware stack levels used:    1
  1377 ;; Hardware stack levels required when called:    5
  1378 ;; This function calls:
  1379 ;;		_Lcd_Write_Char
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _Lcd_Write_String
  1387  0294                     _Lcd_Write_String:
  1388                           
  1389                           ;incstack = 0
  1390                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1391                           ;Lcd_Write_String@a stored from wreg
  1392  0294  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0295  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0296  00B3               	movwf	Lcd_Write_String@a
  1395  0297                     l1331:
  1396                           
  1397                           ;LCD.c: 84:     while(*a != 0)
  1398  0297  2AAA               	goto	l1337
  1399  0298                     l1333:
  1400                           
  1401                           ;LCD.c: 85:         Lcd_Write_Char(*a++);
  1402  0298  0833               	movf	Lcd_Write_String@a,w
  1403  0299  0084               	movwf	4
  1404  029A  120A  118A  230F  120A  118A  	fcall	stringdir
  1405  029F  120A  118A  217E  120A  118A  	fcall	_Lcd_Write_Char
  1406  02A4                     l1335:
  1407  02A4  3001               	movlw	1
  1408  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1409  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1410  02A7  00B2               	movwf	??_Lcd_Write_String
  1411  02A8  0832               	movf	??_Lcd_Write_String,w
  1412  02A9  07B3               	addwf	Lcd_Write_String@a,f
  1413  02AA                     l1337:
  1414                           
  1415                           ;LCD.c: 84:     while(*a != 0)
  1416  02AA  0833               	movf	Lcd_Write_String@a,w
  1417  02AB  0084               	movwf	4
  1418  02AC  120A  118A  230F  120A  118A  	fcall	stringdir
  1419  02B1  3A00               	xorlw	0
  1420  02B2  1D03               	skipz
  1421  02B3  2AB5               	goto	u491
  1422  02B4  2AB6               	goto	u490
  1423  02B5                     u491:
  1424  02B5  2A98               	goto	l1333
  1425  02B6                     u490:
  1426  02B6                     l160:
  1427  02B6  0008               	return
  1428  02B7                     __end_of_Lcd_Write_String:
  1429                           
  1430                           	psect	text6
  1431  017E                     __ptext6:	
  1432 ;; *************** function _Lcd_Write_Char *****************
  1433 ;; Defined at:
  1434 ;;		line 60 in file "LCD.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  a               1    wreg     unsigned char 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  a               1   17[BANK0 ] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1448 ;;      Params:         0       0       0       0       0
  1449 ;;      Locals:         0       1       0       0       0
  1450 ;;      Temps:          0       2       0       0       0
  1451 ;;      Totals:         0       3       0       0       0
  1452 ;;Total ram usage:        3 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    4
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;;		_Lcd_Write_String
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           
  1464                           ;psect for function _Lcd_Write_Char
  1465  017E                     _Lcd_Write_Char:
  1466                           
  1467                           ;incstack = 0
  1468                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0]
  1469                           ;Lcd_Write_Char@a stored from wreg
  1470  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1471  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0180  00B1               	movwf	Lcd_Write_Char@a
  1473  0181                     l1201:
  1474                           
  1475                           ;LCD.c: 61:     PORTD = 0xFF;
  1476  0181  30FF               	movlw	255
  1477  0182  0088               	movwf	8	;volatile
  1478  0183                     l1203:
  1479                           
  1480                           ;LCD.c: 62:     PORTD &= 0x80;
  1481  0183  3080               	movlw	128
  1482  0184  00AF               	movwf	??_Lcd_Write_Char
  1483  0185  082F               	movf	??_Lcd_Write_Char,w
  1484  0186  0588               	andwf	8,f	;volatile
  1485  0187                     l1205:
  1486                           
  1487                           ;LCD.c: 63:     RE0 = 0;
  1488  0187  1009               	bcf	9,0	;volatile
  1489  0188                     l1207:
  1490                           
  1491                           ;LCD.c: 64:     RE1 = 1;
  1492  0188  1489               	bsf	9,1	;volatile
  1493  0189                     l1209:
  1494                           
  1495                           ;LCD.c: 65:     RE2 = 0;
  1496  0189  1109               	bcf	9,2	;volatile
  1497  018A                     l1211:
  1498                           
  1499                           ;LCD.c: 66:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1500  018A  3027               	movlw	39
  1501  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1502  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1503  018D  00B0               	movwf	??_Lcd_Write_Char+1
  1504  018E  30F4               	movlw	244
  1505  018F  00AF               	movwf	??_Lcd_Write_Char
  1506  0190                     u587:
  1507  0190  0BAF               	decfsz	??_Lcd_Write_Char,f
  1508  0191  2990               	goto	u587
  1509  0192  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1510  0193  2990               	goto	u587
  1511  0194  0000               	nop
  1512  0195                     l1213:
  1513                           
  1514                           ;LCD.c: 67:     RE2 = 1;
  1515  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0197  1509               	bsf	9,2	;volatile
  1518                           
  1519                           ;LCD.c: 68:     if (PORTD == 0x80){
  1520  0198  3080               	movlw	128
  1521  0199  0608               	xorwf	8,w	;volatile
  1522  019A  1D03               	btfss	3,2
  1523  019B  299D               	goto	u421
  1524  019C  299E               	goto	u420
  1525  019D                     u421:
  1526  019D  29AD               	goto	l1221
  1527  019E                     u420:
  1528  019E                     l1215:
  1529                           
  1530                           ;LCD.c: 69:     RE2 = 0;
  1531  019E  1109               	bcf	9,2	;volatile
  1532  019F                     l1217:
  1533                           
  1534                           ;LCD.c: 70:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1535  019F  3027               	movlw	39
  1536  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1537  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1538  01A2  00B0               	movwf	??_Lcd_Write_Char+1
  1539  01A3  30F4               	movlw	244
  1540  01A4  00AF               	movwf	??_Lcd_Write_Char
  1541  01A5                     u597:
  1542  01A5  0BAF               	decfsz	??_Lcd_Write_Char,f
  1543  01A6  29A5               	goto	u597
  1544  01A7  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1545  01A8  29A5               	goto	u597
  1546  01A9  0000               	nop
  1547  01AA                     l1219:
  1548                           
  1549                           ;LCD.c: 71:     RE2 = 1;
  1550  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1551  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1552  01AC  1509               	bsf	9,2	;volatile
  1553  01AD                     l1221:	
  1554                           ;LCD.c: 72:     }
  1555                           
  1556                           
  1557                           ;LCD.c: 75:     PORTD = a;
  1558  01AD  0831               	movf	Lcd_Write_Char@a,w
  1559  01AE  0088               	movwf	8	;volatile
  1560  01AF                     l1223:
  1561                           
  1562                           ;LCD.c: 76:     RE0 = 1;
  1563  01AF  1409               	bsf	9,0	;volatile
  1564  01B0                     l1225:
  1565                           
  1566                           ;LCD.c: 77:     RE1 = 0;
  1567  01B0  1089               	bcf	9,1	;volatile
  1568  01B1                     l1227:
  1569                           
  1570                           ;LCD.c: 78:     RE2 = 1;
  1571  01B1  1509               	bsf	9,2	;volatile
  1572                           
  1573                           ;LCD.c: 79:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1574  01B2  3027               	movlw	39
  1575  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1576  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1577  01B5  00B0               	movwf	??_Lcd_Write_Char+1
  1578  01B6  30F4               	movlw	244
  1579  01B7  00AF               	movwf	??_Lcd_Write_Char
  1580  01B8                     u607:
  1581  01B8  0BAF               	decfsz	??_Lcd_Write_Char,f
  1582  01B9  29B8               	goto	u607
  1583  01BA  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1584  01BB  29B8               	goto	u607
  1585  01BC  0000               	nop
  1586  01BD                     l1229:
  1587                           
  1588                           ;LCD.c: 80:     RE2 = 0;
  1589  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1590  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1591  01BF  1109               	bcf	9,2	;volatile
  1592  01C0                     l154:
  1593  01C0  0008               	return
  1594  01C1                     __end_of_Lcd_Write_Char:
  1595                           
  1596                           	psect	text7
  1597  02D6                     __ptext7:	
  1598 ;; *************** function _Lcd_Init *****************
  1599 ;; Defined at:
  1600 ;;		line 52 in file "LCD.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0
  1617 ;;      Totals:         0       0       0       0       0
  1618 ;;Total ram usage:        0 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    5
  1621 ;; This function calls:
  1622 ;;		_Lcd_Cmd
  1623 ;; This function is called by:
  1624 ;;		_main
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _Lcd_Init
  1630  02D6                     _Lcd_Init:
  1631  02D6                     l1307:	
  1632                           ;incstack = 0
  1633                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1634                           
  1635                           
  1636                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  1637  02D6  3038               	movlw	56
  1638  02D7  120A  118A  21C1  120A  118A  	fcall	_Lcd_Cmd
  1639                           
  1640                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  1641  02DC  300C               	movlw	12
  1642  02DD  120A  118A  21C1  120A  118A  	fcall	_Lcd_Cmd
  1643                           
  1644                           ;LCD.c: 55:     Lcd_Cmd(0x01);
  1645  02E2  3001               	movlw	1
  1646  02E3  120A  118A  21C1  120A  118A  	fcall	_Lcd_Cmd
  1647                           
  1648                           ;LCD.c: 56:     Lcd_Cmd(0x06);
  1649  02E8  3006               	movlw	6
  1650  02E9  120A  118A  21C1  120A  118A  	fcall	_Lcd_Cmd
  1651                           
  1652                           ;LCD.c: 57:     Lcd_Cmd(0x80);
  1653  02EE  3080               	movlw	128
  1654  02EF  120A  118A  21C1  120A  118A  	fcall	_Lcd_Cmd
  1655  02F4                     l149:
  1656  02F4  0008               	return
  1657  02F5                     __end_of_Lcd_Init:
  1658                           
  1659                           	psect	text8
  1660  01C1                     __ptext8:	
  1661 ;; *************** function _Lcd_Cmd *****************
  1662 ;; Defined at:
  1663 ;;		line 13 in file "LCD.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  a               1    wreg     unsigned char 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  a               1   17[BANK0 ] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         0       1       0       0       0
  1679 ;;      Temps:          0       2       0       0       0
  1680 ;;      Totals:         0       3       0       0       0
  1681 ;;Total ram usage:        3 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    4
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;;		_Lcd_Init
  1689 ;;		_Lcd_Clear
  1690 ;;		_Lcd_Set_Cursor
  1691 ;;		_Lcd_Shift_Right
  1692 ;;		_Lcd_Shift_Left
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _Lcd_Cmd
  1698  01C1                     _Lcd_Cmd:
  1699                           
  1700                           ;incstack = 0
  1701                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  1702                           ;Lcd_Cmd@a stored from wreg
  1703  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1704  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1705  01C3  00B1               	movwf	Lcd_Cmd@a
  1706  01C4                     l1171:
  1707                           
  1708                           ;LCD.c: 14:  PORTD = 0xFF;
  1709  01C4  30FF               	movlw	255
  1710  01C5  0088               	movwf	8	;volatile
  1711  01C6                     l1173:
  1712                           
  1713                           ;LCD.c: 15:     PORTD &= 0x80;
  1714  01C6  3080               	movlw	128
  1715  01C7  00AF               	movwf	??_Lcd_Cmd
  1716  01C8  082F               	movf	??_Lcd_Cmd,w
  1717  01C9  0588               	andwf	8,f	;volatile
  1718  01CA                     l1175:
  1719                           
  1720                           ;LCD.c: 16:     RE0 = 0;
  1721  01CA  1009               	bcf	9,0	;volatile
  1722  01CB                     l1177:
  1723                           
  1724                           ;LCD.c: 17:     RE1 = 1;
  1725  01CB  1489               	bsf	9,1	;volatile
  1726  01CC                     l1179:
  1727                           
  1728                           ;LCD.c: 18:     RE2 = 0;
  1729  01CC  1109               	bcf	9,2	;volatile
  1730  01CD                     l1181:
  1731                           
  1732                           ;LCD.c: 19:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1733  01CD  3027               	movlw	39
  1734  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1735  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1736  01D0  00B0               	movwf	??_Lcd_Cmd+1
  1737  01D1  30F4               	movlw	244
  1738  01D2  00AF               	movwf	??_Lcd_Cmd
  1739  01D3                     u617:
  1740  01D3  0BAF               	decfsz	??_Lcd_Cmd,f
  1741  01D4  29D3               	goto	u617
  1742  01D5  0BB0               	decfsz	??_Lcd_Cmd+1,f
  1743  01D6  29D3               	goto	u617
  1744  01D7  0000               	nop
  1745  01D8                     l1183:
  1746                           
  1747                           ;LCD.c: 20:     RE2 = 1;
  1748  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1749  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1750  01DA  1509               	bsf	9,2	;volatile
  1751                           
  1752                           ;LCD.c: 21:     if (PORTD == 0x80){
  1753  01DB  3080               	movlw	128
  1754  01DC  0608               	xorwf	8,w	;volatile
  1755  01DD  1D03               	btfss	3,2
  1756  01DE  29E0               	goto	u411
  1757  01DF  29E1               	goto	u410
  1758  01E0                     u411:
  1759  01E0  29F0               	goto	l1191
  1760  01E1                     u410:
  1761  01E1                     l1185:
  1762                           
  1763                           ;LCD.c: 22:     RE2 = 0;
  1764  01E1  1109               	bcf	9,2	;volatile
  1765  01E2                     l1187:
  1766                           
  1767                           ;LCD.c: 23:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1768  01E2  3027               	movlw	39
  1769  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1770  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1771  01E5  00B0               	movwf	??_Lcd_Cmd+1
  1772  01E6  30F4               	movlw	244
  1773  01E7  00AF               	movwf	??_Lcd_Cmd
  1774  01E8                     u627:
  1775  01E8  0BAF               	decfsz	??_Lcd_Cmd,f
  1776  01E9  29E8               	goto	u627
  1777  01EA  0BB0               	decfsz	??_Lcd_Cmd+1,f
  1778  01EB  29E8               	goto	u627
  1779  01EC  0000               	nop
  1780  01ED                     l1189:
  1781                           
  1782                           ;LCD.c: 24:     RE2 = 1;
  1783  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1784  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1785  01EF  1509               	bsf	9,2	;volatile
  1786  01F0                     l1191:	
  1787                           ;LCD.c: 25:     }
  1788                           
  1789                           
  1790                           ;LCD.c: 28:     PORTD = a;
  1791  01F0  0831               	movf	Lcd_Cmd@a,w
  1792  01F1  0088               	movwf	8	;volatile
  1793  01F2                     l1193:
  1794                           
  1795                           ;LCD.c: 29:     RE0 = 0;
  1796  01F2  1009               	bcf	9,0	;volatile
  1797  01F3                     l1195:
  1798                           
  1799                           ;LCD.c: 30:     RE1 = 0;
  1800  01F3  1089               	bcf	9,1	;volatile
  1801  01F4                     l1197:
  1802                           
  1803                           ;LCD.c: 31:     RE2 = 1;
  1804  01F4  1509               	bsf	9,2	;volatile
  1805                           
  1806                           ;LCD.c: 32:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1807  01F5  3027               	movlw	39
  1808  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  1809  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  1810  01F8  00B0               	movwf	??_Lcd_Cmd+1
  1811  01F9  30F4               	movlw	244
  1812  01FA  00AF               	movwf	??_Lcd_Cmd
  1813  01FB                     u637:
  1814  01FB  0BAF               	decfsz	??_Lcd_Cmd,f
  1815  01FC  29FB               	goto	u637
  1816  01FD  0BB0               	decfsz	??_Lcd_Cmd+1,f
  1817  01FE  29FB               	goto	u637
  1818  01FF  0000               	nop
  1819  0200                     l1199:
  1820                           
  1821                           ;LCD.c: 33:     RE2 = 0;
  1822  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0202  1109               	bcf	9,2	;volatile
  1825  0203                     l137:
  1826  0203  0008               	return
  1827  0204                     __end_of_Lcd_Cmd:
  1828                           
  1829                           	psect	text9
  1830  023E                     __ptext9:	
  1831 ;; *************** function _ISR *****************
  1832 ;; Defined at:
  1833 ;;		line 70 in file "Master.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1847 ;;      Params:         0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0
  1849 ;;      Temps:          0       5       0       0       0
  1850 ;;      Totals:         0       5       0       0       0
  1851 ;;Total ram usage:        5 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    3
  1854 ;; This function calls:
  1855 ;;		_CONTADOR
  1856 ;;		_itoa
  1857 ;; This function is called by:
  1858 ;;		Interrupt level 1
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _ISR
  1864  023E                     _ISR:
  1865  023E                     i1l1339:
  1866                           
  1867                           ;Master.c: 71:     if (RCIF==1){
  1868  023E  1E8C               	btfss	12,5	;volatile
  1869  023F  2A41               	goto	u50_21
  1870  0240  2A42               	goto	u50_20
  1871  0241                     u50_21:
  1872  0241  2A65               	goto	i1l111
  1873  0242                     u50_20:
  1874  0242                     i1l1341:
  1875                           
  1876                           ;Master.c: 72:         O = CONTADOR ((int)RCREG);
  1877  0242  081A               	movf	26,w	;volatile
  1878  0243  00AA               	movwf	??_ISR
  1879  0244  01AB               	clrf	??_ISR+1
  1880  0245  082A               	movf	??_ISR,w
  1881  0246  00F0               	movwf	CONTADOR@n
  1882  0247  082B               	movf	??_ISR+1,w
  1883  0248  00F1               	movwf	CONTADOR@n+1
  1884  0249  120A  118A  2339  120A  118A  	fcall	_CONTADOR
  1885  024E  0871               	movf	?_CONTADOR+1,w
  1886  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0251  00B8               	movwf	_O+1
  1889  0252  0870               	movf	?_CONTADOR,w
  1890  0253  00B7               	movwf	_O
  1891  0254                     i1l1343:
  1892                           
  1893                           ;Master.c: 73:         itoa(COMPARE,O,10);
  1894  0254  0838               	movf	_O+1,w
  1895  0255  00A5               	movwf	itoa@val+1
  1896  0256  0837               	movf	_O,w
  1897  0257  00A4               	movwf	itoa@val
  1898  0258  300A               	movlw	10
  1899  0259  00A6               	movwf	itoa@base
  1900  025A  3000               	movlw	0
  1901  025B  00A7               	movwf	itoa@base+1
  1902  025C  303E               	movlw	(low (_COMPARE| 0))& (0+255)
  1903  025D  120A  118A  226E  120A  118A  	fcall	_itoa
  1904  0262                     i1l1345:
  1905                           
  1906                           ;Master.c: 74:         RCIF=0;
  1907  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0264  128C               	bcf	12,5	;volatile
  1910  0265                     i1l111:
  1911  0265  082E               	movf	??_ISR+4,w
  1912  0266  008A               	movwf	10
  1913  0267  082D               	movf	??_ISR+3,w
  1914  0268  0084               	movwf	4
  1915  0269  0E2C               	swapf	??_ISR+2,w
  1916  026A  0083               	movwf	3
  1917  026B  0EFE               	swapf	btemp,f
  1918  026C  0E7E               	swapf	btemp,w
  1919  026D  0009               	retfie
  1920  026E                     __end_of_ISR:
  1921                           
  1922                           	psect	intentry
  1923  0004                     __pintentry:	
  1924                           ;incstack = 0
  1925                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1926                           
  1927  0004                     interrupt_function:
  1928  007E                     saved_w	set	btemp
  1929  0004  00FE               	movwf	btemp
  1930  0005  0E03               	swapf	3,w
  1931  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1932  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1933  0008  00AC               	movwf	??_ISR+2
  1934  0009  0804               	movf	4,w
  1935  000A  00AD               	movwf	??_ISR+3
  1936  000B  080A               	movf	10,w
  1937  000C  00AE               	movwf	??_ISR+4
  1938  000D  120A  118A  2A3E   	ljmp	_ISR
  1939                           
  1940                           	psect	text10
  1941  026E                     __ptext10:	
  1942 ;; *************** function _itoa *****************
  1943 ;; Defined at:
  1944 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  buf             1    wreg     PTR unsigned char 
  1947 ;;		 -> COMPARE(5), 
  1948 ;;  val             2    4[BANK0 ] int 
  1949 ;;  base            2    6[BANK0 ] int 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  1952 ;;		 -> COMPARE(5), 
  1953 ;;  cp              1    0        PTR unsigned char 
  1954 ;;		 -> COMPARE(5), 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      PTR unsigned char 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1964 ;;      Params:         0       4       0       0       0
  1965 ;;      Locals:         0       2       0       0       0
  1966 ;;      Temps:          1       0       0       0       0
  1967 ;;      Totals:         1       6       0       0       0
  1968 ;;Total ram usage:        7 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    2
  1971 ;; This function calls:
  1972 ;;		_utoa
  1973 ;; This function is called by:
  1974 ;;		_ISR
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _itoa
  1980  026E                     _itoa:
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1984                           ;itoa@buf stored from wreg
  1985  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1986  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0270  00A9               	movwf	itoa@buf
  1988  0271                     i1l1281:
  1989  0271                     i1l1283:
  1990  0271  1FA5               	btfss	itoa@val+1,7
  1991  0272  2A74               	goto	u48_21
  1992  0273  2A75               	goto	u48_20
  1993  0274                     u48_21:
  1994  0274  2A85               	goto	i1l1291
  1995  0275                     u48_20:
  1996  0275                     i1l1285:
  1997  0275  302D               	movlw	45
  1998  0276  00FD               	movwf	??_itoa
  1999  0277  0829               	movf	itoa@buf,w
  2000  0278  0084               	movwf	4
  2001  0279  087D               	movf	??_itoa,w
  2002  027A  1383               	bcf	3,7	;select IRP bank0
  2003  027B  0080               	movwf	0
  2004  027C                     i1l1287:
  2005  027C  3001               	movlw	1
  2006  027D  00FD               	movwf	??_itoa
  2007  027E  087D               	movf	??_itoa,w
  2008  027F  07A9               	addwf	itoa@buf,f
  2009  0280                     i1l1289:
  2010  0280  09A4               	comf	itoa@val,f
  2011  0281  09A5               	comf	itoa@val+1,f
  2012  0282  0AA4               	incf	itoa@val,f
  2013  0283  1903               	skipnz
  2014  0284  0AA5               	incf	itoa@val+1,f
  2015  0285                     i1l1291:
  2016  0285  0825               	movf	itoa@val+1,w
  2017  0286  00F9               	movwf	utoa@val+1
  2018  0287  0824               	movf	itoa@val,w
  2019  0288  00F8               	movwf	utoa@val
  2020  0289  0827               	movf	itoa@base+1,w
  2021  028A  00FB               	movwf	utoa@base+1
  2022  028B  0826               	movf	itoa@base,w
  2023  028C  00FA               	movwf	utoa@base
  2024  028D  0829               	movf	itoa@buf,w
  2025  028E  120A  118A  20C8  120A  118A  	fcall	_utoa
  2026  0293                     i1l749:
  2027  0293  0008               	return
  2028  0294                     __end_of_itoa:
  2029                           
  2030                           	psect	text11
  2031  00C8                     __ptext11:	
  2032 ;; *************** function _utoa *****************
  2033 ;; Defined at:
  2034 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  buf             1    wreg     PTR unsigned char 
  2037 ;;		 -> COMPARE(5), 
  2038 ;;  val             2    8[COMMON] unsigned int 
  2039 ;;  base            2   10[COMMON] int 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2042 ;;		 -> COMPARE(5), 
  2043 ;;  v               2    0[BANK0 ] unsigned int 
  2044 ;;  c               1    2[BANK0 ] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      PTR unsigned char 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         4       0       0       0       0
  2055 ;;      Locals:         0       4       0       0       0
  2056 ;;      Temps:          1       0       0       0       0
  2057 ;;      Totals:         5       4       0       0       0
  2058 ;;Total ram usage:        9 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    1
  2061 ;; This function calls:
  2062 ;;		___lwdiv
  2063 ;;		___lwmod
  2064 ;; This function is called by:
  2065 ;;		_itoa
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           
  2070                           ;psect for function _utoa
  2071  00C8                     _utoa:
  2072                           
  2073                           ;incstack = 0
  2074                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2075                           ;utoa@buf stored from wreg
  2076  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  2077  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  2078  00CA  00A3               	movwf	utoa@buf
  2079  00CB                     i1l1231:
  2080  00CB  0879               	movf	utoa@val+1,w
  2081  00CC  00A1               	movwf	utoa@v+1
  2082  00CD  0878               	movf	utoa@val,w
  2083  00CE  00A0               	movwf	utoa@v
  2084  00CF                     i1l1233:
  2085  00CF  087B               	movf	utoa@base+1,w
  2086  00D0  00F1               	movwf	___lwdiv@divisor+1
  2087  00D1  087A               	movf	utoa@base,w
  2088  00D2  00F0               	movwf	___lwdiv@divisor
  2089  00D3  0821               	movf	utoa@v+1,w
  2090  00D4  00F3               	movwf	___lwdiv@dividend+1
  2091  00D5  0820               	movf	utoa@v,w
  2092  00D6  00F2               	movwf	___lwdiv@dividend
  2093  00D7  120A  118A  213A  120A  118A  	fcall	___lwdiv
  2094  00DC  0871               	movf	?___lwdiv+1,w
  2095  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  2096  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  2097  00DF  00A1               	movwf	utoa@v+1
  2098  00E0  0870               	movf	?___lwdiv,w
  2099  00E1  00A0               	movwf	utoa@v
  2100  00E2                     i1l1235:
  2101  00E2  3001               	movlw	1
  2102  00E3  00FC               	movwf	??_utoa
  2103  00E4  087C               	movf	??_utoa,w
  2104  00E5  07A3               	addwf	utoa@buf,f
  2105  00E6                     i1l1237:
  2106  00E6  0820               	movf	utoa@v,w
  2107  00E7  0421               	iorwf	utoa@v+1,w
  2108  00E8  1D03               	btfss	3,2
  2109  00E9  28EB               	goto	u43_21
  2110  00EA  28EC               	goto	u43_20
  2111  00EB                     u43_21:
  2112  00EB  28CF               	goto	i1l1233
  2113  00EC                     u43_20:
  2114  00EC                     i1l1239:
  2115  00EC  0823               	movf	utoa@buf,w
  2116  00ED  0084               	movwf	4
  2117  00EE  1383               	bcf	3,7	;select IRP bank0
  2118  00EF  0180               	clrf	0
  2119  00F0                     i1l1241:
  2120  00F0  3001               	movlw	1
  2121  00F1  02A3               	subwf	utoa@buf,f
  2122  00F2                     i1l1243:
  2123  00F2  087B               	movf	utoa@base+1,w
  2124  00F3  00F1               	movwf	___lwmod@divisor+1
  2125  00F4  087A               	movf	utoa@base,w
  2126  00F5  00F0               	movwf	___lwmod@divisor
  2127  00F6  0879               	movf	utoa@val+1,w
  2128  00F7  00F3               	movwf	___lwmod@dividend+1
  2129  00F8  0878               	movf	utoa@val,w
  2130  00F9  00F2               	movwf	___lwmod@dividend
  2131  00FA  120A  118A  2204  120A  118A  	fcall	___lwmod
  2132  00FF  0870               	movf	?___lwmod,w
  2133  0100  00FC               	movwf	??_utoa
  2134  0101  087C               	movf	??_utoa,w
  2135  0102  1283               	bcf	3,5	;RP0=0, select bank0
  2136  0103  1303               	bcf	3,6	;RP1=0, select bank0
  2137  0104  00A2               	movwf	utoa@c
  2138  0105                     i1l1245:
  2139  0105  087B               	movf	utoa@base+1,w
  2140  0106  00F1               	movwf	___lwdiv@divisor+1
  2141  0107  087A               	movf	utoa@base,w
  2142  0108  00F0               	movwf	___lwdiv@divisor
  2143  0109  0879               	movf	utoa@val+1,w
  2144  010A  00F3               	movwf	___lwdiv@dividend+1
  2145  010B  0878               	movf	utoa@val,w
  2146  010C  00F2               	movwf	___lwdiv@dividend
  2147  010D  120A  118A  213A  120A  118A  	fcall	___lwdiv
  2148  0112  0871               	movf	?___lwdiv+1,w
  2149  0113  00F9               	movwf	utoa@val+1
  2150  0114  0870               	movf	?___lwdiv,w
  2151  0115  00F8               	movwf	utoa@val
  2152  0116                     i1l1247:
  2153  0116  300A               	movlw	10
  2154  0117  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0118  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0119  0222               	subwf	utoa@c,w
  2157  011A  1C03               	skipc
  2158  011B  291D               	goto	u44_21
  2159  011C  291E               	goto	u44_20
  2160  011D                     u44_21:
  2161  011D  2922               	goto	i1l755
  2162  011E                     u44_20:
  2163  011E                     i1l1249:
  2164  011E  3007               	movlw	7
  2165  011F  00FC               	movwf	??_utoa
  2166  0120  087C               	movf	??_utoa,w
  2167  0121  07A2               	addwf	utoa@c,f
  2168  0122                     i1l755:
  2169  0122  3030               	movlw	48
  2170  0123  00FC               	movwf	??_utoa
  2171  0124  087C               	movf	??_utoa,w
  2172  0125  07A2               	addwf	utoa@c,f
  2173  0126                     i1l1251:
  2174  0126  0822               	movf	utoa@c,w
  2175  0127  00FC               	movwf	??_utoa
  2176  0128  0823               	movf	utoa@buf,w
  2177  0129  0084               	movwf	4
  2178  012A  087C               	movf	??_utoa,w
  2179  012B  1383               	bcf	3,7	;select IRP bank0
  2180  012C  0080               	movwf	0
  2181  012D                     i1l1253:
  2182  012D  3001               	movlw	1
  2183  012E  02A3               	subwf	utoa@buf,f
  2184  012F                     i1l1255:
  2185  012F  0878               	movf	utoa@val,w
  2186  0130  0479               	iorwf	utoa@val+1,w
  2187  0131  1D03               	btfss	3,2
  2188  0132  2934               	goto	u45_21
  2189  0133  2935               	goto	u45_20
  2190  0134                     u45_21:
  2191  0134  28F2               	goto	i1l1243
  2192  0135                     u45_20:
  2193  0135                     i1l1257:
  2194                           
  2195                           ;	Return value of _utoa is never used
  2196  0135  3001               	movlw	1
  2197  0136  00FC               	movwf	??_utoa
  2198  0137  087C               	movf	??_utoa,w
  2199  0138  07A3               	addwf	utoa@buf,f
  2200  0139                     i1l757:
  2201  0139  0008               	return
  2202  013A                     __end_of_utoa:
  2203                           
  2204                           	psect	text12
  2205  0204                     __ptext12:	
  2206 ;; *************** function ___lwmod *****************
  2207 ;; Defined at:
  2208 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  divisor         2    0[COMMON] unsigned int 
  2211 ;;  dividend        2    2[COMMON] unsigned int 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  counter         1    5[COMMON] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  2    0[COMMON] unsigned int 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         4       0       0       0       0
  2224 ;;      Locals:         1       0       0       0       0
  2225 ;;      Temps:          1       0       0       0       0
  2226 ;;      Totals:         6       0       0       0       0
  2227 ;;Total ram usage:        6 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_utoa
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function ___lwmod
  2238  0204                     ___lwmod:
  2239  0204                     i1l1149:	
  2240                           ;incstack = 0
  2241                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2242                           
  2243  0204  0870               	movf	___lwmod@divisor,w
  2244  0205  0471               	iorwf	___lwmod@divisor+1,w
  2245  0206  1903               	btfsc	3,2
  2246  0207  2A09               	goto	u35_21
  2247  0208  2A0A               	goto	u35_20
  2248  0209                     u35_21:
  2249  0209  2A39               	goto	i1l1167
  2250  020A                     u35_20:
  2251  020A                     i1l1151:
  2252  020A  01F5               	clrf	___lwmod@counter
  2253  020B  0AF5               	incf	___lwmod@counter,f
  2254  020C  2A18               	goto	i1l1157
  2255  020D                     i1l1153:
  2256  020D  3001               	movlw	1
  2257  020E                     u36_25:
  2258  020E  1003               	clrc
  2259  020F  0DF0               	rlf	___lwmod@divisor,f
  2260  0210  0DF1               	rlf	___lwmod@divisor+1,f
  2261  0211  3EFF               	addlw	-1
  2262  0212  1D03               	skipz
  2263  0213  2A0E               	goto	u36_25
  2264  0214                     i1l1155:
  2265  0214  3001               	movlw	1
  2266  0215  00F4               	movwf	??___lwmod
  2267  0216  0874               	movf	??___lwmod,w
  2268  0217  07F5               	addwf	___lwmod@counter,f
  2269  0218                     i1l1157:
  2270  0218  1FF1               	btfss	___lwmod@divisor+1,7
  2271  0219  2A1B               	goto	u37_21
  2272  021A  2A1C               	goto	u37_20
  2273  021B                     u37_21:
  2274  021B  2A0D               	goto	i1l1153
  2275  021C                     u37_20:
  2276  021C                     i1l1159:
  2277  021C  0871               	movf	___lwmod@divisor+1,w
  2278  021D  0273               	subwf	___lwmod@dividend+1,w
  2279  021E  1D03               	skipz
  2280  021F  2A22               	goto	u38_25
  2281  0220  0870               	movf	___lwmod@divisor,w
  2282  0221  0272               	subwf	___lwmod@dividend,w
  2283  0222                     u38_25:
  2284  0222  1C03               	skipc
  2285  0223  2A25               	goto	u38_21
  2286  0224  2A26               	goto	u38_20
  2287  0225                     u38_21:
  2288  0225  2A2C               	goto	i1l1163
  2289  0226                     u38_20:
  2290  0226                     i1l1161:
  2291  0226  0870               	movf	___lwmod@divisor,w
  2292  0227  02F2               	subwf	___lwmod@dividend,f
  2293  0228  0871               	movf	___lwmod@divisor+1,w
  2294  0229  1C03               	skipc
  2295  022A  03F3               	decf	___lwmod@dividend+1,f
  2296  022B  02F3               	subwf	___lwmod@dividend+1,f
  2297  022C                     i1l1163:
  2298  022C  3001               	movlw	1
  2299  022D                     u39_25:
  2300  022D  1003               	clrc
  2301  022E  0CF1               	rrf	___lwmod@divisor+1,f
  2302  022F  0CF0               	rrf	___lwmod@divisor,f
  2303  0230  3EFF               	addlw	-1
  2304  0231  1D03               	skipz
  2305  0232  2A2D               	goto	u39_25
  2306  0233                     i1l1165:
  2307  0233  3001               	movlw	1
  2308  0234  02F5               	subwf	___lwmod@counter,f
  2309  0235  1D03               	btfss	3,2
  2310  0236  2A38               	goto	u40_21
  2311  0237  2A39               	goto	u40_20
  2312  0238                     u40_21:
  2313  0238  2A1C               	goto	i1l1159
  2314  0239                     u40_20:
  2315  0239                     i1l1167:
  2316  0239  0873               	movf	___lwmod@dividend+1,w
  2317  023A  00F1               	movwf	?___lwmod+1
  2318  023B  0872               	movf	___lwmod@dividend,w
  2319  023C  00F0               	movwf	?___lwmod
  2320  023D                     i1l577:
  2321  023D  0008               	return
  2322  023E                     __end_of___lwmod:
  2323                           
  2324                           	psect	text13
  2325  013A                     __ptext13:	
  2326 ;; *************** function ___lwdiv *****************
  2327 ;; Defined at:
  2328 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  divisor         2    0[COMMON] unsigned int 
  2331 ;;  dividend        2    2[COMMON] unsigned int 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  quotient        2    5[COMMON] unsigned int 
  2334 ;;  counter         1    7[COMMON] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  2    0[COMMON] unsigned int 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         4       0       0       0       0
  2345 ;;      Locals:         3       0       0       0       0
  2346 ;;      Temps:          1       0       0       0       0
  2347 ;;      Totals:         8       0       0       0       0
  2348 ;;Total ram usage:        8 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_utoa
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           
  2358                           ;psect for function ___lwdiv
  2359  013A                     ___lwdiv:
  2360  013A                     i1l1123:	
  2361                           ;incstack = 0
  2362                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2363                           
  2364  013A  01F5               	clrf	___lwdiv@quotient
  2365  013B  01F6               	clrf	___lwdiv@quotient+1
  2366  013C                     i1l1125:
  2367  013C  0870               	movf	___lwdiv@divisor,w
  2368  013D  0471               	iorwf	___lwdiv@divisor+1,w
  2369  013E  1903               	btfsc	3,2
  2370  013F  2941               	goto	u28_21
  2371  0140  2942               	goto	u28_20
  2372  0141                     u28_21:
  2373  0141  2979               	goto	i1l1145
  2374  0142                     u28_20:
  2375  0142                     i1l1127:
  2376  0142  01F7               	clrf	___lwdiv@counter
  2377  0143  0AF7               	incf	___lwdiv@counter,f
  2378  0144  2950               	goto	i1l1133
  2379  0145                     i1l1129:
  2380  0145  3001               	movlw	1
  2381  0146                     u29_25:
  2382  0146  1003               	clrc
  2383  0147  0DF0               	rlf	___lwdiv@divisor,f
  2384  0148  0DF1               	rlf	___lwdiv@divisor+1,f
  2385  0149  3EFF               	addlw	-1
  2386  014A  1D03               	skipz
  2387  014B  2946               	goto	u29_25
  2388  014C                     i1l1131:
  2389  014C  3001               	movlw	1
  2390  014D  00F4               	movwf	??___lwdiv
  2391  014E  0874               	movf	??___lwdiv,w
  2392  014F  07F7               	addwf	___lwdiv@counter,f
  2393  0150                     i1l1133:
  2394  0150  1FF1               	btfss	___lwdiv@divisor+1,7
  2395  0151  2953               	goto	u30_21
  2396  0152  2954               	goto	u30_20
  2397  0153                     u30_21:
  2398  0153  2945               	goto	i1l1129
  2399  0154                     u30_20:
  2400  0154                     i1l1135:
  2401  0154  3001               	movlw	1
  2402  0155                     u31_25:
  2403  0155  1003               	clrc
  2404  0156  0DF5               	rlf	___lwdiv@quotient,f
  2405  0157  0DF6               	rlf	___lwdiv@quotient+1,f
  2406  0158  3EFF               	addlw	-1
  2407  0159  1D03               	skipz
  2408  015A  2955               	goto	u31_25
  2409  015B  0871               	movf	___lwdiv@divisor+1,w
  2410  015C  0273               	subwf	___lwdiv@dividend+1,w
  2411  015D  1D03               	skipz
  2412  015E  2961               	goto	u32_25
  2413  015F  0870               	movf	___lwdiv@divisor,w
  2414  0160  0272               	subwf	___lwdiv@dividend,w
  2415  0161                     u32_25:
  2416  0161  1C03               	skipc
  2417  0162  2964               	goto	u32_21
  2418  0163  2965               	goto	u32_20
  2419  0164                     u32_21:
  2420  0164  296C               	goto	i1l1141
  2421  0165                     u32_20:
  2422  0165                     i1l1137:
  2423  0165  0870               	movf	___lwdiv@divisor,w
  2424  0166  02F2               	subwf	___lwdiv@dividend,f
  2425  0167  0871               	movf	___lwdiv@divisor+1,w
  2426  0168  1C03               	skipc
  2427  0169  03F3               	decf	___lwdiv@dividend+1,f
  2428  016A  02F3               	subwf	___lwdiv@dividend+1,f
  2429  016B                     i1l1139:
  2430  016B  1475               	bsf	___lwdiv@quotient,0
  2431  016C                     i1l1141:
  2432  016C  3001               	movlw	1
  2433  016D                     u33_25:
  2434  016D  1003               	clrc
  2435  016E  0CF1               	rrf	___lwdiv@divisor+1,f
  2436  016F  0CF0               	rrf	___lwdiv@divisor,f
  2437  0170  3EFF               	addlw	-1
  2438  0171  1D03               	skipz
  2439  0172  296D               	goto	u33_25
  2440  0173                     i1l1143:
  2441  0173  3001               	movlw	1
  2442  0174  02F7               	subwf	___lwdiv@counter,f
  2443  0175  1D03               	btfss	3,2
  2444  0176  2978               	goto	u34_21
  2445  0177  2979               	goto	u34_20
  2446  0178                     u34_21:
  2447  0178  2954               	goto	i1l1135
  2448  0179                     u34_20:
  2449  0179                     i1l1145:
  2450  0179  0876               	movf	___lwdiv@quotient+1,w
  2451  017A  00F1               	movwf	?___lwdiv+1
  2452  017B  0875               	movf	___lwdiv@quotient,w
  2453  017C  00F0               	movwf	?___lwdiv
  2454  017D                     i1l567:
  2455  017D  0008               	return
  2456  017E                     __end_of___lwdiv:
  2457                           
  2458                           	psect	text14
  2459  0339                     __ptext14:	
  2460 ;; *************** function _CONTADOR *****************
  2461 ;; Defined at:
  2462 ;;		line 8 in file "UART.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  n               2    0[COMMON] int 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  2    0[COMMON] int 
  2469 ;; Registers used:
  2470 ;;		wreg
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2476 ;;      Params:         2       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0
  2479 ;;      Totals:         2       0       0       0       0
  2480 ;;Total ram usage:        2 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_ISR
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _CONTADOR
  2491  0339                     _CONTADOR:
  2492  0339                     i1l1277:	
  2493                           ;incstack = 0
  2494                           ; Regs used in _CONTADOR: [wreg]
  2495                           
  2496                           
  2497                           ;UART.c: 9:     Destination = n;
  2498  0339  0871               	movf	CONTADOR@n+1,w
  2499  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2500  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2501  033C  00B6               	movwf	_Destination+1
  2502  033D  0870               	movf	CONTADOR@n,w
  2503  033E  00B5               	movwf	_Destination
  2504                           
  2505                           ;UART.c: 10:     return ((Destination)*1);
  2506  033F  0836               	movf	_Destination+1,w
  2507  0340  00F1               	movwf	?_CONTADOR+1
  2508  0341  0835               	movf	_Destination,w
  2509  0342  00F0               	movwf	?_CONTADOR
  2510  0343                     i1l191:
  2511  0343  0008               	return
  2512  0344                     __end_of_CONTADOR:
  2513  007E                     btemp	set	126	;btemp
  2514  007E                     wtemp0	set	126
  2515                           
  2516                           	psect	config
  2517                           
  2518                           ;Config register CONFIG1 @ 0x2007
  2519                           ;	Oscillator Selection bits
  2520                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2521                           ;	Watchdog Timer Enable bit
  2522                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2523                           ;	Power-up Timer Enable bit
  2524                           ;	PWRTE = OFF, PWRT disabled
  2525                           ;	RE3/MCLR pin function select bit
  2526                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2527                           ;	Code Protection bit
  2528                           ;	CP = OFF, Program memory code protection is disabled
  2529                           ;	Data Code Protection bit
  2530                           ;	CPD = OFF, Data memory code protection is disabled
  2531                           ;	Brown Out Reset Selection bits
  2532                           ;	BOREN = OFF, BOR disabled
  2533                           ;	Internal External Switchover bit
  2534                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2535                           ;	Fail-Safe Clock Monitor Enabled bit
  2536                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2537                           ;	Low Voltage Programming Enable bit
  2538                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2539                           ;	In-Circuit Debugger Mode bit
  2540                           ;	DEBUG = 0x1, unprogrammed default
  2541  2007                     	org	8199
  2542  2007  20D4               	dw	8404
  2543                           
  2544                           ;Config register CONFIG2 @ 0x2008
  2545                           ;	Brown-out Reset Selection bit
  2546                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2547                           ;	Flash Program Memory Self Write Enable bits
  2548                           ;	WRT = OFF, Write protection off
  2549  2008                     	org	8200
  2550  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    _ISR->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     592
                                             20 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Write_Char
                   _Lcd_Write_String
                        _SERIAL_Init
                           _SPI_Init
                           _SPI_Read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     360
                                             15 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SERIAL_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     2     2      0     166
                                             18 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0    1710
                                             10 BANK0      5     5      0
                           _CONTADOR
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CONTADOR                                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _SERIAL_Init
   _SPI_Init
   _SPI_Read
   _setup

 _ISR (ROOT)
   _CONTADOR
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      31       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      31      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 21:36:14 2021

                        _O 0037                          pc 0002                _SSPSTATbits 0094  
                       l30 0344                         l33 034D                         l18 02D0  
                       l19 02D5                         fsr 0004                        l122 030E  
                      l116 002C                        l160 02B6                        l137 0203  
                      l154 01C0                        l149 02F4                        l194 0338  
                      _RE0 0048                        _RE1 0049                        _RE2 004A  
                      u410 01E1                        u411 01E0                        u420 019E  
                      u421 019D                        u460 02C4                        _ISR 023E  
                      u461 02C3                        u470 034A                        u607 01B8  
                      u471 0349                        u617 01D3                        u537 0055  
                      u490 02B6                        u627 01E8                        u491 02B5  
                      u547 006D                        u637 01FB                        u557 0081  
                      u567 0099                        u577 00AD                        u587 0190  
                      u597 01A5                        fsr0 0004                        indf 0000  
                     ?_ISR 0070                       l1201 0181                       l1211 018A  
                     l1203 0183                       l1221 01AD                       l1213 0195  
                     l1205 0187                       l1301 0309                       l1223 01AF  
                     l1215 019E                       l1207 0188                       l1311 032A  
                     l1303 030C                       l1225 01B0                       l1217 019F  
                     l1209 0189                       l1321 0331                       l1313 032B  
                     l1305 030D                       l1171 01C4                       l1307 02D6  
                     l1227 01B1                       l1219 01AA                       l1331 0297  
                     l1323 0332                       l1315 032C                       l1181 01CD  
                     l1173 01C6                       l1229 01BD                       l1333 0298  
                     l1325 0333                       l1317 032D                       l1309 0326  
                     l1261 02BA                       l1191 01F0                       l1183 01D8  
                     l1175 01CA                       l1335 02A4                       l1327 0336  
                     l1319 032E                       l1263 02C4                       l1271 0344  
                     l1351 0047                       l1193 01F2                       l1185 01E1  
                     l1177 01CB                       l1337 02AA                       l1329 0337  
                     l1265 02C8                       l1273 034A                       l1361 0063  
                     l1353 004D                       l1195 01F3                       l1187 01E2  
                     l1179 01CC                       l1267 02CA                       l1371 007D  
                     l1363 0069                       l1355 0050                       l1347 0027  
                     l1197 01F4                       l1189 01ED                       l1269 02CF  
                     l1381 00A0                       l1373 0085                       l1365 0071  
                     l1357 0051                       l1349 0041                       l1199 0200  
                     l1295 02F5                       l1391 00C1                       l1383 00A6  
                     l1375 008F                       l1367 0074                       l1359 0059  
                     l1297 02F9                       l1385 00A9                       l1377 0095  
                     l1369 007A                       l1299 02FA                       l1387 00B1  
                     l1379 009D                       l1389 00BB                       STR_1 0315  
                     STR_2 0324                       STR_3 0324                       _RCIF 0065  
                     _TRMT 04C1          ?_Lcd_Write_String 0070                       _main 0027  
                     _itoa 026E                       btemp 007E                       _utoa 00C8  
       SPI_Init@sClockIdle 0030                       start 0010         ??_Lcd_Write_String 0032  
          __end_of_Lcd_Cmd 0204           __end_of_CONTADOR 0344                      ??_ISR 002A  
      SPI_Init@sDataSample 002F                      ?_main 0070                      ?_itoa 0024  
                    _ANSEL 0188                      ?_utoa 0078            __end_of___lwdiv 017E  
                    i1l111 0265                      i1l191 0343            __end_of___lwmod 023E  
                    i1l567 017D                      i1l577 023D                      i1l755 0122  
                    i1l757 0139                      i1l749 0293                      _RCREG 001A  
                    u30_20 0154                      u30_21 0153                      u31_25 0155  
                    u32_20 0165                      u40_20 0239                      u32_21 0164  
                    u40_21 0238                      u32_25 0161                      u33_25 016D  
                    u34_20 0179                      u50_20 0242                      u34_21 0178  
                    u50_21 0241                      _SPBRG 0099                      u35_20 020A  
                    u43_20 00EC                      u35_21 0209                      u43_21 00EB  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u28_20 0142  
                    u44_20 011E                      u28_21 0141                      u44_21 011D  
                    u36_25 020E                      u37_20 021C                      u45_20 0135  
                    u37_21 021B                      u45_21 0134                      u29_25 0146  
                    u38_20 0226                      u38_21 0225                      u38_25 0222  
                    u39_25 022D                      u48_20 0275                      u48_21 0274  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _Ready 003D      SPI_Init@sTransmitEdge 0031                      _setup 02F5  
         __end_of_SPI_Init 02D6           __end_of_SPI_Read 034E                      pclath 000A  
                    utoa@c 0022                      utoa@v 0020                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 02F5               ?_SERIAL_Init 0070  
          __initialization 0013               __end_of_main 00C8               __end_of_itoa 0294  
             __end_of_utoa 013A                     ??_main 0034                     ??_itoa 007D  
                   ??_utoa 007C                     ?_setup 0070                     _ANSELH 0189  
              _Destination 0035                     i1l1131 014C                     i1l1123 013A  
                   i1l1141 016C                     i1l1133 0150                     i1l1125 013C  
                   i1l1143 0173                     i1l1135 0154                     i1l1127 0142  
                   i1l1151 020A                     i1l1231 00CB                     i1l1137 0165  
                   i1l1129 0145                     i1l1145 0179                     i1l1161 0226  
                   i1l1153 020D                     i1l1241 00F0                     i1l1233 00CF  
                   i1l1139 016B                     i1l1163 022C                     i1l1155 0214  
                   i1l1251 0126                     i1l1243 00F2                     i1l1235 00E2  
                   i1l1165 0233                     i1l1157 0218                     i1l1149 0204  
                   i1l1253 012D                     i1l1245 0105                     i1l1237 00E6  
                   i1l1341 0242                     i1l1159 021C                     i1l1167 0239  
                   i1l1255 012F                     i1l1247 0116                     i1l1239 00EC  
                   i1l1343 0254                     i1l1257 0135                     i1l1249 011E  
                   i1l1281 0271                     i1l1345 0262                     i1l1291 0285  
                   i1l1283 0271                     i1l1339 023E                     i1l1277 0339  
                   i1l1285 0275                     i1l1287 027C                     i1l1289 0280  
                ??_Lcd_Cmd 002F    __size_of_Lcd_Write_Char 0043                     _TRISC3 043B  
                   _TRISC4 043C                     _TRISC5 043D                     _SSPCON 0014  
                   _SSPBUF 0013                     _Slave1 003C                     _Slave2 003B  
                   _Slave3 003A                  ??___lwdiv 0074                  ??___lwmod 0074  
                CONTADOR@n 0070                     saved_w 007E                  ?_CONTADOR 0070  
  __end_of__initialization 0023              SPI_Init@sType 0032             __pcstackCOMMON 0070  
            __end_of_setup 030F                  ?_SPI_Init 002F                  ?_SPI_Read 0070  
                ?_Lcd_Init 0070                    ??_setup 002F                 ??_CONTADOR 0072  
               __pbssBANK0 0035                 __pmaintext 0027       __size_of_SERIAL_Init 0013  
               __pintentry 0004  __size_of_Lcd_Write_String 0023                 ??_SPI_Init 0032  
               ??_SPI_Read 002F                    _COMPARE 003E                 ??_Lcd_Init 0032  
                  _SSPSTAT 0094                 __stringtab 030F             _Lcd_Write_Char 017E  
                  _Lcd_Cmd 01C1                    ___lwdiv 013A                    ___lwmod 0204  
                  __ptext1 02F5                    __ptext2 0344                    __ptext3 02B7  
                  __ptext4 0326                    __ptext5 0294                    __ptext6 017E  
                  __ptext7 02D6                    __ptext8 01C1                    __ptext9 023E  
             __size_of_ISR 0030     __end_of_Lcd_Write_Char 01C1       end_of_initialization 0023  
                  itoa@buf 0029                    itoa@val 0024                  _RCSTAbits 0018  
                  utoa@buf 0023                    utoa@val 0078                  _PORTBbits 0006  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0033          __size_of_CONTADOR 000B  
                _TXSTAbits 0098           _Lcd_Write_String 0294          __size_of_SPI_Init 001F  
        __size_of_SPI_Read 000A        start_initialization 0013                __end_of_ISR 026E  
        __size_of_Lcd_Init 001F            Lcd_Write_Char@a 0031                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070              ??_SERIAL_Init 002F  
         ___lwdiv@dividend 0072                   ?___lwdiv 0070                   ?___lwmod 0070  
                __pstrings 030F           ___lwdiv@quotient 0075                   _CONTADOR 0339  
           __size_of_setup 001A          interrupt_function 0004                   _PIE1bits 008C  
                 Lcd_Cmd@a 0031        __end_of_SERIAL_Init 0339                   _SPI_Init 02B7  
                 _SPI_Read 0344                __stringbase 0314           ??_Lcd_Write_Char 002F  
                 _Lcd_Init 02D6                   _Contador 0039   __end_of_Lcd_Write_String 02B7  
         __size_of_Lcd_Cmd 0043           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0315            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 026E                   __ptext11 00C8                   __ptext12 0204  
                 __ptext13 013A                   __ptext14 0339              __size_of_main 00A1  
            __size_of_itoa 0026              __size_of_utoa 0072                _SERIAL_Init 0326  
               _INTCONbits 000B                   itoa@base 0026                   intlevel1 0000  
         ___lwmod@dividend 0072                  stringcode 030F                   utoa@base 007A  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 030F  
                 stringtab 030F  
