

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 01:47:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0019                     _TXREG	set	25
   455  0018                     _RCSTAbits	set	24
   456  000B                     _INTCONbits	set	11
   457  0009                     _PORTE	set	9
   458  0008                     _PORTD	set	8
   459  0007                     _PORTC	set	7
   460  0005                     _PORTA	set	5
   461  0006                     _PORTBbits	set	6
   462  0006                     _PORTB	set	6
   463  001A                     _RCREG	set	26
   464  0013                     _SSPBUF	set	19
   465  0014                     _SSPCON	set	20
   466  004A                     _RE2	set	74
   467  0049                     _RE1	set	73
   468  0048                     _RE0	set	72
   469  0065                     _RCIF	set	101
   470  0098                     _TXSTAbits	set	152
   471  0099                     _SPBRG	set	153
   472  008C                     _PIE1bits	set	140
   473  0089                     _TRISE	set	137
   474  0088                     _TRISD	set	136
   475  0087                     _TRISCbits	set	135
   476  0087                     _TRISC	set	135
   477  0086                     _TRISB	set	134
   478  0085                     _TRISA	set	133
   479  0094                     _SSPSTATbits	set	148
   480  0094                     _SSPSTAT	set	148
   481  04C1                     _TRMT	set	1217
   482  043B                     _TRISC3	set	1083
   483  043C                     _TRISC4	set	1084
   484  043D                     _TRISC5	set	1085
   485  0189                     _ANSELH	set	393
   486  0188                     _ANSEL	set	392
   487                           
   488                           	psect	strings
   489  036E                     __pstrings:
   490  036E                     stringtab:
   491  036E                     __stringtab:
   492  036E                     stringcode:	
   493                           ;	String table - string pointers are 1 byte each
   494                           
   495  036E                     stringdir:
   496  036E  3003               	movlw	high stringdir
   497  036F  008A               	movwf	10
   498  0370  0804               	movf	4,w
   499  0371  0A84               	incf	4,f
   500  0372  0782               	addwf	2,f
   501  0373                     __stringbase:
   502  0373  3400               	retlw	0
   503  0374                     __end_of__stringtab:
   504  0374                     STR_1:
   505  0374  3453               	retlw	83	;'S'
   506  0375  3431               	retlw	49	;'1'
   507  0376  3420               	retlw	32	;' '
   508  0377  3420               	retlw	32	;' '
   509  0378  3420               	retlw	32	;' '
   510  0379  3420               	retlw	32	;' '
   511  037A  3453               	retlw	83	;'S'
   512  037B  3432               	retlw	50	;'2'
   513  037C  3420               	retlw	32	;' '
   514  037D  3420               	retlw	32	;' '
   515  037E  3420               	retlw	32	;' '
   516  037F  3420               	retlw	32	;' '
   517  0380  3453               	retlw	83	;'S'
   518  0381  3433               	retlw	51	;'3'
   519  0382  3420               	retlw	32	;' '
   520  0383  3420               	retlw	32	;' '
   521  0384  3400               	retlw	0
   522  0385                     STR_2:
   523  0385  3441               	retlw	65	;'A'
   524  0386  3400               	retlw	0
   525  0385                     
   526                           	psect	cinit
   527  0013                     start_initialization:	
   528                           ; #config settings
   529                           
   530  0013                     __initialization:
   531                           
   532                           ; Clear objects allocated to BANK0
   533  0013  1283               	bcf	3,5	;RP0=0, select bank0
   534  0014  1303               	bcf	3,6	;RP1=0, select bank0
   535  0015  01B7               	clrf	__pbssBANK0& (0+127)
   536  0016  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   537  0017  01B9               	clrf	(__pbssBANK0+2)& (0+127)
   538  0018  01BA               	clrf	(__pbssBANK0+3)& (0+127)
   539  0019  01BB               	clrf	(__pbssBANK0+4)& (0+127)
   540  001A  01BC               	clrf	(__pbssBANK0+5)& (0+127)
   541  001B  01BD               	clrf	(__pbssBANK0+6)& (0+127)
   542  001C  01BE               	clrf	(__pbssBANK0+7)& (0+127)
   543  001D  01BF               	clrf	(__pbssBANK0+8)& (0+127)
   544  001E  01C0               	clrf	(__pbssBANK0+9)& (0+127)
   545  001F  01C1               	clrf	(__pbssBANK0+10)& (0+127)
   546  0020  01C2               	clrf	(__pbssBANK0+11)& (0+127)
   547  0021  01C3               	clrf	(__pbssBANK0+12)& (0+127)
   548  0022  01C4               	clrf	(__pbssBANK0+13)& (0+127)
   549  0023                     end_of_initialization:	
   550                           ;End of C runtime variable initialization code
   551                           
   552  0023                     __end_of__initialization:
   553  0023  0183               	clrf	3
   554  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   555                           
   556                           	psect	bssBANK0
   557  0037                     __pbssBANK0:
   558  0037                     _Destination:
   559  0037                     	ds	2
   560  0039                     _O:
   561  0039                     	ds	2
   562  003B                     _Contador:
   563  003B                     	ds	1
   564  003C                     _Slave3:
   565  003C                     	ds	1
   566  003D                     _Slave2:
   567  003D                     	ds	1
   568  003E                     _Slave1:
   569  003E                     	ds	1
   570  003F                     _Ready:
   571  003F                     	ds	1
   572  0040                     _COMPARE:
   573  0040                     	ds	5
   574                           
   575                           	psect	cstackCOMMON
   576  0070                     __pcstackCOMMON:
   577  0070                     ?_setup:
   578  0070                     ?_Lcd_Init:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_SERIAL_Init:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_Lcd_Write_String:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_Lcd_Cmd:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_Lcd_Write_Char:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_SPI_Write:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_spiReceiveWait:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_SPI_Read:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_ISR:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_main:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_CONTADOR:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?___lwdiv:	
   612                           ; 2 bytes @ 0x0
   613                           
   614  0070                     ?___lwmod:	
   615                           ; 2 bytes @ 0x0
   616                           
   617  0070                     CONTADOR@n:	
   618                           ; 2 bytes @ 0x0
   619                           
   620  0070                     ___lwdiv@divisor:	
   621                           ; 2 bytes @ 0x0
   622                           
   623  0070                     ___lwmod@divisor:	
   624                           ; 2 bytes @ 0x0
   625                           
   626                           
   627                           ; 2 bytes @ 0x0
   628  0070                     	ds	2
   629  0072                     ??_CONTADOR:
   630  0072                     ___lwdiv@dividend:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0072                     ___lwmod@dividend:	
   634                           ; 2 bytes @ 0x2
   635                           
   636                           
   637                           ; 2 bytes @ 0x2
   638  0072                     	ds	2
   639  0074                     ??___lwdiv:
   640  0074                     ??___lwmod:	
   641                           ; 1 bytes @ 0x4
   642                           
   643                           
   644                           ; 1 bytes @ 0x4
   645  0074                     	ds	1
   646  0075                     ___lwmod@counter:
   647  0075                     ___lwdiv@quotient:	
   648                           ; 1 bytes @ 0x5
   649                           
   650                           
   651                           ; 2 bytes @ 0x5
   652  0075                     	ds	2
   653  0077                     ___lwdiv@counter:
   654                           
   655                           ; 1 bytes @ 0x7
   656  0077                     	ds	1
   657  0078                     ?_utoa:
   658  0078                     utoa@val:	
   659                           ; 1 bytes @ 0x8
   660                           
   661                           
   662                           ; 2 bytes @ 0x8
   663  0078                     	ds	2
   664  007A                     utoa@base:
   665                           
   666                           ; 2 bytes @ 0xA
   667  007A                     	ds	2
   668  007C                     ??_utoa:
   669                           
   670                           ; 1 bytes @ 0xC
   671  007C                     	ds	1
   672  007D                     ??_itoa:
   673                           
   674                           ; 1 bytes @ 0xD
   675  007D                     	ds	1
   676                           
   677                           	psect	cstackBANK0
   678  0020                     __pcstackBANK0:
   679  0020                     utoa@v:
   680                           
   681                           ; 2 bytes @ 0x0
   682  0020                     	ds	2
   683  0022                     utoa@c:
   684                           
   685                           ; 1 bytes @ 0x2
   686  0022                     	ds	1
   687  0023                     utoa@buf:
   688                           
   689                           ; 1 bytes @ 0x3
   690  0023                     	ds	1
   691  0024                     ?_itoa:
   692  0024                     itoa@val:	
   693                           ; 1 bytes @ 0x4
   694                           
   695                           
   696                           ; 2 bytes @ 0x4
   697  0024                     	ds	2
   698  0026                     itoa@base:
   699                           
   700                           ; 2 bytes @ 0x6
   701  0026                     	ds	3
   702  0029                     itoa@buf:
   703                           
   704                           ; 1 bytes @ 0x9
   705  0029                     	ds	1
   706  002A                     ??_ISR:
   707                           
   708                           ; 1 bytes @ 0xA
   709  002A                     	ds	5
   710  002F                     ??_setup:
   711  002F                     ??_SERIAL_Init:	
   712                           ; 1 bytes @ 0xF
   713                           
   714  002F                     ??_Lcd_Cmd:	
   715                           ; 1 bytes @ 0xF
   716                           
   717  002F                     ??_Lcd_Write_Char:	
   718                           ; 1 bytes @ 0xF
   719                           
   720  002F                     ?_SPI_Init:	
   721                           ; 1 bytes @ 0xF
   722                           
   723  002F                     ??_SPI_Write:	
   724                           ; 1 bytes @ 0xF
   725                           
   726  002F                     ??_spiReceiveWait:	
   727                           ; 1 bytes @ 0xF
   728                           
   729  002F                     ??_SPI_Read:	
   730                           ; 1 bytes @ 0xF
   731                           
   732  002F                     SPI_Init@sDataSample:	
   733                           ; 1 bytes @ 0xF
   734                           
   735  002F                     SPI_Write@a:	
   736                           ; 1 bytes @ 0xF
   737                           
   738                           
   739                           ; 1 bytes @ 0xF
   740  002F                     	ds	1
   741  0030                     SPI_Init@sClockIdle:
   742                           
   743                           ; 1 bytes @ 0x10
   744  0030                     	ds	1
   745  0031                     SPI_Init@sTransmitEdge:
   746  0031                     Lcd_Cmd@a:	
   747                           ; 1 bytes @ 0x11
   748                           
   749  0031                     Lcd_Write_Char@a:	
   750                           ; 1 bytes @ 0x11
   751                           
   752                           
   753                           ; 1 bytes @ 0x11
   754  0031                     	ds	1
   755  0032                     ??_Lcd_Init:
   756  0032                     ??_Lcd_Write_String:	
   757                           ; 1 bytes @ 0x12
   758                           
   759  0032                     ??_SPI_Init:	
   760                           ; 1 bytes @ 0x12
   761                           
   762  0032                     SPI_Init@sType:	
   763                           ; 1 bytes @ 0x12
   764                           
   765                           
   766                           ; 1 bytes @ 0x12
   767  0032                     	ds	1
   768  0033                     Lcd_Write_String@a:
   769                           
   770                           ; 1 bytes @ 0x13
   771  0033                     	ds	1
   772  0034                     ??_main:
   773                           
   774                           ; 1 bytes @ 0x14
   775  0034                     	ds	3
   776                           
   777                           	psect	maintext
   778  0027                     __pmaintext:	
   779 ;;
   780 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   781 ;;
   782 ;; *************** function _main *****************
   783 ;; Defined at:
   784 ;;		line 79 in file "Master.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : B00/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          0       3       0       0       0
   801 ;;      Totals:         0       3       0       0       0
   802 ;;Total ram usage:        3 bytes
   803 ;; Hardware stack levels required when called:    6
   804 ;; This function calls:
   805 ;;		_Lcd_Cmd
   806 ;;		_Lcd_Init
   807 ;;		_Lcd_Write_Char
   808 ;;		_Lcd_Write_String
   809 ;;		_SERIAL_Init
   810 ;;		_SPI_Init
   811 ;;		_SPI_Read
   812 ;;		_SPI_Write
   813 ;;		_setup
   814 ;; This function is called by:
   815 ;;		Startup code after reset
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           
   820                           ;psect for function _main
   821  0027                     _main:
   822  0027                     l1382:	
   823                           ;incstack = 0
   824                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   825                           
   826                           
   827                           ;Master.c: 81:     setup();
   828  0027  120A  118A  2354  120A  118A  	fcall	_setup
   829  002C                     l1384:
   830                           
   831                           ;Master.c: 88:         Lcd_Init();
   832  002C  120A  118A  2335  120A  118A  	fcall	_Lcd_Init
   833  0031                     l1386:
   834                           
   835                           ;Master.c: 89:         SPI_Init(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
   836  0031  1283               	bcf	3,5	;RP0=0, select bank0
   837  0032  1303               	bcf	3,6	;RP1=0, select bank0
   838  0033  01AF               	clrf	SPI_Init@sDataSample
   839  0034  01B0               	clrf	SPI_Init@sClockIdle
   840  0035  01B1               	clrf	SPI_Init@sTransmitEdge
   841  0036  3020               	movlw	32
   842  0037  120A  118A  2316  120A  118A  	fcall	_SPI_Init
   843  003C                     l1388:
   844                           
   845                           ;Master.c: 90:         SERIAL_Init();
   846  003C  120A  118A  2387  120A  118A  	fcall	_SERIAL_Init
   847  0041                     l1390:
   848                           
   849                           ;Master.c: 92:         Lcd_Write_String("S1    S2    S3  ");
   850  0041  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   851  0042  120A  118A  22F3  120A  118A  	fcall	_Lcd_Write_String
   852  0047                     l1392:
   853                           
   854                           ;Master.c: 93:         Lcd_Cmd(0xC0);
   855  0047  30C0               	movlw	192
   856  0048  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
   857  004D                     l1394:
   858                           
   859                           ;Master.c: 95:         PORTB = 0;
   860  004D  1283               	bcf	3,5	;RP0=0, select bank0
   861  004E  1303               	bcf	3,6	;RP1=0, select bank0
   862  004F  0186               	clrf	6	;volatile
   863  0050                     l1396:
   864                           
   865                           ;Master.c: 97:         PORTBbits.RB0 = 0;
   866  0050  1006               	bcf	6,0	;volatile
   867  0051                     l1398:
   868                           
   869                           ;Master.c: 98:         _delay((unsigned long)((1)*(8000000/4000.0)));
   870  0051  3003               	movlw	3
   871  0052  1283               	bcf	3,5	;RP0=0, select bank0
   872  0053  1303               	bcf	3,6	;RP1=0, select bank0
   873  0054  00B5               	movwf	??_main+1
   874  0055  3097               	movlw	151
   875  0056  00B4               	movwf	??_main
   876  0057                     u537:
   877  0057  0BB4               	decfsz	??_main,f
   878  0058  2857               	goto	u537
   879  0059  0BB5               	decfsz	??_main+1,f
   880  005A  2857               	goto	u537
   881  005B                     l1400:
   882                           
   883                           ;Master.c: 100:         SPI_Write(1);
   884  005B  3001               	movlw	1
   885  005C  120A  118A  23B5  120A  118A  	fcall	_SPI_Write
   886  0061                     l1402:
   887                           
   888                           ;Master.c: 101:         Slave1 = SPI_Read();
   889  0061  120A  118A  23A5  120A  118A  	fcall	_SPI_Read
   890  0066  1283               	bcf	3,5	;RP0=0, select bank0
   891  0067  1303               	bcf	3,6	;RP1=0, select bank0
   892  0068  00B4               	movwf	??_main
   893  0069  0834               	movf	??_main,w
   894  006A  00BE               	movwf	_Slave1
   895  006B                     l1404:
   896                           
   897                           ;Master.c: 103:         _delay((unsigned long)((1)*(8000000/4000.0)));
   898  006B  3003               	movlw	3
   899  006C  1283               	bcf	3,5	;RP0=0, select bank0
   900  006D  1303               	bcf	3,6	;RP1=0, select bank0
   901  006E  00B5               	movwf	??_main+1
   902  006F  3097               	movlw	151
   903  0070  00B4               	movwf	??_main
   904  0071                     u547:
   905  0071  0BB4               	decfsz	??_main,f
   906  0072  2871               	goto	u547
   907  0073  0BB5               	decfsz	??_main+1,f
   908  0074  2871               	goto	u547
   909  0075                     l1406:
   910                           
   911                           ;Master.c: 104:         PORTBbits.RB0 = 1;
   912  0075  1283               	bcf	3,5	;RP0=0, select bank0
   913  0076  1303               	bcf	3,6	;RP1=0, select bank0
   914  0077  1406               	bsf	6,0	;volatile
   915  0078                     l1408:
   916                           
   917                           ;Master.c: 105:         _delay((unsigned long)((100)*(8000000/4000.0)));
   918  0078  3002               	movlw	2
   919  0079  1283               	bcf	3,5	;RP0=0, select bank0
   920  007A  1303               	bcf	3,6	;RP1=0, select bank0
   921  007B  00B6               	movwf	??_main+2
   922  007C  3004               	movlw	4
   923  007D  00B5               	movwf	??_main+1
   924  007E  30B9               	movlw	185
   925  007F  00B4               	movwf	??_main
   926  0080                     u557:
   927  0080  0BB4               	decfsz	??_main,f
   928  0081  2880               	goto	u557
   929  0082  0BB5               	decfsz	??_main+1,f
   930  0083  2880               	goto	u557
   931  0084  0BB6               	decfsz	??_main+2,f
   932  0085  2880               	goto	u557
   933  0086  2887               	nop2
   934  0087                     l1410:
   935                           
   936                           ;Master.c: 107:         Lcd_Write_Char(Slave1);
   937  0087  1283               	bcf	3,5	;RP0=0, select bank0
   938  0088  1303               	bcf	3,6	;RP1=0, select bank0
   939  0089  083E               	movf	_Slave1,w
   940  008A  120A  118A  21DD  120A  118A  	fcall	_Lcd_Write_Char
   941  008F                     l1412:
   942                           
   943                           ;Master.c: 109:         Lcd_Write_String("A");
   944  008F  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   945  0090  120A  118A  22F3  120A  118A  	fcall	_Lcd_Write_String
   946  0095                     l1414:
   947                           
   948                           ;Master.c: 112:         PORTBbits.RB1 = 0;
   949  0095  1283               	bcf	3,5	;RP0=0, select bank0
   950  0096  1303               	bcf	3,6	;RP1=0, select bank0
   951  0097  1086               	bcf	6,1	;volatile
   952  0098                     l1416:
   953                           
   954                           ;Master.c: 113:         _delay((unsigned long)((1)*(8000000/4000.0)));
   955  0098  3003               	movlw	3
   956  0099  1283               	bcf	3,5	;RP0=0, select bank0
   957  009A  1303               	bcf	3,6	;RP1=0, select bank0
   958  009B  00B5               	movwf	??_main+1
   959  009C  3097               	movlw	151
   960  009D  00B4               	movwf	??_main
   961  009E                     u567:
   962  009E  0BB4               	decfsz	??_main,f
   963  009F  289E               	goto	u567
   964  00A0  0BB5               	decfsz	??_main+1,f
   965  00A1  289E               	goto	u567
   966  00A2                     l1418:
   967                           
   968                           ;Master.c: 115:         SPI_Write(1);
   969  00A2  3001               	movlw	1
   970  00A3  120A  118A  23B5  120A  118A  	fcall	_SPI_Write
   971  00A8                     l1420:
   972                           
   973                           ;Master.c: 116:         Slave2 = SPI_Read();
   974  00A8  120A  118A  23A5  120A  118A  	fcall	_SPI_Read
   975  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   976  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   977  00AF  00B4               	movwf	??_main
   978  00B0  0834               	movf	??_main,w
   979  00B1  00BD               	movwf	_Slave2
   980  00B2                     l1422:
   981                           
   982                           ;Master.c: 118:         _delay((unsigned long)((1)*(8000000/4000.0)));
   983  00B2  3003               	movlw	3
   984  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   985  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   986  00B5  00B5               	movwf	??_main+1
   987  00B6  3097               	movlw	151
   988  00B7  00B4               	movwf	??_main
   989  00B8                     u577:
   990  00B8  0BB4               	decfsz	??_main,f
   991  00B9  28B8               	goto	u577
   992  00BA  0BB5               	decfsz	??_main+1,f
   993  00BB  28B8               	goto	u577
   994  00BC                     l1424:
   995                           
   996                           ;Master.c: 119:         PORTBbits.RB1 = 1;
   997  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   998  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   999  00BE  1486               	bsf	6,1	;volatile
  1000  00BF                     l1426:
  1001                           
  1002                           ;Master.c: 120:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1003  00BF  3002               	movlw	2
  1004  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1005  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1006  00C2  00B6               	movwf	??_main+2
  1007  00C3  3004               	movlw	4
  1008  00C4  00B5               	movwf	??_main+1
  1009  00C5  30B9               	movlw	185
  1010  00C6  00B4               	movwf	??_main
  1011  00C7                     u587:
  1012  00C7  0BB4               	decfsz	??_main,f
  1013  00C8  28C7               	goto	u587
  1014  00C9  0BB5               	decfsz	??_main+1,f
  1015  00CA  28C7               	goto	u587
  1016  00CB  0BB6               	decfsz	??_main+2,f
  1017  00CC  28C7               	goto	u587
  1018  00CD  28CE               	nop2
  1019  00CE                     l1428:
  1020                           
  1021                           ;Master.c: 122:         Lcd_Write_Char(Slave2);
  1022  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1023  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1024  00D0  083D               	movf	_Slave2,w
  1025  00D1  120A  118A  21DD  120A  118A  	fcall	_Lcd_Write_Char
  1026  00D6                     l1430:
  1027                           
  1028                           ;Master.c: 124:         Lcd_Write_String("A");
  1029  00D6  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1030  00D7  120A  118A  22F3  120A  118A  	fcall	_Lcd_Write_String
  1031  00DC                     l1432:
  1032                           
  1033                           ;Master.c: 127:         PORTBbits.RB2 = 0;
  1034  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1035  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1036  00DE  1106               	bcf	6,2	;volatile
  1037  00DF                     l1434:
  1038                           
  1039                           ;Master.c: 128:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1040  00DF  3003               	movlw	3
  1041  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1042  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1043  00E2  00B5               	movwf	??_main+1
  1044  00E3  3097               	movlw	151
  1045  00E4  00B4               	movwf	??_main
  1046  00E5                     u597:
  1047  00E5  0BB4               	decfsz	??_main,f
  1048  00E6  28E5               	goto	u597
  1049  00E7  0BB5               	decfsz	??_main+1,f
  1050  00E8  28E5               	goto	u597
  1051  00E9                     l1436:
  1052                           
  1053                           ;Master.c: 130:         SPI_Write(1);
  1054  00E9  3001               	movlw	1
  1055  00EA  120A  118A  23B5  120A  118A  	fcall	_SPI_Write
  1056  00EF                     l1438:
  1057                           
  1058                           ;Master.c: 131:         Slave3 = SPI_Read();
  1059  00EF  120A  118A  23A5  120A  118A  	fcall	_SPI_Read
  1060  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1061  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1062  00F6  00B4               	movwf	??_main
  1063  00F7  0834               	movf	??_main,w
  1064  00F8  00BC               	movwf	_Slave3
  1065  00F9                     l1440:
  1066                           
  1067                           ;Master.c: 133:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1068  00F9  3003               	movlw	3
  1069  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1070  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1071  00FC  00B5               	movwf	??_main+1
  1072  00FD  3097               	movlw	151
  1073  00FE  00B4               	movwf	??_main
  1074  00FF                     u607:
  1075  00FF  0BB4               	decfsz	??_main,f
  1076  0100  28FF               	goto	u607
  1077  0101  0BB5               	decfsz	??_main+1,f
  1078  0102  28FF               	goto	u607
  1079  0103                     l1442:
  1080                           
  1081                           ;Master.c: 134:         PORTBbits.RB2 = 1;
  1082  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0105  1506               	bsf	6,2	;volatile
  1085  0106                     l1444:
  1086                           
  1087                           ;Master.c: 135:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1088  0106  3002               	movlw	2
  1089  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0109  00B6               	movwf	??_main+2
  1092  010A  3004               	movlw	4
  1093  010B  00B5               	movwf	??_main+1
  1094  010C  30B9               	movlw	185
  1095  010D  00B4               	movwf	??_main
  1096  010E                     u617:
  1097  010E  0BB4               	decfsz	??_main,f
  1098  010F  290E               	goto	u617
  1099  0110  0BB5               	decfsz	??_main+1,f
  1100  0111  290E               	goto	u617
  1101  0112  0BB6               	decfsz	??_main+2,f
  1102  0113  290E               	goto	u617
  1103  0114  2915               	nop2
  1104  0115                     l1446:
  1105                           
  1106                           ;Master.c: 137:         Lcd_Write_Char(Slave3);
  1107  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0117  083C               	movf	_Slave3,w
  1110  0118  120A  118A  21DD  120A  118A  	fcall	_Lcd_Write_Char
  1111  011D                     l1448:
  1112                           
  1113                           ;Master.c: 139:         Lcd_Write_String("A");
  1114  011D  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1115  011E  120A  118A  22F3  120A  118A  	fcall	_Lcd_Write_String
  1116  0123  282C               	goto	l1384
  1117  0124  120A  118A  2810   	ljmp	start
  1118  0127                     __end_of_main:
  1119                           
  1120                           	psect	text1
  1121  0354                     __ptext1:	
  1122 ;; *************** function _setup *****************
  1123 ;; Defined at:
  1124 ;;		line 147 in file "Master.c"
  1125 ;; Parameters:    Size  Location     Type
  1126 ;;		None
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;		None
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		status,2
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1138 ;;      Params:         0       0       0       0       0
  1139 ;;      Locals:         0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0
  1141 ;;      Totals:         0       0       0       0       0
  1142 ;;Total ram usage:        0 bytes
  1143 ;; Hardware stack levels used:    1
  1144 ;; Hardware stack levels required when called:    4
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _setup
  1154  0354                     _setup:
  1155  0354                     l1330:	
  1156                           ;incstack = 0
  1157                           ; Regs used in _setup: [status,2]
  1158                           
  1159                           
  1160                           ;Master.c: 148:     ANSEL = 0b00000000;
  1161  0354  1683               	bsf	3,5	;RP0=1, select bank3
  1162  0355  1703               	bsf	3,6	;RP1=1, select bank3
  1163  0356  0188               	clrf	8	;volatile
  1164                           
  1165                           ;Master.c: 149:     ANSELH= 0b00000000;
  1166  0357  0189               	clrf	9	;volatile
  1167                           
  1168                           ;Master.c: 150:     TRISA = 0b00000000;
  1169  0358  1683               	bsf	3,5	;RP0=1, select bank1
  1170  0359  1303               	bcf	3,6	;RP1=0, select bank1
  1171  035A  0185               	clrf	5	;volatile
  1172                           
  1173                           ;Master.c: 151:     TRISB = 0b00000000;
  1174  035B  0186               	clrf	6	;volatile
  1175                           
  1176                           ;Master.c: 152:     TRISC = 0;
  1177  035C  0187               	clrf	7	;volatile
  1178  035D                     l1332:
  1179                           
  1180                           ;Master.c: 153:     TRISCbits.TRISC5 = 1;
  1181  035D  1687               	bsf	7,5	;volatile
  1182  035E                     l1334:
  1183                           
  1184                           ;Master.c: 154:     TRISCbits.TRISC7 = 1;
  1185  035E  1787               	bsf	7,7	;volatile
  1186                           
  1187                           ;Master.c: 155:     TRISD = 0b00000000;
  1188  035F  0188               	clrf	8	;volatile
  1189                           
  1190                           ;Master.c: 156:     TRISE = 0;
  1191  0360  0189               	clrf	9	;volatile
  1192                           
  1193                           ;Master.c: 158:     PORTA = 0;
  1194  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0363  0185               	clrf	5	;volatile
  1197                           
  1198                           ;Master.c: 159:     PORTB = 0;
  1199  0364  0186               	clrf	6	;volatile
  1200                           
  1201                           ;Master.c: 160:     PORTC = 0;
  1202  0365  0187               	clrf	7	;volatile
  1203                           
  1204                           ;Master.c: 161:     PORTD = 0;
  1205  0366  0188               	clrf	8	;volatile
  1206                           
  1207                           ;Master.c: 162:     PORTE = 0;
  1208  0367  0189               	clrf	9	;volatile
  1209  0368                     l1336:
  1210                           
  1211                           ;Master.c: 164:     PIE1bits.RCIE = 1;
  1212  0368  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0369  1303               	bcf	3,6	;RP1=0, select bank1
  1214  036A  168C               	bsf	12,5	;volatile
  1215  036B                     l1338:
  1216                           
  1217                           ;Master.c: 165:     INTCONbits.PEIE = 1;
  1218  036B  170B               	bsf	11,6	;volatile
  1219  036C                     l1340:
  1220                           
  1221                           ;Master.c: 166:     INTCONbits.GIE = 1;
  1222  036C  178B               	bsf	11,7	;volatile
  1223  036D                     l129:
  1224  036D  0008               	return
  1225  036E                     __end_of_setup:
  1226                           
  1227                           	psect	text2
  1228  03B5                     __ptext2:	
  1229 ;; *************** function _SPI_Write *****************
  1230 ;; Defined at:
  1231 ;;		line 27 in file "SPI.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  a               1    wreg     unsigned char 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  a               1   15[BANK0 ] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         0       0       0       0       0
  1246 ;;      Locals:         0       1       0       0       0
  1247 ;;      Temps:          0       0       0       0       0
  1248 ;;      Totals:         0       1       0       0       0
  1249 ;;Total ram usage:        1 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    4
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _SPI_Write
  1261  03B5                     _SPI_Write:
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _SPI_Write: [wreg]
  1265                           ;SPI_Write@a stored from wreg
  1266  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1267  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1268  03B7  00AF               	movwf	SPI_Write@a
  1269  03B8                     l1304:
  1270                           
  1271                           ;SPI.c: 28:     SSPBUF = a;
  1272  03B8  082F               	movf	SPI_Write@a,w
  1273  03B9  0093               	movwf	19	;volatile
  1274  03BA                     l22:
  1275  03BA  0008               	return
  1276  03BB                     __end_of_SPI_Write:
  1277                           
  1278                           	psect	text3
  1279  03A5                     __ptext3:	
  1280 ;; *************** function _SPI_Read *****************
  1281 ;; Defined at:
  1282 ;;		line 43 in file "SPI.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      unsigned char 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0, pclath, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    5
  1303 ;; This function calls:
  1304 ;;		_spiReceiveWait
  1305 ;; This function is called by:
  1306 ;;		_main
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _SPI_Read
  1312  03A5                     _SPI_Read:
  1313  03A5                     l1306:	
  1314                           ;incstack = 0
  1315                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
  1316                           
  1317                           
  1318                           ;SPI.c: 44:     spiReceiveWait();
  1319  03A5  120A  118A  23AE  120A  118A  	fcall	_spiReceiveWait
  1320  03AA                     l1308:
  1321                           
  1322                           ;SPI.c: 45:     return (SSPBUF);
  1323  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1324  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1325  03AC  0813               	movf	19,w	;volatile
  1326  03AD                     l36:
  1327  03AD  0008               	return
  1328  03AE                     __end_of_SPI_Read:
  1329                           
  1330                           	psect	text4
  1331  03AE                     __ptext4:	
  1332 ;; *************** function _spiReceiveWait *****************
  1333 ;; Defined at:
  1334 ;;		line 31 in file "SPI.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		None
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0
  1351 ;;      Totals:         0       0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    4
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_SPI_Read
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function _spiReceiveWait
  1364  03AE                     _spiReceiveWait:
  1365  03AE                     l1202:	
  1366                           ;incstack = 0
  1367                           ; Regs used in _spiReceiveWait: []
  1368                           
  1369  03AE                     l25:	
  1370                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1371                           
  1372  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1373  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1374  03B0  1C14               	btfss	20,0	;volatile
  1375  03B1  2BB3               	goto	u411
  1376  03B2  2BB4               	goto	u410
  1377  03B3                     u411:
  1378  03B3  2BAE               	goto	l25
  1379  03B4                     u410:
  1380  03B4                     l28:
  1381  03B4  0008               	return
  1382  03B5                     __end_of_spiReceiveWait:
  1383                           
  1384                           	psect	text5
  1385  0316                     __ptext5:	
  1386 ;; *************** function _SPI_Init *****************
  1387 ;; Defined at:
  1388 ;;		line 8 in file "SPI.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  sType           1    wreg     enum E1349
  1391 ;;  sDataSample     1   15[BANK0 ] enum E1357
  1392 ;;  sClockIdle      1   16[BANK0 ] enum E1361
  1393 ;;  sTransmitEdg    1   17[BANK0 ] enum E1365
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;  sType           1   18[BANK0 ] enum E1349
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  1    wreg      void 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       3       0       0       0
  1406 ;;      Locals:         0       1       0       0       0
  1407 ;;      Temps:          0       0       0       0       0
  1408 ;;      Totals:         0       4       0       0       0
  1409 ;;Total ram usage:        4 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    4
  1412 ;; This function calls:
  1413 ;;		Nothing
  1414 ;; This function is called by:
  1415 ;;		_main
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           
  1419                           
  1420                           ;psect for function _SPI_Init
  1421  0316                     _SPI_Init:
  1422                           
  1423                           ;incstack = 0
  1424                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  1425                           ;SPI_Init@sType stored from wreg
  1426  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0318  00B2               	movwf	SPI_Init@sType
  1429  0319                     l1294:
  1430                           
  1431                           ;SPI.c: 8: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:     TRISC5 = 0;
  1432  0319  1683               	bsf	3,5	;RP0=1, select bank1
  1433  031A  1303               	bcf	3,6	;RP1=0, select bank1
  1434  031B  1287               	bcf	7,5	;volatile
  1435                           
  1436                           ;SPI.c: 11:     TRISC4 = 1;
  1437  031C  1607               	bsf	7,4	;volatile
  1438                           
  1439                           ;SPI.c: 13:     if(sType & 0b00000100)
  1440  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1441  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1442  031F  1D32               	btfss	SPI_Init@sType,2
  1443  0320  2B22               	goto	u471
  1444  0321  2B23               	goto	u470
  1445  0322                     u471:
  1446  0322  2B29               	goto	l1300
  1447  0323                     u470:
  1448  0323                     l1296:
  1449                           
  1450                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1451  0323  0831               	movf	SPI_Init@sTransmitEdge,w
  1452  0324  1683               	bsf	3,5	;RP0=1, select bank1
  1453  0325  1303               	bcf	3,6	;RP1=0, select bank1
  1454  0326  0094               	movwf	20	;volatile
  1455  0327                     l1298:
  1456                           
  1457                           ;SPI.c: 16:         TRISC3 = 1;
  1458  0327  1587               	bsf	7,3	;volatile
  1459                           
  1460                           ;SPI.c: 17:     }
  1461  0328  2B2F               	goto	l18
  1462  0329                     l1300:
  1463                           
  1464                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1465  0329  082F               	movf	SPI_Init@sDataSample,w
  1466  032A  0431               	iorwf	SPI_Init@sTransmitEdge,w
  1467  032B  1683               	bsf	3,5	;RP0=1, select bank1
  1468  032C  1303               	bcf	3,6	;RP1=0, select bank1
  1469  032D  0094               	movwf	20	;volatile
  1470  032E                     l1302:
  1471                           
  1472                           ;SPI.c: 21:         TRISC3 = 0;
  1473  032E  1187               	bcf	7,3	;volatile
  1474  032F                     l18:	
  1475                           ;SPI.c: 22:     }
  1476                           
  1477                           
  1478                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1479  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1480  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1481  0331  0832               	movf	SPI_Init@sType,w
  1482  0332  0430               	iorwf	SPI_Init@sClockIdle,w
  1483  0333  0094               	movwf	20	;volatile
  1484  0334                     l19:
  1485  0334  0008               	return
  1486  0335                     __end_of_SPI_Init:
  1487                           
  1488                           	psect	text6
  1489  0387                     __ptext6:	
  1490 ;; *************** function _SERIAL_Init *****************
  1491 ;; Defined at:
  1492 ;;		line 13 in file "UART.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      void 
  1499 ;; Registers used:
  1500 ;;		wreg
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1506 ;;      Params:         0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0
  1509 ;;      Totals:         0       0       0       0       0
  1510 ;;Total ram usage:        0 bytes
  1511 ;; Hardware stack levels used:    1
  1512 ;; Hardware stack levels required when called:    4
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_main
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           
  1521                           ;psect for function _SERIAL_Init
  1522  0387                     _SERIAL_Init:
  1523  0387                     l1344:	
  1524                           ;incstack = 0
  1525                           ; Regs used in _SERIAL_Init: [wreg]
  1526                           
  1527                           
  1528                           ;UART.c: 14:     SPBRG = 25;
  1529  0387  3019               	movlw	25
  1530  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1531  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1532  038A  0099               	movwf	25	;volatile
  1533  038B                     l1346:
  1534                           
  1535                           ;UART.c: 16:     TXSTAbits.BRGH = 1;
  1536  038B  1518               	bsf	24,2	;volatile
  1537  038C                     l1348:
  1538                           
  1539                           ;UART.c: 17:     TXSTAbits.TXEN = 1;
  1540  038C  1698               	bsf	24,5	;volatile
  1541  038D                     l1350:
  1542                           
  1543                           ;UART.c: 18:     TXSTAbits.SYNC = 0;
  1544  038D  1218               	bcf	24,4	;volatile
  1545  038E                     l1352:
  1546                           
  1547                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  1548  038E  1318               	bcf	24,6	;volatile
  1549  038F                     l1354:
  1550                           
  1551                           ;UART.c: 21:     RCSTAbits.CREN = 1;
  1552  038F  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0390  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0391  1618               	bsf	24,4	;volatile
  1555  0392                     l1356:
  1556                           
  1557                           ;UART.c: 22:     RCSTAbits.SPEN = 1;
  1558  0392  1798               	bsf	24,7	;volatile
  1559  0393                     l1358:
  1560                           
  1561                           ;UART.c: 23:     RCSTAbits.RX9 = 0;
  1562  0393  1318               	bcf	24,6	;volatile
  1563  0394                     l1360:
  1564                           
  1565                           ;UART.c: 25:     PIE1bits.RCIE = 1;
  1566  0394  1683               	bsf	3,5	;RP0=1, select bank1
  1567  0395  1303               	bcf	3,6	;RP1=0, select bank1
  1568  0396  168C               	bsf	12,5	;volatile
  1569  0397                     l1362:
  1570                           
  1571                           ;UART.c: 26:     INTCONbits.PEIE = 1;
  1572  0397  170B               	bsf	11,6	;volatile
  1573  0398                     l1364:
  1574                           
  1575                           ;UART.c: 27:     INTCONbits.GIE = 1;
  1576  0398  178B               	bsf	11,7	;volatile
  1577  0399                     l201:
  1578  0399  0008               	return
  1579  039A                     __end_of_SERIAL_Init:
  1580                           
  1581                           	psect	text7
  1582  02F3                     __ptext7:	
  1583 ;; *************** function _Lcd_Write_String *****************
  1584 ;; Defined at:
  1585 ;;		line 83 in file "LCD.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  a               1    wreg     PTR unsigned char 
  1588 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(17), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  a               1   19[BANK0 ] PTR unsigned char 
  1591 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(17), 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         0       1       0       0       0
  1603 ;;      Temps:          0       1       0       0       0
  1604 ;;      Totals:         0       2       0       0       0
  1605 ;;Total ram usage:        2 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    5
  1608 ;; This function calls:
  1609 ;;		_Lcd_Write_Char
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _Lcd_Write_String
  1617  02F3                     _Lcd_Write_String:
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1621                           ;Lcd_Write_String@a stored from wreg
  1622  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1623  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1624  02F5  00B3               	movwf	Lcd_Write_String@a
  1625  02F6                     l1366:
  1626                           
  1627                           ;LCD.c: 84:     while(*a != 0)
  1628  02F6  2B09               	goto	l1372
  1629  02F7                     l1368:
  1630                           
  1631                           ;LCD.c: 85:         Lcd_Write_Char(*a++);
  1632  02F7  0833               	movf	Lcd_Write_String@a,w
  1633  02F8  0084               	movwf	4
  1634  02F9  120A  118A  236E  120A  118A  	fcall	stringdir
  1635  02FE  120A  118A  21DD  120A  118A  	fcall	_Lcd_Write_Char
  1636  0303                     l1370:
  1637  0303  3001               	movlw	1
  1638  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0306  00B2               	movwf	??_Lcd_Write_String
  1641  0307  0832               	movf	??_Lcd_Write_String,w
  1642  0308  07B3               	addwf	Lcd_Write_String@a,f
  1643  0309                     l1372:
  1644                           
  1645                           ;LCD.c: 84:     while(*a != 0)
  1646  0309  0833               	movf	Lcd_Write_String@a,w
  1647  030A  0084               	movwf	4
  1648  030B  120A  118A  236E  120A  118A  	fcall	stringdir
  1649  0310  3A00               	xorlw	0
  1650  0311  1D03               	skipz
  1651  0312  2B14               	goto	u491
  1652  0313  2B15               	goto	u490
  1653  0314                     u491:
  1654  0314  2AF7               	goto	l1368
  1655  0315                     u490:
  1656  0315                     l167:
  1657  0315  0008               	return
  1658  0316                     __end_of_Lcd_Write_String:
  1659                           
  1660                           	psect	text8
  1661  01DD                     __ptext8:	
  1662 ;; *************** function _Lcd_Write_Char *****************
  1663 ;; Defined at:
  1664 ;;		line 60 in file "LCD.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  a               1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  a               1   17[BANK0 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         0       1       0       0       0
  1680 ;;      Temps:          0       2       0       0       0
  1681 ;;      Totals:         0       3       0       0       0
  1682 ;;Total ram usage:        3 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    4
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;;		_Lcd_Write_String
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _Lcd_Write_Char
  1695  01DD                     _Lcd_Write_Char:
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0]
  1699                           ;Lcd_Write_Char@a stored from wreg
  1700  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1701  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1702  01DF  00B1               	movwf	Lcd_Write_Char@a
  1703  01E0                     l1234:
  1704                           
  1705                           ;LCD.c: 61:     PORTD = 0xFF;
  1706  01E0  30FF               	movlw	255
  1707  01E1  0088               	movwf	8	;volatile
  1708  01E2                     l1236:
  1709                           
  1710                           ;LCD.c: 62:     PORTD &= 0x80;
  1711  01E2  3080               	movlw	128
  1712  01E3  00AF               	movwf	??_Lcd_Write_Char
  1713  01E4  082F               	movf	??_Lcd_Write_Char,w
  1714  01E5  0588               	andwf	8,f	;volatile
  1715  01E6                     l1238:
  1716                           
  1717                           ;LCD.c: 63:     RE0 = 0;
  1718  01E6  1009               	bcf	9,0	;volatile
  1719  01E7                     l1240:
  1720                           
  1721                           ;LCD.c: 64:     RE1 = 1;
  1722  01E7  1489               	bsf	9,1	;volatile
  1723  01E8                     l1242:
  1724                           
  1725                           ;LCD.c: 65:     RE2 = 0;
  1726  01E8  1109               	bcf	9,2	;volatile
  1727  01E9                     l1244:
  1728                           
  1729                           ;LCD.c: 66:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1730  01E9  304E               	movlw	78
  1731  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1732  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1733  01EC  00B0               	movwf	??_Lcd_Write_Char+1
  1734  01ED  30EA               	movlw	234
  1735  01EE  00AF               	movwf	??_Lcd_Write_Char
  1736  01EF                     u627:
  1737  01EF  0BAF               	decfsz	??_Lcd_Write_Char,f
  1738  01F0  29EF               	goto	u627
  1739  01F1  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1740  01F2  29EF               	goto	u627
  1741  01F3  0000               	nop
  1742  01F4                     l1246:
  1743                           
  1744                           ;LCD.c: 67:     RE2 = 1;
  1745  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1746  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1747  01F6  1509               	bsf	9,2	;volatile
  1748                           
  1749                           ;LCD.c: 68:     if (PORTD == 0x80){
  1750  01F7  3080               	movlw	128
  1751  01F8  0608               	xorwf	8,w	;volatile
  1752  01F9  1D03               	btfss	3,2
  1753  01FA  29FC               	goto	u431
  1754  01FB  29FD               	goto	u430
  1755  01FC                     u431:
  1756  01FC  2A0C               	goto	l1254
  1757  01FD                     u430:
  1758  01FD                     l1248:
  1759                           
  1760                           ;LCD.c: 69:     RE2 = 0;
  1761  01FD  1109               	bcf	9,2	;volatile
  1762  01FE                     l1250:
  1763                           
  1764                           ;LCD.c: 70:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1765  01FE  304E               	movlw	78
  1766  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0201  00B0               	movwf	??_Lcd_Write_Char+1
  1769  0202  30EA               	movlw	234
  1770  0203  00AF               	movwf	??_Lcd_Write_Char
  1771  0204                     u637:
  1772  0204  0BAF               	decfsz	??_Lcd_Write_Char,f
  1773  0205  2A04               	goto	u637
  1774  0206  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1775  0207  2A04               	goto	u637
  1776  0208  0000               	nop
  1777  0209                     l1252:
  1778                           
  1779                           ;LCD.c: 71:     RE2 = 1;
  1780  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1781  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1782  020B  1509               	bsf	9,2	;volatile
  1783  020C                     l1254:	
  1784                           ;LCD.c: 72:     }
  1785                           
  1786                           
  1787                           ;LCD.c: 75:     PORTD = a;
  1788  020C  0831               	movf	Lcd_Write_Char@a,w
  1789  020D  0088               	movwf	8	;volatile
  1790  020E                     l1256:
  1791                           
  1792                           ;LCD.c: 76:     RE0 = 1;
  1793  020E  1409               	bsf	9,0	;volatile
  1794  020F                     l1258:
  1795                           
  1796                           ;LCD.c: 77:     RE1 = 0;
  1797  020F  1089               	bcf	9,1	;volatile
  1798  0210                     l1260:
  1799                           
  1800                           ;LCD.c: 78:     RE2 = 1;
  1801  0210  1509               	bsf	9,2	;volatile
  1802                           
  1803                           ;LCD.c: 79:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1804  0211  304E               	movlw	78
  1805  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1807  0214  00B0               	movwf	??_Lcd_Write_Char+1
  1808  0215  30EA               	movlw	234
  1809  0216  00AF               	movwf	??_Lcd_Write_Char
  1810  0217                     u647:
  1811  0217  0BAF               	decfsz	??_Lcd_Write_Char,f
  1812  0218  2A17               	goto	u647
  1813  0219  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1814  021A  2A17               	goto	u647
  1815  021B  0000               	nop
  1816  021C                     l1262:
  1817                           
  1818                           ;LCD.c: 80:     RE2 = 0;
  1819  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1820  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1821  021E  1109               	bcf	9,2	;volatile
  1822  021F                     l161:
  1823  021F  0008               	return
  1824  0220                     __end_of_Lcd_Write_Char:
  1825                           
  1826                           	psect	text9
  1827  0335                     __ptext9:	
  1828 ;; *************** function _Lcd_Init *****************
  1829 ;; Defined at:
  1830 ;;		line 52 in file "LCD.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    5
  1851 ;; This function calls:
  1852 ;;		_Lcd_Cmd
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _Lcd_Init
  1860  0335                     _Lcd_Init:
  1861  0335                     l1342:	
  1862                           ;incstack = 0
  1863                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1864                           
  1865                           
  1866                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  1867  0335  3038               	movlw	56
  1868  0336  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1869                           
  1870                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  1871  033B  300C               	movlw	12
  1872  033C  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1873                           
  1874                           ;LCD.c: 55:     Lcd_Cmd(0x01);
  1875  0341  3001               	movlw	1
  1876  0342  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1877                           
  1878                           ;LCD.c: 56:     Lcd_Cmd(0x06);
  1879  0347  3006               	movlw	6
  1880  0348  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1881                           
  1882                           ;LCD.c: 57:     Lcd_Cmd(0x80);
  1883  034D  3080               	movlw	128
  1884  034E  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1885  0353                     l156:
  1886  0353  0008               	return
  1887  0354                     __end_of_Lcd_Init:
  1888                           
  1889                           	psect	text10
  1890  0220                     __ptext10:	
  1891 ;; *************** function _Lcd_Cmd *****************
  1892 ;; Defined at:
  1893 ;;		line 13 in file "LCD.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;  a               1    wreg     unsigned char 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  a               1   17[BANK0 ] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       1       0       0       0
  1909 ;;      Temps:          0       2       0       0       0
  1910 ;;      Totals:         0       3       0       0       0
  1911 ;;Total ram usage:        3 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; Hardware stack levels required when called:    4
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;;		_Lcd_Init
  1919 ;;		_Lcd_Clear
  1920 ;;		_Lcd_Set_Cursor
  1921 ;;		_Lcd_Shift_Right
  1922 ;;		_Lcd_Shift_Left
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _Lcd_Cmd
  1928  0220                     _Lcd_Cmd:
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  1932                           ;Lcd_Cmd@a stored from wreg
  1933  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0222  00B1               	movwf	Lcd_Cmd@a
  1936  0223                     l1204:
  1937                           
  1938                           ;LCD.c: 14:  PORTD = 0xFF;
  1939  0223  30FF               	movlw	255
  1940  0224  0088               	movwf	8	;volatile
  1941  0225                     l1206:
  1942                           
  1943                           ;LCD.c: 15:     PORTD &= 0x80;
  1944  0225  3080               	movlw	128
  1945  0226  00AF               	movwf	??_Lcd_Cmd
  1946  0227  082F               	movf	??_Lcd_Cmd,w
  1947  0228  0588               	andwf	8,f	;volatile
  1948  0229                     l1208:
  1949                           
  1950                           ;LCD.c: 16:     RE0 = 0;
  1951  0229  1009               	bcf	9,0	;volatile
  1952  022A                     l1210:
  1953                           
  1954                           ;LCD.c: 17:     RE1 = 1;
  1955  022A  1489               	bsf	9,1	;volatile
  1956  022B                     l1212:
  1957                           
  1958                           ;LCD.c: 18:     RE2 = 0;
  1959  022B  1109               	bcf	9,2	;volatile
  1960  022C                     l1214:
  1961                           
  1962                           ;LCD.c: 19:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1963  022C  304E               	movlw	78
  1964  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1965  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1966  022F  00B0               	movwf	??_Lcd_Cmd+1
  1967  0230  30EA               	movlw	234
  1968  0231  00AF               	movwf	??_Lcd_Cmd
  1969  0232                     u657:
  1970  0232  0BAF               	decfsz	??_Lcd_Cmd,f
  1971  0233  2A32               	goto	u657
  1972  0234  0BB0               	decfsz	??_Lcd_Cmd+1,f
  1973  0235  2A32               	goto	u657
  1974  0236  0000               	nop
  1975  0237                     l1216:
  1976                           
  1977                           ;LCD.c: 20:     RE2 = 1;
  1978  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1980  0239  1509               	bsf	9,2	;volatile
  1981                           
  1982                           ;LCD.c: 21:     if (PORTD == 0x80){
  1983  023A  3080               	movlw	128
  1984  023B  0608               	xorwf	8,w	;volatile
  1985  023C  1D03               	btfss	3,2
  1986  023D  2A3F               	goto	u421
  1987  023E  2A40               	goto	u420
  1988  023F                     u421:
  1989  023F  2A4F               	goto	l1224
  1990  0240                     u420:
  1991  0240                     l1218:
  1992                           
  1993                           ;LCD.c: 22:     RE2 = 0;
  1994  0240  1109               	bcf	9,2	;volatile
  1995  0241                     l1220:
  1996                           
  1997                           ;LCD.c: 23:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1998  0241  304E               	movlw	78
  1999  0242  1283               	bcf	3,5	;RP0=0, select bank0
  2000  0243  1303               	bcf	3,6	;RP1=0, select bank0
  2001  0244  00B0               	movwf	??_Lcd_Cmd+1
  2002  0245  30EA               	movlw	234
  2003  0246  00AF               	movwf	??_Lcd_Cmd
  2004  0247                     u667:
  2005  0247  0BAF               	decfsz	??_Lcd_Cmd,f
  2006  0248  2A47               	goto	u667
  2007  0249  0BB0               	decfsz	??_Lcd_Cmd+1,f
  2008  024A  2A47               	goto	u667
  2009  024B  0000               	nop
  2010  024C                     l1222:
  2011                           
  2012                           ;LCD.c: 24:     RE2 = 1;
  2013  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2014  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2015  024E  1509               	bsf	9,2	;volatile
  2016  024F                     l1224:	
  2017                           ;LCD.c: 25:     }
  2018                           
  2019                           
  2020                           ;LCD.c: 28:     PORTD = a;
  2021  024F  0831               	movf	Lcd_Cmd@a,w
  2022  0250  0088               	movwf	8	;volatile
  2023  0251                     l1226:
  2024                           
  2025                           ;LCD.c: 29:     RE0 = 0;
  2026  0251  1009               	bcf	9,0	;volatile
  2027  0252                     l1228:
  2028                           
  2029                           ;LCD.c: 30:     RE1 = 0;
  2030  0252  1089               	bcf	9,1	;volatile
  2031  0253                     l1230:
  2032                           
  2033                           ;LCD.c: 31:     RE2 = 1;
  2034  0253  1509               	bsf	9,2	;volatile
  2035                           
  2036                           ;LCD.c: 32:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2037  0254  304E               	movlw	78
  2038  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0257  00B0               	movwf	??_Lcd_Cmd+1
  2041  0258  30EA               	movlw	234
  2042  0259  00AF               	movwf	??_Lcd_Cmd
  2043  025A                     u677:
  2044  025A  0BAF               	decfsz	??_Lcd_Cmd,f
  2045  025B  2A5A               	goto	u677
  2046  025C  0BB0               	decfsz	??_Lcd_Cmd+1,f
  2047  025D  2A5A               	goto	u677
  2048  025E  0000               	nop
  2049  025F                     l1232:
  2050                           
  2051                           ;LCD.c: 33:     RE2 = 0;
  2052  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0261  1109               	bcf	9,2	;volatile
  2055  0262                     l144:
  2056  0262  0008               	return
  2057  0263                     __end_of_Lcd_Cmd:
  2058                           
  2059                           	psect	text11
  2060  029D                     __ptext11:	
  2061 ;; *************** function _ISR *****************
  2062 ;; Defined at:
  2063 ;;		line 71 in file "Master.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0
  2079 ;;      Temps:          0       5       0       0       0
  2080 ;;      Totals:         0       5       0       0       0
  2081 ;;Total ram usage:        5 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    3
  2084 ;; This function calls:
  2085 ;;		_CONTADOR
  2086 ;;		_itoa
  2087 ;; This function is called by:
  2088 ;;		Interrupt level 1
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function _ISR
  2094  029D                     _ISR:
  2095  029D                     i1l1374:
  2096                           
  2097                           ;Master.c: 72:     if (RCIF==1){
  2098  029D  1E8C               	btfss	12,5	;volatile
  2099  029E  2AA0               	goto	u50_21
  2100  029F  2AA1               	goto	u50_20
  2101  02A0                     u50_21:
  2102  02A0  2AC4               	goto	i1l118
  2103  02A1                     u50_20:
  2104  02A1                     i1l1376:
  2105                           
  2106                           ;Master.c: 73:         O = CONTADOR ((int)RCREG);
  2107  02A1  081A               	movf	26,w	;volatile
  2108  02A2  00AA               	movwf	??_ISR
  2109  02A3  01AB               	clrf	??_ISR+1
  2110  02A4  082A               	movf	??_ISR,w
  2111  02A5  00F0               	movwf	CONTADOR@n
  2112  02A6  082B               	movf	??_ISR+1,w
  2113  02A7  00F1               	movwf	CONTADOR@n+1
  2114  02A8  120A  118A  239A  120A  118A  	fcall	_CONTADOR
  2115  02AD  0871               	movf	?_CONTADOR+1,w
  2116  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2117  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2118  02B0  00BA               	movwf	_O+1
  2119  02B1  0870               	movf	?_CONTADOR,w
  2120  02B2  00B9               	movwf	_O
  2121  02B3                     i1l1378:
  2122                           
  2123                           ;Master.c: 74:         itoa(COMPARE,O,10);
  2124  02B3  083A               	movf	_O+1,w
  2125  02B4  00A5               	movwf	itoa@val+1
  2126  02B5  0839               	movf	_O,w
  2127  02B6  00A4               	movwf	itoa@val
  2128  02B7  300A               	movlw	10
  2129  02B8  00A6               	movwf	itoa@base
  2130  02B9  3000               	movlw	0
  2131  02BA  00A7               	movwf	itoa@base+1
  2132  02BB  3040               	movlw	(low (_COMPARE| 0))& (0+255)
  2133  02BC  120A  118A  22CD  120A  118A  	fcall	_itoa
  2134  02C1                     i1l1380:
  2135                           
  2136                           ;Master.c: 75:         RCIF=0;
  2137  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2138  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2139  02C3  128C               	bcf	12,5	;volatile
  2140  02C4                     i1l118:
  2141  02C4  082E               	movf	??_ISR+4,w
  2142  02C5  008A               	movwf	10
  2143  02C6  082D               	movf	??_ISR+3,w
  2144  02C7  0084               	movwf	4
  2145  02C8  0E2C               	swapf	??_ISR+2,w
  2146  02C9  0083               	movwf	3
  2147  02CA  0EFE               	swapf	btemp,f
  2148  02CB  0E7E               	swapf	btemp,w
  2149  02CC  0009               	retfie
  2150  02CD                     __end_of_ISR:
  2151                           
  2152                           	psect	intentry
  2153  0004                     __pintentry:	
  2154                           ;incstack = 0
  2155                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2156                           
  2157  0004                     interrupt_function:
  2158  007E                     saved_w	set	btemp
  2159  0004  00FE               	movwf	btemp
  2160  0005  0E03               	swapf	3,w
  2161  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2162  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2163  0008  00AC               	movwf	??_ISR+2
  2164  0009  0804               	movf	4,w
  2165  000A  00AD               	movwf	??_ISR+3
  2166  000B  080A               	movf	10,w
  2167  000C  00AE               	movwf	??_ISR+4
  2168  000D  120A  118A  2A9D   	ljmp	_ISR
  2169                           
  2170                           	psect	text12
  2171  02CD                     __ptext12:	
  2172 ;; *************** function _itoa *****************
  2173 ;; Defined at:
  2174 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  buf             1    wreg     PTR unsigned char 
  2177 ;;		 -> COMPARE(5), 
  2178 ;;  val             2    4[BANK0 ] int 
  2179 ;;  base            2    6[BANK0 ] int 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2182 ;;		 -> COMPARE(5), 
  2183 ;;  cp              1    0        PTR unsigned char 
  2184 ;;		 -> COMPARE(5), 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      PTR unsigned char 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       4       0       0       0
  2195 ;;      Locals:         0       2       0       0       0
  2196 ;;      Temps:          1       0       0       0       0
  2197 ;;      Totals:         1       6       0       0       0
  2198 ;;Total ram usage:        7 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    2
  2201 ;; This function calls:
  2202 ;;		_utoa
  2203 ;; This function is called by:
  2204 ;;		_ISR
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _itoa
  2210  02CD                     _itoa:
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2214                           ;itoa@buf stored from wreg
  2215  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2216  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2217  02CF  00A9               	movwf	itoa@buf
  2218  02D0                     i1l1316:
  2219  02D0                     i1l1318:
  2220  02D0  1FA5               	btfss	itoa@val+1,7
  2221  02D1  2AD3               	goto	u48_21
  2222  02D2  2AD4               	goto	u48_20
  2223  02D3                     u48_21:
  2224  02D3  2AE4               	goto	i1l1326
  2225  02D4                     u48_20:
  2226  02D4                     i1l1320:
  2227  02D4  302D               	movlw	45
  2228  02D5  00FD               	movwf	??_itoa
  2229  02D6  0829               	movf	itoa@buf,w
  2230  02D7  0084               	movwf	4
  2231  02D8  087D               	movf	??_itoa,w
  2232  02D9  1383               	bcf	3,7	;select IRP bank0
  2233  02DA  0080               	movwf	0
  2234  02DB                     i1l1322:
  2235  02DB  3001               	movlw	1
  2236  02DC  00FD               	movwf	??_itoa
  2237  02DD  087D               	movf	??_itoa,w
  2238  02DE  07A9               	addwf	itoa@buf,f
  2239  02DF                     i1l1324:
  2240  02DF  09A4               	comf	itoa@val,f
  2241  02E0  09A5               	comf	itoa@val+1,f
  2242  02E1  0AA4               	incf	itoa@val,f
  2243  02E2  1903               	skipnz
  2244  02E3  0AA5               	incf	itoa@val+1,f
  2245  02E4                     i1l1326:
  2246  02E4  0825               	movf	itoa@val+1,w
  2247  02E5  00F9               	movwf	utoa@val+1
  2248  02E6  0824               	movf	itoa@val,w
  2249  02E7  00F8               	movwf	utoa@val
  2250  02E8  0827               	movf	itoa@base+1,w
  2251  02E9  00FB               	movwf	utoa@base+1
  2252  02EA  0826               	movf	itoa@base,w
  2253  02EB  00FA               	movwf	utoa@base
  2254  02EC  0829               	movf	itoa@buf,w
  2255  02ED  120A  118A  2127  120A  118A  	fcall	_utoa
  2256  02F2                     i1l756:
  2257  02F2  0008               	return
  2258  02F3                     __end_of_itoa:
  2259                           
  2260                           	psect	text13
  2261  0127                     __ptext13:	
  2262 ;; *************** function _utoa *****************
  2263 ;; Defined at:
  2264 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  buf             1    wreg     PTR unsigned char 
  2267 ;;		 -> COMPARE(5), 
  2268 ;;  val             2    8[COMMON] unsigned int 
  2269 ;;  base            2   10[COMMON] int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2272 ;;		 -> COMPARE(5), 
  2273 ;;  v               2    0[BANK0 ] unsigned int 
  2274 ;;  c               1    2[BANK0 ] unsigned char 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  1    wreg      PTR unsigned char 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         4       0       0       0       0
  2285 ;;      Locals:         0       4       0       0       0
  2286 ;;      Temps:          1       0       0       0       0
  2287 ;;      Totals:         5       4       0       0       0
  2288 ;;Total ram usage:        9 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    1
  2291 ;; This function calls:
  2292 ;;		___lwdiv
  2293 ;;		___lwmod
  2294 ;; This function is called by:
  2295 ;;		_itoa
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           
  2300                           ;psect for function _utoa
  2301  0127                     _utoa:
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2305                           ;utoa@buf stored from wreg
  2306  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0128  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0129  00A3               	movwf	utoa@buf
  2309  012A                     i1l1264:
  2310  012A  0879               	movf	utoa@val+1,w
  2311  012B  00A1               	movwf	utoa@v+1
  2312  012C  0878               	movf	utoa@val,w
  2313  012D  00A0               	movwf	utoa@v
  2314  012E                     i1l1266:
  2315  012E  087B               	movf	utoa@base+1,w
  2316  012F  00F1               	movwf	___lwdiv@divisor+1
  2317  0130  087A               	movf	utoa@base,w
  2318  0131  00F0               	movwf	___lwdiv@divisor
  2319  0132  0821               	movf	utoa@v+1,w
  2320  0133  00F3               	movwf	___lwdiv@dividend+1
  2321  0134  0820               	movf	utoa@v,w
  2322  0135  00F2               	movwf	___lwdiv@dividend
  2323  0136  120A  118A  2199  120A  118A  	fcall	___lwdiv
  2324  013B  0871               	movf	?___lwdiv+1,w
  2325  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2326  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2327  013E  00A1               	movwf	utoa@v+1
  2328  013F  0870               	movf	?___lwdiv,w
  2329  0140  00A0               	movwf	utoa@v
  2330  0141                     i1l1268:
  2331  0141  3001               	movlw	1
  2332  0142  00FC               	movwf	??_utoa
  2333  0143  087C               	movf	??_utoa,w
  2334  0144  07A3               	addwf	utoa@buf,f
  2335  0145                     i1l1270:
  2336  0145  0820               	movf	utoa@v,w
  2337  0146  0421               	iorwf	utoa@v+1,w
  2338  0147  1D03               	btfss	3,2
  2339  0148  294A               	goto	u44_21
  2340  0149  294B               	goto	u44_20
  2341  014A                     u44_21:
  2342  014A  292E               	goto	i1l1266
  2343  014B                     u44_20:
  2344  014B                     i1l1272:
  2345  014B  0823               	movf	utoa@buf,w
  2346  014C  0084               	movwf	4
  2347  014D  1383               	bcf	3,7	;select IRP bank0
  2348  014E  0180               	clrf	0
  2349  014F                     i1l1274:
  2350  014F  3001               	movlw	1
  2351  0150  02A3               	subwf	utoa@buf,f
  2352  0151                     i1l1276:
  2353  0151  087B               	movf	utoa@base+1,w
  2354  0152  00F1               	movwf	___lwmod@divisor+1
  2355  0153  087A               	movf	utoa@base,w
  2356  0154  00F0               	movwf	___lwmod@divisor
  2357  0155  0879               	movf	utoa@val+1,w
  2358  0156  00F3               	movwf	___lwmod@dividend+1
  2359  0157  0878               	movf	utoa@val,w
  2360  0158  00F2               	movwf	___lwmod@dividend
  2361  0159  120A  118A  2263  120A  118A  	fcall	___lwmod
  2362  015E  0870               	movf	?___lwmod,w
  2363  015F  00FC               	movwf	??_utoa
  2364  0160  087C               	movf	??_utoa,w
  2365  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0163  00A2               	movwf	utoa@c
  2368  0164                     i1l1278:
  2369  0164  087B               	movf	utoa@base+1,w
  2370  0165  00F1               	movwf	___lwdiv@divisor+1
  2371  0166  087A               	movf	utoa@base,w
  2372  0167  00F0               	movwf	___lwdiv@divisor
  2373  0168  0879               	movf	utoa@val+1,w
  2374  0169  00F3               	movwf	___lwdiv@dividend+1
  2375  016A  0878               	movf	utoa@val,w
  2376  016B  00F2               	movwf	___lwdiv@dividend
  2377  016C  120A  118A  2199  120A  118A  	fcall	___lwdiv
  2378  0171  0871               	movf	?___lwdiv+1,w
  2379  0172  00F9               	movwf	utoa@val+1
  2380  0173  0870               	movf	?___lwdiv,w
  2381  0174  00F8               	movwf	utoa@val
  2382  0175                     i1l1280:
  2383  0175  300A               	movlw	10
  2384  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0178  0222               	subwf	utoa@c,w
  2387  0179  1C03               	skipc
  2388  017A  297C               	goto	u45_21
  2389  017B  297D               	goto	u45_20
  2390  017C                     u45_21:
  2391  017C  2981               	goto	i1l762
  2392  017D                     u45_20:
  2393  017D                     i1l1282:
  2394  017D  3007               	movlw	7
  2395  017E  00FC               	movwf	??_utoa
  2396  017F  087C               	movf	??_utoa,w
  2397  0180  07A2               	addwf	utoa@c,f
  2398  0181                     i1l762:
  2399  0181  3030               	movlw	48
  2400  0182  00FC               	movwf	??_utoa
  2401  0183  087C               	movf	??_utoa,w
  2402  0184  07A2               	addwf	utoa@c,f
  2403  0185                     i1l1284:
  2404  0185  0822               	movf	utoa@c,w
  2405  0186  00FC               	movwf	??_utoa
  2406  0187  0823               	movf	utoa@buf,w
  2407  0188  0084               	movwf	4
  2408  0189  087C               	movf	??_utoa,w
  2409  018A  1383               	bcf	3,7	;select IRP bank0
  2410  018B  0080               	movwf	0
  2411  018C                     i1l1286:
  2412  018C  3001               	movlw	1
  2413  018D  02A3               	subwf	utoa@buf,f
  2414  018E                     i1l1288:
  2415  018E  0878               	movf	utoa@val,w
  2416  018F  0479               	iorwf	utoa@val+1,w
  2417  0190  1D03               	btfss	3,2
  2418  0191  2993               	goto	u46_21
  2419  0192  2994               	goto	u46_20
  2420  0193                     u46_21:
  2421  0193  2951               	goto	i1l1276
  2422  0194                     u46_20:
  2423  0194                     i1l1290:
  2424                           
  2425                           ;	Return value of _utoa is never used
  2426  0194  3001               	movlw	1
  2427  0195  00FC               	movwf	??_utoa
  2428  0196  087C               	movf	??_utoa,w
  2429  0197  07A3               	addwf	utoa@buf,f
  2430  0198                     i1l764:
  2431  0198  0008               	return
  2432  0199                     __end_of_utoa:
  2433                           
  2434                           	psect	text14
  2435  0263                     __ptext14:	
  2436 ;; *************** function ___lwmod *****************
  2437 ;; Defined at:
  2438 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  divisor         2    0[COMMON] unsigned int 
  2441 ;;  dividend        2    2[COMMON] unsigned int 
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;  counter         1    5[COMMON] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  2    0[COMMON] unsigned int 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         4       0       0       0       0
  2454 ;;      Locals:         1       0       0       0       0
  2455 ;;      Temps:          1       0       0       0       0
  2456 ;;      Totals:         6       0       0       0       0
  2457 ;;Total ram usage:        6 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_utoa
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           
  2467                           ;psect for function ___lwmod
  2468  0263                     ___lwmod:
  2469  0263                     i1l1180:	
  2470                           ;incstack = 0
  2471                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2472                           
  2473  0263  0870               	movf	___lwmod@divisor,w
  2474  0264  0471               	iorwf	___lwmod@divisor+1,w
  2475  0265  1903               	btfsc	3,2
  2476  0266  2A68               	goto	u35_21
  2477  0267  2A69               	goto	u35_20
  2478  0268                     u35_21:
  2479  0268  2A98               	goto	i1l1198
  2480  0269                     u35_20:
  2481  0269                     i1l1182:
  2482  0269  01F5               	clrf	___lwmod@counter
  2483  026A  0AF5               	incf	___lwmod@counter,f
  2484  026B  2A77               	goto	i1l1188
  2485  026C                     i1l1184:
  2486  026C  3001               	movlw	1
  2487  026D                     u36_25:
  2488  026D  1003               	clrc
  2489  026E  0DF0               	rlf	___lwmod@divisor,f
  2490  026F  0DF1               	rlf	___lwmod@divisor+1,f
  2491  0270  3EFF               	addlw	-1
  2492  0271  1D03               	skipz
  2493  0272  2A6D               	goto	u36_25
  2494  0273                     i1l1186:
  2495  0273  3001               	movlw	1
  2496  0274  00F4               	movwf	??___lwmod
  2497  0275  0874               	movf	??___lwmod,w
  2498  0276  07F5               	addwf	___lwmod@counter,f
  2499  0277                     i1l1188:
  2500  0277  1FF1               	btfss	___lwmod@divisor+1,7
  2501  0278  2A7A               	goto	u37_21
  2502  0279  2A7B               	goto	u37_20
  2503  027A                     u37_21:
  2504  027A  2A6C               	goto	i1l1184
  2505  027B                     u37_20:
  2506  027B                     i1l1190:
  2507  027B  0871               	movf	___lwmod@divisor+1,w
  2508  027C  0273               	subwf	___lwmod@dividend+1,w
  2509  027D  1D03               	skipz
  2510  027E  2A81               	goto	u38_25
  2511  027F  0870               	movf	___lwmod@divisor,w
  2512  0280  0272               	subwf	___lwmod@dividend,w
  2513  0281                     u38_25:
  2514  0281  1C03               	skipc
  2515  0282  2A84               	goto	u38_21
  2516  0283  2A85               	goto	u38_20
  2517  0284                     u38_21:
  2518  0284  2A8B               	goto	i1l1194
  2519  0285                     u38_20:
  2520  0285                     i1l1192:
  2521  0285  0870               	movf	___lwmod@divisor,w
  2522  0286  02F2               	subwf	___lwmod@dividend,f
  2523  0287  0871               	movf	___lwmod@divisor+1,w
  2524  0288  1C03               	skipc
  2525  0289  03F3               	decf	___lwmod@dividend+1,f
  2526  028A  02F3               	subwf	___lwmod@dividend+1,f
  2527  028B                     i1l1194:
  2528  028B  3001               	movlw	1
  2529  028C                     u39_25:
  2530  028C  1003               	clrc
  2531  028D  0CF1               	rrf	___lwmod@divisor+1,f
  2532  028E  0CF0               	rrf	___lwmod@divisor,f
  2533  028F  3EFF               	addlw	-1
  2534  0290  1D03               	skipz
  2535  0291  2A8C               	goto	u39_25
  2536  0292                     i1l1196:
  2537  0292  3001               	movlw	1
  2538  0293  02F5               	subwf	___lwmod@counter,f
  2539  0294  1D03               	btfss	3,2
  2540  0295  2A97               	goto	u40_21
  2541  0296  2A98               	goto	u40_20
  2542  0297                     u40_21:
  2543  0297  2A7B               	goto	i1l1190
  2544  0298                     u40_20:
  2545  0298                     i1l1198:
  2546  0298  0873               	movf	___lwmod@dividend+1,w
  2547  0299  00F1               	movwf	?___lwmod+1
  2548  029A  0872               	movf	___lwmod@dividend,w
  2549  029B  00F0               	movwf	?___lwmod
  2550  029C                     i1l584:
  2551  029C  0008               	return
  2552  029D                     __end_of___lwmod:
  2553                           
  2554                           	psect	text15
  2555  0199                     __ptext15:	
  2556 ;; *************** function ___lwdiv *****************
  2557 ;; Defined at:
  2558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  divisor         2    0[COMMON] unsigned int 
  2561 ;;  dividend        2    2[COMMON] unsigned int 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  quotient        2    5[COMMON] unsigned int 
  2564 ;;  counter         1    7[COMMON] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  2    0[COMMON] unsigned int 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2574 ;;      Params:         4       0       0       0       0
  2575 ;;      Locals:         3       0       0       0       0
  2576 ;;      Temps:          1       0       0       0       0
  2577 ;;      Totals:         8       0       0       0       0
  2578 ;;Total ram usage:        8 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_utoa
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function ___lwdiv
  2589  0199                     ___lwdiv:
  2590  0199                     i1l1154:	
  2591                           ;incstack = 0
  2592                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2593                           
  2594  0199  01F5               	clrf	___lwdiv@quotient
  2595  019A  01F6               	clrf	___lwdiv@quotient+1
  2596  019B                     i1l1156:
  2597  019B  0870               	movf	___lwdiv@divisor,w
  2598  019C  0471               	iorwf	___lwdiv@divisor+1,w
  2599  019D  1903               	btfsc	3,2
  2600  019E  29A0               	goto	u28_21
  2601  019F  29A1               	goto	u28_20
  2602  01A0                     u28_21:
  2603  01A0  29D8               	goto	i1l1176
  2604  01A1                     u28_20:
  2605  01A1                     i1l1158:
  2606  01A1  01F7               	clrf	___lwdiv@counter
  2607  01A2  0AF7               	incf	___lwdiv@counter,f
  2608  01A3  29AF               	goto	i1l1164
  2609  01A4                     i1l1160:
  2610  01A4  3001               	movlw	1
  2611  01A5                     u29_25:
  2612  01A5  1003               	clrc
  2613  01A6  0DF0               	rlf	___lwdiv@divisor,f
  2614  01A7  0DF1               	rlf	___lwdiv@divisor+1,f
  2615  01A8  3EFF               	addlw	-1
  2616  01A9  1D03               	skipz
  2617  01AA  29A5               	goto	u29_25
  2618  01AB                     i1l1162:
  2619  01AB  3001               	movlw	1
  2620  01AC  00F4               	movwf	??___lwdiv
  2621  01AD  0874               	movf	??___lwdiv,w
  2622  01AE  07F7               	addwf	___lwdiv@counter,f
  2623  01AF                     i1l1164:
  2624  01AF  1FF1               	btfss	___lwdiv@divisor+1,7
  2625  01B0  29B2               	goto	u30_21
  2626  01B1  29B3               	goto	u30_20
  2627  01B2                     u30_21:
  2628  01B2  29A4               	goto	i1l1160
  2629  01B3                     u30_20:
  2630  01B3                     i1l1166:
  2631  01B3  3001               	movlw	1
  2632  01B4                     u31_25:
  2633  01B4  1003               	clrc
  2634  01B5  0DF5               	rlf	___lwdiv@quotient,f
  2635  01B6  0DF6               	rlf	___lwdiv@quotient+1,f
  2636  01B7  3EFF               	addlw	-1
  2637  01B8  1D03               	skipz
  2638  01B9  29B4               	goto	u31_25
  2639  01BA  0871               	movf	___lwdiv@divisor+1,w
  2640  01BB  0273               	subwf	___lwdiv@dividend+1,w
  2641  01BC  1D03               	skipz
  2642  01BD  29C0               	goto	u32_25
  2643  01BE  0870               	movf	___lwdiv@divisor,w
  2644  01BF  0272               	subwf	___lwdiv@dividend,w
  2645  01C0                     u32_25:
  2646  01C0  1C03               	skipc
  2647  01C1  29C3               	goto	u32_21
  2648  01C2  29C4               	goto	u32_20
  2649  01C3                     u32_21:
  2650  01C3  29CB               	goto	i1l1172
  2651  01C4                     u32_20:
  2652  01C4                     i1l1168:
  2653  01C4  0870               	movf	___lwdiv@divisor,w
  2654  01C5  02F2               	subwf	___lwdiv@dividend,f
  2655  01C6  0871               	movf	___lwdiv@divisor+1,w
  2656  01C7  1C03               	skipc
  2657  01C8  03F3               	decf	___lwdiv@dividend+1,f
  2658  01C9  02F3               	subwf	___lwdiv@dividend+1,f
  2659  01CA                     i1l1170:
  2660  01CA  1475               	bsf	___lwdiv@quotient,0
  2661  01CB                     i1l1172:
  2662  01CB  3001               	movlw	1
  2663  01CC                     u33_25:
  2664  01CC  1003               	clrc
  2665  01CD  0CF1               	rrf	___lwdiv@divisor+1,f
  2666  01CE  0CF0               	rrf	___lwdiv@divisor,f
  2667  01CF  3EFF               	addlw	-1
  2668  01D0  1D03               	skipz
  2669  01D1  29CC               	goto	u33_25
  2670  01D2                     i1l1174:
  2671  01D2  3001               	movlw	1
  2672  01D3  02F7               	subwf	___lwdiv@counter,f
  2673  01D4  1D03               	btfss	3,2
  2674  01D5  29D7               	goto	u34_21
  2675  01D6  29D8               	goto	u34_20
  2676  01D7                     u34_21:
  2677  01D7  29B3               	goto	i1l1166
  2678  01D8                     u34_20:
  2679  01D8                     i1l1176:
  2680  01D8  0876               	movf	___lwdiv@quotient+1,w
  2681  01D9  00F1               	movwf	?___lwdiv+1
  2682  01DA  0875               	movf	___lwdiv@quotient,w
  2683  01DB  00F0               	movwf	?___lwdiv
  2684  01DC                     i1l574:
  2685  01DC  0008               	return
  2686  01DD                     __end_of___lwdiv:
  2687                           
  2688                           	psect	text16
  2689  039A                     __ptext16:	
  2690 ;; *************** function _CONTADOR *****************
  2691 ;; Defined at:
  2692 ;;		line 8 in file "UART.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  n               2    0[COMMON] int 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  2    0[COMMON] int 
  2699 ;; Registers used:
  2700 ;;		wreg
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2706 ;;      Params:         2       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0
  2708 ;;      Temps:          0       0       0       0       0
  2709 ;;      Totals:         2       0       0       0       0
  2710 ;;Total ram usage:        2 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_ISR
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _CONTADOR
  2721  039A                     _CONTADOR:
  2722  039A                     i1l1312:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _CONTADOR: [wreg]
  2725                           
  2726                           
  2727                           ;UART.c: 9:     Destination = n;
  2728  039A  0871               	movf	CONTADOR@n+1,w
  2729  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2730  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2731  039D  00B8               	movwf	_Destination+1
  2732  039E  0870               	movf	CONTADOR@n,w
  2733  039F  00B7               	movwf	_Destination
  2734                           
  2735                           ;UART.c: 10:     return ((Destination)*1);
  2736  03A0  0838               	movf	_Destination+1,w
  2737  03A1  00F1               	movwf	?_CONTADOR+1
  2738  03A2  0837               	movf	_Destination,w
  2739  03A3  00F0               	movwf	?_CONTADOR
  2740  03A4                     i1l198:
  2741  03A4  0008               	return
  2742  03A5                     __end_of_CONTADOR:
  2743  007E                     btemp	set	126	;btemp
  2744  007E                     wtemp0	set	126
  2745                           
  2746                           	psect	config
  2747                           
  2748                           ;Config register CONFIG1 @ 0x2007
  2749                           ;	Oscillator Selection bits
  2750                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2751                           ;	Watchdog Timer Enable bit
  2752                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2753                           ;	Power-up Timer Enable bit
  2754                           ;	PWRTE = OFF, PWRT disabled
  2755                           ;	RE3/MCLR pin function select bit
  2756                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2757                           ;	Code Protection bit
  2758                           ;	CP = OFF, Program memory code protection is disabled
  2759                           ;	Data Code Protection bit
  2760                           ;	CPD = OFF, Data memory code protection is disabled
  2761                           ;	Brown Out Reset Selection bits
  2762                           ;	BOREN = OFF, BOR disabled
  2763                           ;	Internal External Switchover bit
  2764                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2765                           ;	Fail-Safe Clock Monitor Enabled bit
  2766                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2767                           ;	Low Voltage Programming Enable bit
  2768                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2769                           ;	In-Circuit Debugger Mode bit
  2770                           ;	DEBUG = 0x1, unprogrammed default
  2771  2007                     	org	8199
  2772  2007  20D1               	dw	8401
  2773                           
  2774                           ;Config register CONFIG2 @ 0x2008
  2775                           ;	Brown-out Reset Selection bit
  2776                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2777                           ;	Flash Program Memory Self Write Enable bits
  2778                           ;	WRT = OFF, Write protection off
  2779  2008                     	org	8200
  2780  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    _ISR->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     647
                                             20 BANK0      3     3      0
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Write_Char
                   _Lcd_Write_String
                        _SERIAL_Init
                           _SPI_Init
                           _SPI_Read
                          _SPI_Write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      22
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     360
                                             15 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SERIAL_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     2     2      0     199
                                             18 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0    1710
                                             10 BANK0      5     5      0
                           _CONTADOR
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CONTADOR                                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _SERIAL_Init
   _SPI_Init
   _SPI_Read
     _spiReceiveWait
   _SPI_Write
   _setup

 _ISR (ROOT)
   _CONTADOR
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 01:47:09 2021

                        _O 0039                          pc 0002                _SSPSTATbits 0094  
                       l22 03BA                         l25 03AE                         l18 032F  
                       l19 0334                         l28 03B4                         l36 03AD  
                       fsr 0004                        l201 0399                        l144 0262  
                      l161 021F                        l129 036D                        l156 0353  
                      l167 0315                        _RE0 0048                        _RE1 0049  
                      _RE2 004A                        u410 03B4                        u411 03B3  
                      u420 0240                        u421 023F                        u430 01FD  
                      u431 01FC                        _ISR 029D                        u470 0323  
                      u471 0322                        u607 00FF                        u617 010E  
                      u537 0057                        u490 0315                        u627 01EF  
                      u491 0314                        u547 0071                        u637 0204  
                      u557 0080                        u647 0217                        u567 009E  
                      u657 0232                        u577 00B8                        u667 0247  
                      u587 00C7                        u677 025A                        u597 00E5  
                      fsr0 0004                        indf 0000                       ?_ISR 0070  
                     l1210 022A                       l1202 03AE                       l1220 0241  
                     l1212 022B                       l1204 0223                       l1300 0329  
                     l1230 0253                       l1222 024C                       l1214 022C  
                     l1206 0225                       l1302 032E                       l1232 025F  
                     l1224 024F                       l1216 0237                       l1208 0229  
                     l1240 01E7                       l1304 03B8                       l1400 005B  
                     l1226 0251                       l1218 0240                       l1250 01FE  
                     l1242 01E8                       l1234 01E0                       l1306 03A5  
                     l1330 0354                       l1410 0087                       l1402 0061  
                     l1228 0252                       l1260 0210                       l1252 0209  
                     l1244 01E9                       l1236 01E2                       l1308 03AA  
                     l1340 036C                       l1332 035D                       l1420 00A8  
                     l1412 008F                       l1404 006B                       l1342 0335  
                     l1262 021C                       l1254 020C                       l1246 01F4  
                     l1238 01E6                       l1350 038D                       l1334 035E  
                     l1430 00D6                       l1422 00B2                       l1414 0095  
                     l1406 0075                       l1256 020E                       l1248 01FD  
                     l1360 0394                       l1352 038E                       l1344 0387  
                     l1336 0368                       l1440 00F9                       l1432 00DC  
                     l1424 00BC                       l1416 0098                       l1408 0078  
                     l1258 020F                       l1370 0303                       l1362 0397  
                     l1354 038F                       l1346 038B                       l1338 036B  
                     l1442 0103                       l1434 00DF                       l1426 00BF  
                     l1418 00A2                       l1372 0309                       l1364 0398  
                     l1356 0392                       l1348 038C                       l1444 0106  
                     l1436 00E9                       l1428 00CE                       l1366 02F6  
                     l1358 0393                       l1294 0319                       l1446 0115  
                     l1438 00EF                       l1390 0041                       l1382 0027  
                     l1368 02F7                       l1296 0323                       l1448 011D  
                     l1392 0047                       l1384 002C                       l1298 0327  
                     l1394 004D                       l1386 0031                       l1396 0050  
                     l1388 003C                       l1398 0051                       STR_1 0374  
                     STR_2 0385                       STR_3 0385                       STR_4 0385  
                     _RCIF 0065                       _TRMT 04C1          ?_Lcd_Write_String 0070  
                     _main 0027                       _itoa 02CD                       btemp 007E  
                     _utoa 0127         SPI_Init@sClockIdle 0030                       start 0010  
       ??_Lcd_Write_String 0032            __end_of_Lcd_Cmd 0263           __end_of_CONTADOR 03A5  
                    ??_ISR 002A        SPI_Init@sDataSample 002F                      ?_main 0070  
                    ?_itoa 0024                      _ANSEL 0188                      ?_utoa 0078  
          __end_of___lwdiv 01DD                      i1l118 02C4            __end_of___lwmod 029D  
                    i1l198 03A4                      i1l574 01DC                      i1l584 029C  
                    i1l762 0181                      i1l764 0198                      i1l756 02F2  
                    _RCREG 001A                      u30_20 01B3                      u30_21 01B2  
                    u31_25 01B4                      u32_20 01C4                      u40_20 0298  
                    u32_21 01C3                      u40_21 0297                      u32_25 01C0  
                    u33_25 01CC                      u34_20 01D8                      u50_20 02A1  
                    u34_21 01D7                      u50_21 02A0                      _SPBRG 0099  
                    u35_20 0269                      u35_21 0268                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u28_20 01A1                      u44_20 014B  
                    u28_21 01A0                      u44_21 014A                      u36_25 026D  
                    u37_20 027B                      u45_20 017D                      u37_21 027A  
                    u45_21 017C                      u29_25 01A5                      u38_20 0285  
                    u46_20 0194                      u38_21 0284                      u46_21 0193  
                    u38_25 0281                      u39_25 028C                      u48_20 02D4  
                    u48_21 02D3                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _Ready 003F      SPI_Init@sTransmitEdge 0031  
                    _setup 0354           __end_of_SPI_Init 0335           __end_of_SPI_Read 03AE  
                    pclath 000A                      utoa@c 0022                      utoa@v 0020  
                    status 0003                      wtemp0 007E         __size_of_SPI_Write 0006  
         __end_of_Lcd_Init 0354               ?_SERIAL_Init 0070            __initialization 0013  
             __end_of_main 0127               __end_of_itoa 02F3               __end_of_utoa 0199  
                   ??_main 0034                     ??_itoa 007D                     ??_utoa 007C  
                   ?_setup 0070                     _ANSELH 0189                _Destination 0037  
                   i1l1312 039A                     i1l1160 01A4                     i1l1320 02D4  
                   i1l1170 01CA                     i1l1162 01AB                     i1l1154 0199  
                   i1l1322 02DB                     i1l1172 01CB                     i1l1164 01AF  
                   i1l1156 019B                     i1l1180 0263                     i1l1324 02DF  
                   i1l1316 02D0                     i1l1174 01D2                     i1l1166 01B3  
                   i1l1158 01A1                     i1l1190 027B                     i1l1182 0269  
                   i1l1270 0145                     i1l1326 02E4                     i1l1318 02D0  
                   i1l1168 01C4                     i1l1176 01D8                     i1l1192 0285  
                   i1l1184 026C                     i1l1280 0175                     i1l1272 014B  
                   i1l1264 012A                     i1l1194 028B                     i1l1186 0273  
                   i1l1290 0194                     i1l1282 017D                     i1l1274 014F  
                   i1l1266 012E                     i1l1196 0292                     i1l1188 0277  
                   i1l1284 0185                     i1l1276 0151                     i1l1268 0141  
                   i1l1380 02C1                     i1l1198 0298                     i1l1286 018C  
                   i1l1278 0164                     i1l1374 029D                     i1l1288 018E  
                   i1l1376 02A1                     i1l1378 02B3                  ??_Lcd_Cmd 002F  
  __size_of_Lcd_Write_Char 0043                     _TRISC3 043B                     _TRISC4 043C  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
                   _Slave1 003E                     _Slave2 003D                     _Slave3 003C  
                ??___lwdiv 0074                  ??___lwmod 0074          __end_of_SPI_Write 03BB  
                CONTADOR@n 0070                     saved_w 007E                  ?_CONTADOR 0070  
  __end_of__initialization 0023              SPI_Init@sType 0032             __pcstackCOMMON 0070  
            __end_of_setup 036E                  ?_SPI_Init 002F                  ?_SPI_Read 0070  
                ?_Lcd_Init 0070                    ??_setup 002F                 ??_CONTADOR 0072  
               __pbssBANK0 0037                 __pmaintext 0027       __size_of_SERIAL_Init 0013  
               __pintentry 0004    __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0023  
               ??_SPI_Init 0032                 ??_SPI_Read 002F                    _COMPARE 0040  
               ??_Lcd_Init 0032                    _SSPSTAT 0094                 __stringtab 036E  
           _Lcd_Write_Char 01DD                    _Lcd_Cmd 0220                    ___lwdiv 0199  
                  ___lwmod 0263                    __ptext1 0354                    __ptext2 03B5  
                  __ptext3 03A5                    __ptext4 03AE                    __ptext5 0316  
                  __ptext6 0387                    __ptext7 02F3                    __ptext8 01DD  
                  __ptext9 0335               __size_of_ISR 0030     __end_of_Lcd_Write_Char 0220  
     end_of_initialization 0023                    itoa@buf 0029                    itoa@val 0024  
                _RCSTAbits 0018                    utoa@buf 0023                    utoa@val 0078  
                _PORTBbits 0006                  _TRISCbits 0087                  _SPI_Write 03B5  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0033          __size_of_CONTADOR 000B  
                _TXSTAbits 0098             _spiReceiveWait 03AE           _Lcd_Write_String 02F3  
        __size_of_SPI_Init 001F          __size_of_SPI_Read 0009        start_initialization 0013  
              __end_of_ISR 02CD                 ?_SPI_Write 0070          __size_of_Lcd_Init 001F  
   __end_of_spiReceiveWait 03B5            Lcd_Write_Char@a 0031                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070              ??_SERIAL_Init 002F  
         ___lwdiv@dividend 0072            ?_spiReceiveWait 0070                   ?___lwdiv 0070  
                 ?___lwmod 0070                  __pstrings 036E                ??_SPI_Write 002F  
         ___lwdiv@quotient 0075                   _CONTADOR 039A             __size_of_setup 001A  
        interrupt_function 0004                   _PIE1bits 008C                   Lcd_Cmd@a 0031  
      __end_of_SERIAL_Init 039A                   _SPI_Init 0316                   _SPI_Read 03A5  
              __stringbase 0373           ??_Lcd_Write_Char 002F                   _Lcd_Init 0335  
                 _Contador 003B   __end_of_Lcd_Write_String 0316           __size_of_Lcd_Cmd 0043  
               SPI_Write@a 002F           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0374            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0220                   __ptext11 029D                   __ptext12 02CD  
                 __ptext13 0127                   __ptext14 0263                   __ptext15 0199  
                 __ptext16 039A              __size_of_main 0100              __size_of_itoa 0026  
            __size_of_utoa 0072                _SERIAL_Init 0387                 _INTCONbits 000B  
                 itoa@base 0026                   intlevel1 0000           ___lwmod@dividend 0072  
         ??_spiReceiveWait 002F                  stringcode 036E                   utoa@base 007A  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 036E  
                 stringtab 036E  
