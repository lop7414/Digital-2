

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 00:48:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0019                     _TXREG	set	25
   455  0018                     _RCSTAbits	set	24
   456  000B                     _INTCONbits	set	11
   457  0009                     _PORTE	set	9
   458  0008                     _PORTD	set	8
   459  0007                     _PORTC	set	7
   460  0005                     _PORTA	set	5
   461  0006                     _PORTBbits	set	6
   462  0006                     _PORTB	set	6
   463  001A                     _RCREG	set	26
   464  0013                     _SSPBUF	set	19
   465  0014                     _SSPCON	set	20
   466  004A                     _RE2	set	74
   467  0049                     _RE1	set	73
   468  0048                     _RE0	set	72
   469  0065                     _RCIF	set	101
   470  0098                     _TXSTAbits	set	152
   471  0099                     _SPBRG	set	153
   472  008C                     _PIE1bits	set	140
   473  0089                     _TRISE	set	137
   474  0088                     _TRISD	set	136
   475  0087                     _TRISC	set	135
   476  0086                     _TRISB	set	134
   477  0085                     _TRISA	set	133
   478  0094                     _SSPSTATbits	set	148
   479  0094                     _SSPSTAT	set	148
   480  04C1                     _TRMT	set	1217
   481  043B                     _TRISC3	set	1083
   482  043C                     _TRISC4	set	1084
   483  043D                     _TRISC5	set	1085
   484  0189                     _ANSELH	set	393
   485  0188                     _ANSEL	set	392
   486                           
   487                           	psect	strings
   488  036F                     __pstrings:
   489  036F                     stringtab:
   490  036F                     __stringtab:
   491  036F                     stringcode:	
   492                           ;	String table - string pointers are 1 byte each
   493                           
   494  036F                     stringdir:
   495  036F  3003               	movlw	high stringdir
   496  0370  008A               	movwf	10
   497  0371  0804               	movf	4,w
   498  0372  0A84               	incf	4,f
   499  0373  0782               	addwf	2,f
   500  0374                     __stringbase:
   501  0374  3400               	retlw	0
   502  0375                     __end_of__stringtab:
   503  0375                     STR_1:
   504  0375  3453               	retlw	83	;'S'
   505  0376  3431               	retlw	49	;'1'
   506  0377  3420               	retlw	32	;' '
   507  0378  3420               	retlw	32	;' '
   508  0379  3420               	retlw	32	;' '
   509  037A  3420               	retlw	32	;' '
   510  037B  3453               	retlw	83	;'S'
   511  037C  3432               	retlw	50	;'2'
   512  037D  3420               	retlw	32	;' '
   513  037E  3420               	retlw	32	;' '
   514  037F  3420               	retlw	32	;' '
   515  0380  3420               	retlw	32	;' '
   516  0381  3453               	retlw	83	;'S'
   517  0382  3433               	retlw	51	;'3'
   518  0383  3420               	retlw	32	;' '
   519  0384  3420               	retlw	32	;' '
   520  0385  3400               	retlw	0
   521  0386                     STR_2:
   522  0386  3441               	retlw	65	;'A'
   523  0387  3400               	retlw	0
   524  0386                     
   525                           	psect	cinit
   526  0013                     start_initialization:	
   527                           ; #config settings
   528                           
   529  0013                     __initialization:
   530                           
   531                           ; Clear objects allocated to BANK0
   532  0013  1283               	bcf	3,5	;RP0=0, select bank0
   533  0014  1303               	bcf	3,6	;RP1=0, select bank0
   534  0015  01B7               	clrf	__pbssBANK0& (0+127)
   535  0016  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   536  0017  01B9               	clrf	(__pbssBANK0+2)& (0+127)
   537  0018  01BA               	clrf	(__pbssBANK0+3)& (0+127)
   538  0019  01BB               	clrf	(__pbssBANK0+4)& (0+127)
   539  001A  01BC               	clrf	(__pbssBANK0+5)& (0+127)
   540  001B  01BD               	clrf	(__pbssBANK0+6)& (0+127)
   541  001C  01BE               	clrf	(__pbssBANK0+7)& (0+127)
   542  001D  01BF               	clrf	(__pbssBANK0+8)& (0+127)
   543  001E  01C0               	clrf	(__pbssBANK0+9)& (0+127)
   544  001F  01C1               	clrf	(__pbssBANK0+10)& (0+127)
   545  0020  01C2               	clrf	(__pbssBANK0+11)& (0+127)
   546  0021  01C3               	clrf	(__pbssBANK0+12)& (0+127)
   547  0022  01C4               	clrf	(__pbssBANK0+13)& (0+127)
   548  0023                     end_of_initialization:	
   549                           ;End of C runtime variable initialization code
   550                           
   551  0023                     __end_of__initialization:
   552  0023  0183               	clrf	3
   553  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   554                           
   555                           	psect	bssBANK0
   556  0037                     __pbssBANK0:
   557  0037                     _Destination:
   558  0037                     	ds	2
   559  0039                     _O:
   560  0039                     	ds	2
   561  003B                     _Contador:
   562  003B                     	ds	1
   563  003C                     _Slave3:
   564  003C                     	ds	1
   565  003D                     _Slave2:
   566  003D                     	ds	1
   567  003E                     _Slave1:
   568  003E                     	ds	1
   569  003F                     _Ready:
   570  003F                     	ds	1
   571  0040                     _COMPARE:
   572  0040                     	ds	5
   573                           
   574                           	psect	cstackCOMMON
   575  0070                     __pcstackCOMMON:
   576  0070                     ?_setup:
   577  0070                     ?_Lcd_Init:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_SERIAL_Init:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_Lcd_Write_String:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_Lcd_Cmd:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_Lcd_Write_Char:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_SPI_Write:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_spiReceiveWait:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_SPI_Read:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_ISR:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_main:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_CONTADOR:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?___lwdiv:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ?___lwmod:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0070                     CONTADOR@n:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     ___lwdiv@divisor:	
   620                           ; 2 bytes @ 0x0
   621                           
   622  0070                     ___lwmod@divisor:	
   623                           ; 2 bytes @ 0x0
   624                           
   625                           
   626                           ; 2 bytes @ 0x0
   627  0070                     	ds	2
   628  0072                     ??_CONTADOR:
   629  0072                     ___lwdiv@dividend:	
   630                           ; 1 bytes @ 0x2
   631                           
   632  0072                     ___lwmod@dividend:	
   633                           ; 2 bytes @ 0x2
   634                           
   635                           
   636                           ; 2 bytes @ 0x2
   637  0072                     	ds	2
   638  0074                     ??___lwdiv:
   639  0074                     ??___lwmod:	
   640                           ; 1 bytes @ 0x4
   641                           
   642                           
   643                           ; 1 bytes @ 0x4
   644  0074                     	ds	1
   645  0075                     ___lwmod@counter:
   646  0075                     ___lwdiv@quotient:	
   647                           ; 1 bytes @ 0x5
   648                           
   649                           
   650                           ; 2 bytes @ 0x5
   651  0075                     	ds	2
   652  0077                     ___lwdiv@counter:
   653                           
   654                           ; 1 bytes @ 0x7
   655  0077                     	ds	1
   656  0078                     ?_utoa:
   657  0078                     utoa@val:	
   658                           ; 1 bytes @ 0x8
   659                           
   660                           
   661                           ; 2 bytes @ 0x8
   662  0078                     	ds	2
   663  007A                     utoa@base:
   664                           
   665                           ; 2 bytes @ 0xA
   666  007A                     	ds	2
   667  007C                     ??_utoa:
   668                           
   669                           ; 1 bytes @ 0xC
   670  007C                     	ds	1
   671  007D                     ??_itoa:
   672                           
   673                           ; 1 bytes @ 0xD
   674  007D                     	ds	1
   675                           
   676                           	psect	cstackBANK0
   677  0020                     __pcstackBANK0:
   678  0020                     utoa@v:
   679                           
   680                           ; 2 bytes @ 0x0
   681  0020                     	ds	2
   682  0022                     utoa@c:
   683                           
   684                           ; 1 bytes @ 0x2
   685  0022                     	ds	1
   686  0023                     utoa@buf:
   687                           
   688                           ; 1 bytes @ 0x3
   689  0023                     	ds	1
   690  0024                     ?_itoa:
   691  0024                     itoa@val:	
   692                           ; 1 bytes @ 0x4
   693                           
   694                           
   695                           ; 2 bytes @ 0x4
   696  0024                     	ds	2
   697  0026                     itoa@base:
   698                           
   699                           ; 2 bytes @ 0x6
   700  0026                     	ds	3
   701  0029                     itoa@buf:
   702                           
   703                           ; 1 bytes @ 0x9
   704  0029                     	ds	1
   705  002A                     ??_ISR:
   706                           
   707                           ; 1 bytes @ 0xA
   708  002A                     	ds	5
   709  002F                     ??_setup:
   710  002F                     ??_SERIAL_Init:	
   711                           ; 1 bytes @ 0xF
   712                           
   713  002F                     ??_Lcd_Cmd:	
   714                           ; 1 bytes @ 0xF
   715                           
   716  002F                     ??_Lcd_Write_Char:	
   717                           ; 1 bytes @ 0xF
   718                           
   719  002F                     ?_SPI_Init:	
   720                           ; 1 bytes @ 0xF
   721                           
   722  002F                     ??_SPI_Write:	
   723                           ; 1 bytes @ 0xF
   724                           
   725  002F                     ??_spiReceiveWait:	
   726                           ; 1 bytes @ 0xF
   727                           
   728  002F                     ??_SPI_Read:	
   729                           ; 1 bytes @ 0xF
   730                           
   731  002F                     SPI_Init@sDataSample:	
   732                           ; 1 bytes @ 0xF
   733                           
   734  002F                     SPI_Write@a:	
   735                           ; 1 bytes @ 0xF
   736                           
   737                           
   738                           ; 1 bytes @ 0xF
   739  002F                     	ds	1
   740  0030                     SPI_Init@sClockIdle:
   741                           
   742                           ; 1 bytes @ 0x10
   743  0030                     	ds	1
   744  0031                     SPI_Init@sTransmitEdge:
   745  0031                     Lcd_Cmd@a:	
   746                           ; 1 bytes @ 0x11
   747                           
   748  0031                     Lcd_Write_Char@a:	
   749                           ; 1 bytes @ 0x11
   750                           
   751                           
   752                           ; 1 bytes @ 0x11
   753  0031                     	ds	1
   754  0032                     ??_Lcd_Init:
   755  0032                     ??_Lcd_Write_String:	
   756                           ; 1 bytes @ 0x12
   757                           
   758  0032                     ??_SPI_Init:	
   759                           ; 1 bytes @ 0x12
   760                           
   761  0032                     SPI_Init@sType:	
   762                           ; 1 bytes @ 0x12
   763                           
   764                           
   765                           ; 1 bytes @ 0x12
   766  0032                     	ds	1
   767  0033                     Lcd_Write_String@a:
   768                           
   769                           ; 1 bytes @ 0x13
   770  0033                     	ds	1
   771  0034                     ??_main:
   772                           
   773                           ; 1 bytes @ 0x14
   774  0034                     	ds	3
   775                           
   776                           	psect	maintext
   777  0027                     __pmaintext:	
   778 ;;
   779 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   780 ;;
   781 ;; *************** function _main *****************
   782 ;; Defined at:
   783 ;;		line 78 in file "Master.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : B00/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0
   799 ;;      Temps:          0       3       0       0       0
   800 ;;      Totals:         0       3       0       0       0
   801 ;;Total ram usage:        3 bytes
   802 ;; Hardware stack levels required when called:    6
   803 ;; This function calls:
   804 ;;		_Lcd_Cmd
   805 ;;		_Lcd_Init
   806 ;;		_Lcd_Write_Char
   807 ;;		_Lcd_Write_String
   808 ;;		_SERIAL_Init
   809 ;;		_SPI_Init
   810 ;;		_SPI_Read
   811 ;;		_SPI_Write
   812 ;;		_setup
   813 ;; This function is called by:
   814 ;;		Startup code after reset
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _main
   820  0027                     _main:
   821  0027                     l1406:	
   822                           ;incstack = 0
   823                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   824                           
   825                           
   826                           ;Master.c: 80:     setup();
   827  0027  120A  118A  2354  120A  118A  	fcall	_setup
   828  002C                     l121:	
   829                           ;Master.c: 86:     while (1) {
   830                           
   831                           
   832                           ;Master.c: 87:         Lcd_Init();
   833  002C  120A  118A  2335  120A  118A  	fcall	_Lcd_Init
   834                           
   835                           ;Master.c: 88:         SPI_Init(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
   836  0031  1283               	bcf	3,5	;RP0=0, select bank0
   837  0032  1303               	bcf	3,6	;RP1=0, select bank0
   838  0033  01AF               	clrf	SPI_Init@sDataSample
   839  0034  01B0               	clrf	SPI_Init@sClockIdle
   840  0035  01B1               	clrf	SPI_Init@sTransmitEdge
   841  0036  3020               	movlw	32
   842  0037  120A  118A  2316  120A  118A  	fcall	_SPI_Init
   843                           
   844                           ;Master.c: 89:         SERIAL_Init();
   845  003C  120A  118A  2388  120A  118A  	fcall	_SERIAL_Init
   846  0041                     l1408:
   847                           
   848                           ;Master.c: 91:         Lcd_Write_String("S1    S2    S3  ");
   849  0041  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   850  0042  120A  118A  22F3  120A  118A  	fcall	_Lcd_Write_String
   851  0047                     l1410:
   852                           
   853                           ;Master.c: 92:         Lcd_Cmd(0xC0);
   854  0047  30C0               	movlw	192
   855  0048  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
   856  004D                     l1412:
   857                           
   858                           ;Master.c: 94:         PORTB = 0;
   859  004D  1283               	bcf	3,5	;RP0=0, select bank0
   860  004E  1303               	bcf	3,6	;RP1=0, select bank0
   861  004F  0186               	clrf	6	;volatile
   862  0050                     l1414:
   863                           
   864                           ;Master.c: 96:         PORTBbits.RB0 = 0;
   865  0050  1006               	bcf	6,0	;volatile
   866  0051                     l1416:
   867                           
   868                           ;Master.c: 97:         _delay((unsigned long)((1)*(8000000/4000.0)));
   869  0051  3003               	movlw	3
   870  0052  1283               	bcf	3,5	;RP0=0, select bank0
   871  0053  1303               	bcf	3,6	;RP1=0, select bank0
   872  0054  00B5               	movwf	??_main+1
   873  0055  3097               	movlw	151
   874  0056  00B4               	movwf	??_main
   875  0057                     u537:
   876  0057  0BB4               	decfsz	??_main,f
   877  0058  2857               	goto	u537
   878  0059  0BB5               	decfsz	??_main+1,f
   879  005A  2857               	goto	u537
   880  005B                     l1418:
   881                           
   882                           ;Master.c: 99:         SPI_Write(1);
   883  005B  3001               	movlw	1
   884  005C  120A  118A  23B6  120A  118A  	fcall	_SPI_Write
   885  0061                     l1420:
   886                           
   887                           ;Master.c: 100:         Slave1 = SPI_Read();
   888  0061  120A  118A  23A6  120A  118A  	fcall	_SPI_Read
   889  0066  1283               	bcf	3,5	;RP0=0, select bank0
   890  0067  1303               	bcf	3,6	;RP1=0, select bank0
   891  0068  00B4               	movwf	??_main
   892  0069  0834               	movf	??_main,w
   893  006A  00BE               	movwf	_Slave1
   894  006B                     l1422:
   895                           
   896                           ;Master.c: 102:         _delay((unsigned long)((1)*(8000000/4000.0)));
   897  006B  3003               	movlw	3
   898  006C  1283               	bcf	3,5	;RP0=0, select bank0
   899  006D  1303               	bcf	3,6	;RP1=0, select bank0
   900  006E  00B5               	movwf	??_main+1
   901  006F  3097               	movlw	151
   902  0070  00B4               	movwf	??_main
   903  0071                     u547:
   904  0071  0BB4               	decfsz	??_main,f
   905  0072  2871               	goto	u547
   906  0073  0BB5               	decfsz	??_main+1,f
   907  0074  2871               	goto	u547
   908  0075                     l1424:
   909                           
   910                           ;Master.c: 103:         PORTBbits.RB0 = 1;
   911  0075  1283               	bcf	3,5	;RP0=0, select bank0
   912  0076  1303               	bcf	3,6	;RP1=0, select bank0
   913  0077  1406               	bsf	6,0	;volatile
   914  0078                     l1426:
   915                           
   916                           ;Master.c: 104:         _delay((unsigned long)((100)*(8000000/4000.0)));
   917  0078  3002               	movlw	2
   918  0079  1283               	bcf	3,5	;RP0=0, select bank0
   919  007A  1303               	bcf	3,6	;RP1=0, select bank0
   920  007B  00B6               	movwf	??_main+2
   921  007C  3004               	movlw	4
   922  007D  00B5               	movwf	??_main+1
   923  007E  30B9               	movlw	185
   924  007F  00B4               	movwf	??_main
   925  0080                     u557:
   926  0080  0BB4               	decfsz	??_main,f
   927  0081  2880               	goto	u557
   928  0082  0BB5               	decfsz	??_main+1,f
   929  0083  2880               	goto	u557
   930  0084  0BB6               	decfsz	??_main+2,f
   931  0085  2880               	goto	u557
   932  0086  2887               	nop2
   933  0087                     l1428:
   934                           
   935                           ;Master.c: 106:         Lcd_Write_Char(Slave1);
   936  0087  1283               	bcf	3,5	;RP0=0, select bank0
   937  0088  1303               	bcf	3,6	;RP1=0, select bank0
   938  0089  083E               	movf	_Slave1,w
   939  008A  120A  118A  21DD  120A  118A  	fcall	_Lcd_Write_Char
   940  008F                     l1430:
   941                           
   942                           ;Master.c: 108:         Lcd_Write_String("A");
   943  008F  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   944  0090  120A  118A  22F3  120A  118A  	fcall	_Lcd_Write_String
   945  0095                     l1432:
   946                           
   947                           ;Master.c: 111:         PORTBbits.RB1 = 0;
   948  0095  1283               	bcf	3,5	;RP0=0, select bank0
   949  0096  1303               	bcf	3,6	;RP1=0, select bank0
   950  0097  1086               	bcf	6,1	;volatile
   951  0098                     l1434:
   952                           
   953                           ;Master.c: 112:         _delay((unsigned long)((1)*(8000000/4000.0)));
   954  0098  3003               	movlw	3
   955  0099  1283               	bcf	3,5	;RP0=0, select bank0
   956  009A  1303               	bcf	3,6	;RP1=0, select bank0
   957  009B  00B5               	movwf	??_main+1
   958  009C  3097               	movlw	151
   959  009D  00B4               	movwf	??_main
   960  009E                     u567:
   961  009E  0BB4               	decfsz	??_main,f
   962  009F  289E               	goto	u567
   963  00A0  0BB5               	decfsz	??_main+1,f
   964  00A1  289E               	goto	u567
   965  00A2                     l1436:
   966                           
   967                           ;Master.c: 114:         SPI_Write(1);
   968  00A2  3001               	movlw	1
   969  00A3  120A  118A  23B6  120A  118A  	fcall	_SPI_Write
   970  00A8                     l1438:
   971                           
   972                           ;Master.c: 115:         Slave2 = SPI_Read();
   973  00A8  120A  118A  23A6  120A  118A  	fcall	_SPI_Read
   974  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   975  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   976  00AF  00B4               	movwf	??_main
   977  00B0  0834               	movf	??_main,w
   978  00B1  00BD               	movwf	_Slave2
   979  00B2                     l1440:
   980                           
   981                           ;Master.c: 117:         _delay((unsigned long)((1)*(8000000/4000.0)));
   982  00B2  3003               	movlw	3
   983  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   984  00B4  1303               	bcf	3,6	;RP1=0, select bank0
   985  00B5  00B5               	movwf	??_main+1
   986  00B6  3097               	movlw	151
   987  00B7  00B4               	movwf	??_main
   988  00B8                     u577:
   989  00B8  0BB4               	decfsz	??_main,f
   990  00B9  28B8               	goto	u577
   991  00BA  0BB5               	decfsz	??_main+1,f
   992  00BB  28B8               	goto	u577
   993  00BC                     l1442:
   994                           
   995                           ;Master.c: 118:         PORTBbits.RB1 = 1;
   996  00BC  1283               	bcf	3,5	;RP0=0, select bank0
   997  00BD  1303               	bcf	3,6	;RP1=0, select bank0
   998  00BE  1486               	bsf	6,1	;volatile
   999  00BF                     l1444:
  1000                           
  1001                           ;Master.c: 119:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1002  00BF  3002               	movlw	2
  1003  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1004  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1005  00C2  00B6               	movwf	??_main+2
  1006  00C3  3004               	movlw	4
  1007  00C4  00B5               	movwf	??_main+1
  1008  00C5  30B9               	movlw	185
  1009  00C6  00B4               	movwf	??_main
  1010  00C7                     u587:
  1011  00C7  0BB4               	decfsz	??_main,f
  1012  00C8  28C7               	goto	u587
  1013  00C9  0BB5               	decfsz	??_main+1,f
  1014  00CA  28C7               	goto	u587
  1015  00CB  0BB6               	decfsz	??_main+2,f
  1016  00CC  28C7               	goto	u587
  1017  00CD  28CE               	nop2
  1018  00CE                     l1446:
  1019                           
  1020                           ;Master.c: 121:         Lcd_Write_Char(Slave2);
  1021  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1022  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1023  00D0  083D               	movf	_Slave2,w
  1024  00D1  120A  118A  21DD  120A  118A  	fcall	_Lcd_Write_Char
  1025  00D6                     l1448:
  1026                           
  1027                           ;Master.c: 123:         Lcd_Write_String("A");
  1028  00D6  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1029  00D7  120A  118A  22F3  120A  118A  	fcall	_Lcd_Write_String
  1030  00DC                     l1450:
  1031                           
  1032                           ;Master.c: 126:         PORTBbits.RB2 = 0;
  1033  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1034  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1035  00DE  1106               	bcf	6,2	;volatile
  1036  00DF                     l1452:
  1037                           
  1038                           ;Master.c: 127:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1039  00DF  3003               	movlw	3
  1040  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1041  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1042  00E2  00B5               	movwf	??_main+1
  1043  00E3  3097               	movlw	151
  1044  00E4  00B4               	movwf	??_main
  1045  00E5                     u597:
  1046  00E5  0BB4               	decfsz	??_main,f
  1047  00E6  28E5               	goto	u597
  1048  00E7  0BB5               	decfsz	??_main+1,f
  1049  00E8  28E5               	goto	u597
  1050  00E9                     l1454:
  1051                           
  1052                           ;Master.c: 129:         SPI_Write(1);
  1053  00E9  3001               	movlw	1
  1054  00EA  120A  118A  23B6  120A  118A  	fcall	_SPI_Write
  1055  00EF                     l1456:
  1056                           
  1057                           ;Master.c: 130:         Slave3 = SPI_Read();
  1058  00EF  120A  118A  23A6  120A  118A  	fcall	_SPI_Read
  1059  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1060  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1061  00F6  00B4               	movwf	??_main
  1062  00F7  0834               	movf	??_main,w
  1063  00F8  00BC               	movwf	_Slave3
  1064  00F9                     l1458:
  1065                           
  1066                           ;Master.c: 132:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1067  00F9  3003               	movlw	3
  1068  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1069  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1070  00FC  00B5               	movwf	??_main+1
  1071  00FD  3097               	movlw	151
  1072  00FE  00B4               	movwf	??_main
  1073  00FF                     u607:
  1074  00FF  0BB4               	decfsz	??_main,f
  1075  0100  28FF               	goto	u607
  1076  0101  0BB5               	decfsz	??_main+1,f
  1077  0102  28FF               	goto	u607
  1078  0103                     l1460:
  1079                           
  1080                           ;Master.c: 133:         PORTBbits.RB2 = 1;
  1081  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0105  1506               	bsf	6,2	;volatile
  1084  0106                     l1462:
  1085                           
  1086                           ;Master.c: 134:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1087  0106  3002               	movlw	2
  1088  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0109  00B6               	movwf	??_main+2
  1091  010A  3004               	movlw	4
  1092  010B  00B5               	movwf	??_main+1
  1093  010C  30B9               	movlw	185
  1094  010D  00B4               	movwf	??_main
  1095  010E                     u617:
  1096  010E  0BB4               	decfsz	??_main,f
  1097  010F  290E               	goto	u617
  1098  0110  0BB5               	decfsz	??_main+1,f
  1099  0111  290E               	goto	u617
  1100  0112  0BB6               	decfsz	??_main+2,f
  1101  0113  290E               	goto	u617
  1102  0114  2915               	nop2
  1103  0115                     l1464:
  1104                           
  1105                           ;Master.c: 136:         Lcd_Write_Char(Slave3);
  1106  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0117  083C               	movf	_Slave3,w
  1109  0118  120A  118A  21DD  120A  118A  	fcall	_Lcd_Write_Char
  1110  011D                     l1466:
  1111                           
  1112                           ;Master.c: 138:         Lcd_Write_String("A");
  1113  011D  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1114  011E  120A  118A  22F3  120A  118A  	fcall	_Lcd_Write_String
  1115  0123  282C               	goto	l121
  1116  0124  120A  118A  2810   	ljmp	start
  1117  0127                     __end_of_main:
  1118                           
  1119                           	psect	text1
  1120  0354                     __ptext1:	
  1121 ;; *************** function _setup *****************
  1122 ;; Defined at:
  1123 ;;		line 146 in file "Master.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    4
  1144 ;; This function calls:
  1145 ;;		Nothing
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           
  1152                           ;psect for function _setup
  1153  0354                     _setup:
  1154  0354                     l1338:	
  1155                           ;incstack = 0
  1156                           ; Regs used in _setup: [wreg+status,2]
  1157                           
  1158                           
  1159                           ;Master.c: 147:     ANSEL = 0b00001001;
  1160  0354  3009               	movlw	9
  1161  0355  1683               	bsf	3,5	;RP0=1, select bank3
  1162  0356  1703               	bsf	3,6	;RP1=1, select bank3
  1163  0357  0088               	movwf	8	;volatile
  1164  0358                     l1340:
  1165                           
  1166                           ;Master.c: 148:     ANSELH= 0b00000000;
  1167  0358  0189               	clrf	9	;volatile
  1168  0359                     l1342:
  1169                           
  1170                           ;Master.c: 149:     TRISA = 0b00001001;
  1171  0359  3009               	movlw	9
  1172  035A  1683               	bsf	3,5	;RP0=1, select bank1
  1173  035B  1303               	bcf	3,6	;RP1=0, select bank1
  1174  035C  0085               	movwf	5	;volatile
  1175                           
  1176                           ;Master.c: 150:     TRISB = 0b00000000;
  1177  035D  0186               	clrf	6	;volatile
  1178  035E                     l1344:
  1179                           
  1180                           ;Master.c: 151:     TRISC = 0b00010000;
  1181  035E  3010               	movlw	16
  1182  035F  0087               	movwf	7	;volatile
  1183  0360                     l1346:
  1184                           
  1185                           ;Master.c: 152:     TRISD = 0b00000000;
  1186  0360  0188               	clrf	8	;volatile
  1187  0361                     l1348:
  1188                           
  1189                           ;Master.c: 153:     TRISE = 0;
  1190  0361  0189               	clrf	9	;volatile
  1191  0362                     l1350:
  1192                           
  1193                           ;Master.c: 155:     PORTA = 0;
  1194  0362  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0363  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0364  0185               	clrf	5	;volatile
  1197  0365                     l1352:
  1198                           
  1199                           ;Master.c: 156:     PORTB = 0;
  1200  0365  0186               	clrf	6	;volatile
  1201  0366                     l1354:
  1202                           
  1203                           ;Master.c: 157:     PORTC = 0;
  1204  0366  0187               	clrf	7	;volatile
  1205  0367                     l1356:
  1206                           
  1207                           ;Master.c: 158:     PORTD = 0;
  1208  0367  0188               	clrf	8	;volatile
  1209  0368                     l1358:
  1210                           
  1211                           ;Master.c: 159:     PORTE = 0;
  1212  0368  0189               	clrf	9	;volatile
  1213  0369                     l1360:
  1214                           
  1215                           ;Master.c: 161:     PIE1bits.RCIE = 1;
  1216  0369  1683               	bsf	3,5	;RP0=1, select bank1
  1217  036A  1303               	bcf	3,6	;RP1=0, select bank1
  1218  036B  168C               	bsf	12,5	;volatile
  1219  036C                     l1362:
  1220                           
  1221                           ;Master.c: 162:     INTCONbits.PEIE = 1;
  1222  036C  170B               	bsf	11,6	;volatile
  1223  036D                     l1364:
  1224                           
  1225                           ;Master.c: 163:     INTCONbits.GIE = 1;
  1226  036D  178B               	bsf	11,7	;volatile
  1227  036E                     l127:
  1228  036E  0008               	return
  1229  036F                     __end_of_setup:
  1230                           
  1231                           	psect	text2
  1232  03B6                     __ptext2:	
  1233 ;; *************** function _SPI_Write *****************
  1234 ;; Defined at:
  1235 ;;		line 27 in file "SPI.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  a               1    wreg     unsigned char 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  a               1   15[BANK0 ] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       0       0       0       0
  1250 ;;      Locals:         0       1       0       0       0
  1251 ;;      Temps:          0       0       0       0       0
  1252 ;;      Totals:         0       1       0       0       0
  1253 ;;Total ram usage:        1 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    4
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _SPI_Write
  1265  03B6                     _SPI_Write:
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _SPI_Write: [wreg]
  1269                           ;SPI_Write@a stored from wreg
  1270  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1271  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1272  03B8  00AF               	movwf	SPI_Write@a
  1273  03B9                     l1312:
  1274                           
  1275                           ;SPI.c: 28:     SSPBUF = a;
  1276  03B9  082F               	movf	SPI_Write@a,w
  1277  03BA  0093               	movwf	19	;volatile
  1278  03BB                     l22:
  1279  03BB  0008               	return
  1280  03BC                     __end_of_SPI_Write:
  1281                           
  1282                           	psect	text3
  1283  03A6                     __ptext3:	
  1284 ;; *************** function _SPI_Read *****************
  1285 ;; Defined at:
  1286 ;;		line 43 in file "SPI.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      unsigned char 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    5
  1307 ;; This function calls:
  1308 ;;		_spiReceiveWait
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _SPI_Read
  1316  03A6                     _SPI_Read:
  1317  03A6                     l1314:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
  1320                           
  1321                           
  1322                           ;SPI.c: 44:     spiReceiveWait();
  1323  03A6  120A  118A  23AF  120A  118A  	fcall	_spiReceiveWait
  1324  03AB                     l1316:
  1325                           
  1326                           ;SPI.c: 45:     return (SSPBUF);
  1327  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1328  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1329  03AD  0813               	movf	19,w	;volatile
  1330  03AE                     l36:
  1331  03AE  0008               	return
  1332  03AF                     __end_of_SPI_Read:
  1333                           
  1334                           	psect	text4
  1335  03AF                     __ptext4:	
  1336 ;; *************** function _spiReceiveWait *****************
  1337 ;; Defined at:
  1338 ;;		line 31 in file "SPI.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		None
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0
  1355 ;;      Totals:         0       0       0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    4
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_SPI_Read
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _spiReceiveWait
  1368  03AF                     _spiReceiveWait:
  1369  03AF                     l1210:	
  1370                           ;incstack = 0
  1371                           ; Regs used in _spiReceiveWait: []
  1372                           
  1373  03AF                     l25:	
  1374                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1375                           
  1376  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  1377  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  1378  03B1  1C14               	btfss	20,0	;volatile
  1379  03B2  2BB4               	goto	u411
  1380  03B3  2BB5               	goto	u410
  1381  03B4                     u411:
  1382  03B4  2BAF               	goto	l25
  1383  03B5                     u410:
  1384  03B5                     l28:
  1385  03B5  0008               	return
  1386  03B6                     __end_of_spiReceiveWait:
  1387                           
  1388                           	psect	text5
  1389  0316                     __ptext5:	
  1390 ;; *************** function _SPI_Init *****************
  1391 ;; Defined at:
  1392 ;;		line 8 in file "SPI.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  sType           1    wreg     enum E1349
  1395 ;;  sDataSample     1   15[BANK0 ] enum E1357
  1396 ;;  sClockIdle      1   16[BANK0 ] enum E1361
  1397 ;;  sTransmitEdg    1   17[BANK0 ] enum E1365
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;  sType           1   18[BANK0 ] enum E1349
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1409 ;;      Params:         0       3       0       0       0
  1410 ;;      Locals:         0       1       0       0       0
  1411 ;;      Temps:          0       0       0       0       0
  1412 ;;      Totals:         0       4       0       0       0
  1413 ;;Total ram usage:        4 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    4
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _SPI_Init
  1425  0316                     _SPI_Init:
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
  1429                           ;SPI_Init@sType stored from wreg
  1430  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0318  00B2               	movwf	SPI_Init@sType
  1433  0319                     l1302:
  1434                           
  1435                           ;SPI.c: 8: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:     TRISC5 = 0;
  1436  0319  1683               	bsf	3,5	;RP0=1, select bank1
  1437  031A  1303               	bcf	3,6	;RP1=0, select bank1
  1438  031B  1287               	bcf	7,5	;volatile
  1439                           
  1440                           ;SPI.c: 11:     TRISC4 = 1;
  1441  031C  1607               	bsf	7,4	;volatile
  1442                           
  1443                           ;SPI.c: 13:     if(sType & 0b00000100)
  1444  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1445  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1446  031F  1D32               	btfss	SPI_Init@sType,2
  1447  0320  2B22               	goto	u471
  1448  0321  2B23               	goto	u470
  1449  0322                     u471:
  1450  0322  2B29               	goto	l1308
  1451  0323                     u470:
  1452  0323                     l1304:
  1453                           
  1454                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
  1455  0323  0831               	movf	SPI_Init@sTransmitEdge,w
  1456  0324  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0325  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0326  0094               	movwf	20	;volatile
  1459  0327                     l1306:
  1460                           
  1461                           ;SPI.c: 16:         TRISC3 = 1;
  1462  0327  1587               	bsf	7,3	;volatile
  1463                           
  1464                           ;SPI.c: 17:     }
  1465  0328  2B2F               	goto	l18
  1466  0329                     l1308:
  1467                           
  1468                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
  1469  0329  082F               	movf	SPI_Init@sDataSample,w
  1470  032A  0431               	iorwf	SPI_Init@sTransmitEdge,w
  1471  032B  1683               	bsf	3,5	;RP0=1, select bank1
  1472  032C  1303               	bcf	3,6	;RP1=0, select bank1
  1473  032D  0094               	movwf	20	;volatile
  1474  032E                     l1310:
  1475                           
  1476                           ;SPI.c: 21:         TRISC3 = 0;
  1477  032E  1187               	bcf	7,3	;volatile
  1478  032F                     l18:	
  1479                           ;SPI.c: 22:     }
  1480                           
  1481                           
  1482                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
  1483  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1484  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0331  0832               	movf	SPI_Init@sType,w
  1486  0332  0430               	iorwf	SPI_Init@sClockIdle,w
  1487  0333  0094               	movwf	20	;volatile
  1488  0334                     l19:
  1489  0334  0008               	return
  1490  0335                     __end_of_SPI_Init:
  1491                           
  1492                           	psect	text6
  1493  0388                     __ptext6:	
  1494 ;; *************** function _SERIAL_Init *****************
  1495 ;; Defined at:
  1496 ;;		line 13 in file "UART.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       0       0       0       0
  1511 ;;      Locals:         0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0
  1513 ;;      Totals:         0       0       0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    4
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _SERIAL_Init
  1526  0388                     _SERIAL_Init:
  1527  0388                     l1368:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _SERIAL_Init: [wreg]
  1530                           
  1531                           
  1532                           ;UART.c: 14:     SPBRG = 25;
  1533  0388  3019               	movlw	25
  1534  0389  1683               	bsf	3,5	;RP0=1, select bank1
  1535  038A  1303               	bcf	3,6	;RP1=0, select bank1
  1536  038B  0099               	movwf	25	;volatile
  1537  038C                     l1370:
  1538                           
  1539                           ;UART.c: 16:     TXSTAbits.BRGH = 1;
  1540  038C  1518               	bsf	24,2	;volatile
  1541  038D                     l1372:
  1542                           
  1543                           ;UART.c: 17:     TXSTAbits.TXEN = 1;
  1544  038D  1698               	bsf	24,5	;volatile
  1545  038E                     l1374:
  1546                           
  1547                           ;UART.c: 18:     TXSTAbits.SYNC = 0;
  1548  038E  1218               	bcf	24,4	;volatile
  1549  038F                     l1376:
  1550                           
  1551                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  1552  038F  1318               	bcf	24,6	;volatile
  1553  0390                     l1378:
  1554                           
  1555                           ;UART.c: 21:     RCSTAbits.CREN = 1;
  1556  0390  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0391  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0392  1618               	bsf	24,4	;volatile
  1559  0393                     l1380:
  1560                           
  1561                           ;UART.c: 22:     RCSTAbits.SPEN = 1;
  1562  0393  1798               	bsf	24,7	;volatile
  1563  0394                     l1382:
  1564                           
  1565                           ;UART.c: 23:     RCSTAbits.RX9 = 0;
  1566  0394  1318               	bcf	24,6	;volatile
  1567  0395                     l1384:
  1568                           
  1569                           ;UART.c: 25:     PIE1bits.RCIE = 1;
  1570  0395  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0396  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0397  168C               	bsf	12,5	;volatile
  1573  0398                     l1386:
  1574                           
  1575                           ;UART.c: 26:     INTCONbits.PEIE = 1;
  1576  0398  170B               	bsf	11,6	;volatile
  1577  0399                     l1388:
  1578                           
  1579                           ;UART.c: 27:     INTCONbits.GIE = 1;
  1580  0399  178B               	bsf	11,7	;volatile
  1581  039A                     l199:
  1582  039A  0008               	return
  1583  039B                     __end_of_SERIAL_Init:
  1584                           
  1585                           	psect	text7
  1586  02F3                     __ptext7:	
  1587 ;; *************** function _Lcd_Write_String *****************
  1588 ;; Defined at:
  1589 ;;		line 83 in file "LCD.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  a               1    wreg     PTR unsigned char 
  1592 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(17), 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  a               1   19[BANK0 ] PTR unsigned char 
  1595 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(17), 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      void 
  1598 ;; Registers used:
  1599 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       0       0       0       0
  1606 ;;      Locals:         0       1       0       0       0
  1607 ;;      Temps:          0       1       0       0       0
  1608 ;;      Totals:         0       2       0       0       0
  1609 ;;Total ram usage:        2 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    5
  1612 ;; This function calls:
  1613 ;;		_Lcd_Write_Char
  1614 ;; This function is called by:
  1615 ;;		_main
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           
  1620                           ;psect for function _Lcd_Write_String
  1621  02F3                     _Lcd_Write_String:
  1622                           
  1623                           ;incstack = 0
  1624                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1625                           ;Lcd_Write_String@a stored from wreg
  1626  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1627  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1628  02F5  00B3               	movwf	Lcd_Write_String@a
  1629  02F6                     l1390:
  1630                           
  1631                           ;LCD.c: 84:     while(*a != 0)
  1632  02F6  2B09               	goto	l1396
  1633  02F7                     l1392:
  1634                           
  1635                           ;LCD.c: 85:         Lcd_Write_Char(*a++);
  1636  02F7  0833               	movf	Lcd_Write_String@a,w
  1637  02F8  0084               	movwf	4
  1638  02F9  120A  118A  236F  120A  118A  	fcall	stringdir
  1639  02FE  120A  118A  21DD  120A  118A  	fcall	_Lcd_Write_Char
  1640  0303                     l1394:
  1641  0303  3001               	movlw	1
  1642  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0306  00B2               	movwf	??_Lcd_Write_String
  1645  0307  0832               	movf	??_Lcd_Write_String,w
  1646  0308  07B3               	addwf	Lcd_Write_String@a,f
  1647  0309                     l1396:
  1648                           
  1649                           ;LCD.c: 84:     while(*a != 0)
  1650  0309  0833               	movf	Lcd_Write_String@a,w
  1651  030A  0084               	movwf	4
  1652  030B  120A  118A  236F  120A  118A  	fcall	stringdir
  1653  0310  3A00               	xorlw	0
  1654  0311  1D03               	skipz
  1655  0312  2B14               	goto	u491
  1656  0313  2B15               	goto	u490
  1657  0314                     u491:
  1658  0314  2AF7               	goto	l1392
  1659  0315                     u490:
  1660  0315                     l165:
  1661  0315  0008               	return
  1662  0316                     __end_of_Lcd_Write_String:
  1663                           
  1664                           	psect	text8
  1665  01DD                     __ptext8:	
  1666 ;; *************** function _Lcd_Write_Char *****************
  1667 ;; Defined at:
  1668 ;;		line 60 in file "LCD.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  a               1    wreg     unsigned char 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  a               1   17[BANK0 ] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         0       0       0       0       0
  1683 ;;      Locals:         0       1       0       0       0
  1684 ;;      Temps:          0       2       0       0       0
  1685 ;;      Totals:         0       3       0       0       0
  1686 ;;Total ram usage:        3 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    4
  1689 ;; This function calls:
  1690 ;;		Nothing
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;;		_Lcd_Write_String
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           
  1698                           ;psect for function _Lcd_Write_Char
  1699  01DD                     _Lcd_Write_Char:
  1700                           
  1701                           ;incstack = 0
  1702                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0]
  1703                           ;Lcd_Write_Char@a stored from wreg
  1704  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1705  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1706  01DF  00B1               	movwf	Lcd_Write_Char@a
  1707  01E0                     l1242:
  1708                           
  1709                           ;LCD.c: 61:     PORTD = 0xFF;
  1710  01E0  30FF               	movlw	255
  1711  01E1  0088               	movwf	8	;volatile
  1712  01E2                     l1244:
  1713                           
  1714                           ;LCD.c: 62:     PORTD &= 0x80;
  1715  01E2  3080               	movlw	128
  1716  01E3  00AF               	movwf	??_Lcd_Write_Char
  1717  01E4  082F               	movf	??_Lcd_Write_Char,w
  1718  01E5  0588               	andwf	8,f	;volatile
  1719  01E6                     l1246:
  1720                           
  1721                           ;LCD.c: 63:     RE0 = 0;
  1722  01E6  1009               	bcf	9,0	;volatile
  1723  01E7                     l1248:
  1724                           
  1725                           ;LCD.c: 64:     RE1 = 1;
  1726  01E7  1489               	bsf	9,1	;volatile
  1727  01E8                     l1250:
  1728                           
  1729                           ;LCD.c: 65:     RE2 = 0;
  1730  01E8  1109               	bcf	9,2	;volatile
  1731  01E9                     l1252:
  1732                           
  1733                           ;LCD.c: 66:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1734  01E9  304E               	movlw	78
  1735  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1736  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1737  01EC  00B0               	movwf	??_Lcd_Write_Char+1
  1738  01ED  30EA               	movlw	234
  1739  01EE  00AF               	movwf	??_Lcd_Write_Char
  1740  01EF                     u627:
  1741  01EF  0BAF               	decfsz	??_Lcd_Write_Char,f
  1742  01F0  29EF               	goto	u627
  1743  01F1  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1744  01F2  29EF               	goto	u627
  1745  01F3  0000               	nop
  1746  01F4                     l1254:
  1747                           
  1748                           ;LCD.c: 67:     RE2 = 1;
  1749  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1750  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1751  01F6  1509               	bsf	9,2	;volatile
  1752                           
  1753                           ;LCD.c: 68:     if (PORTD == 0x80){
  1754  01F7  3080               	movlw	128
  1755  01F8  0608               	xorwf	8,w	;volatile
  1756  01F9  1D03               	btfss	3,2
  1757  01FA  29FC               	goto	u431
  1758  01FB  29FD               	goto	u430
  1759  01FC                     u431:
  1760  01FC  2A0C               	goto	l1262
  1761  01FD                     u430:
  1762  01FD                     l1256:
  1763                           
  1764                           ;LCD.c: 69:     RE2 = 0;
  1765  01FD  1109               	bcf	9,2	;volatile
  1766  01FE                     l1258:
  1767                           
  1768                           ;LCD.c: 70:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1769  01FE  304E               	movlw	78
  1770  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1772  0201  00B0               	movwf	??_Lcd_Write_Char+1
  1773  0202  30EA               	movlw	234
  1774  0203  00AF               	movwf	??_Lcd_Write_Char
  1775  0204                     u637:
  1776  0204  0BAF               	decfsz	??_Lcd_Write_Char,f
  1777  0205  2A04               	goto	u637
  1778  0206  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1779  0207  2A04               	goto	u637
  1780  0208  0000               	nop
  1781  0209                     l1260:
  1782                           
  1783                           ;LCD.c: 71:     RE2 = 1;
  1784  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1785  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1786  020B  1509               	bsf	9,2	;volatile
  1787  020C                     l1262:	
  1788                           ;LCD.c: 72:     }
  1789                           
  1790                           
  1791                           ;LCD.c: 75:     PORTD = a;
  1792  020C  0831               	movf	Lcd_Write_Char@a,w
  1793  020D  0088               	movwf	8	;volatile
  1794  020E                     l1264:
  1795                           
  1796                           ;LCD.c: 76:     RE0 = 1;
  1797  020E  1409               	bsf	9,0	;volatile
  1798  020F                     l1266:
  1799                           
  1800                           ;LCD.c: 77:     RE1 = 0;
  1801  020F  1089               	bcf	9,1	;volatile
  1802  0210                     l1268:
  1803                           
  1804                           ;LCD.c: 78:     RE2 = 1;
  1805  0210  1509               	bsf	9,2	;volatile
  1806                           
  1807                           ;LCD.c: 79:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1808  0211  304E               	movlw	78
  1809  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0214  00B0               	movwf	??_Lcd_Write_Char+1
  1812  0215  30EA               	movlw	234
  1813  0216  00AF               	movwf	??_Lcd_Write_Char
  1814  0217                     u647:
  1815  0217  0BAF               	decfsz	??_Lcd_Write_Char,f
  1816  0218  2A17               	goto	u647
  1817  0219  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1818  021A  2A17               	goto	u647
  1819  021B  0000               	nop
  1820  021C                     l1270:
  1821                           
  1822                           ;LCD.c: 80:     RE2 = 0;
  1823  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1824  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1825  021E  1109               	bcf	9,2	;volatile
  1826  021F                     l159:
  1827  021F  0008               	return
  1828  0220                     __end_of_Lcd_Write_Char:
  1829                           
  1830                           	psect	text9
  1831  0335                     __ptext9:	
  1832 ;; *************** function _Lcd_Init *****************
  1833 ;; Defined at:
  1834 ;;		line 52 in file "LCD.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, pclath, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0
  1851 ;;      Totals:         0       0       0       0       0
  1852 ;;Total ram usage:        0 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    5
  1855 ;; This function calls:
  1856 ;;		_Lcd_Cmd
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _Lcd_Init
  1864  0335                     _Lcd_Init:
  1865  0335                     l1366:	
  1866                           ;incstack = 0
  1867                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1868                           
  1869                           
  1870                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  1871  0335  3038               	movlw	56
  1872  0336  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1873                           
  1874                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  1875  033B  300C               	movlw	12
  1876  033C  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1877                           
  1878                           ;LCD.c: 55:     Lcd_Cmd(0x01);
  1879  0341  3001               	movlw	1
  1880  0342  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1881                           
  1882                           ;LCD.c: 56:     Lcd_Cmd(0x06);
  1883  0347  3006               	movlw	6
  1884  0348  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1885                           
  1886                           ;LCD.c: 57:     Lcd_Cmd(0x80);
  1887  034D  3080               	movlw	128
  1888  034E  120A  118A  2220  120A  118A  	fcall	_Lcd_Cmd
  1889  0353                     l154:
  1890  0353  0008               	return
  1891  0354                     __end_of_Lcd_Init:
  1892                           
  1893                           	psect	text10
  1894  0220                     __ptext10:	
  1895 ;; *************** function _Lcd_Cmd *****************
  1896 ;; Defined at:
  1897 ;;		line 13 in file "LCD.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  a               1    wreg     unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  a               1   17[BANK0 ] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       0       0       0       0
  1912 ;;      Locals:         0       1       0       0       0
  1913 ;;      Temps:          0       2       0       0       0
  1914 ;;      Totals:         0       3       0       0       0
  1915 ;;Total ram usage:        3 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    4
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;;		_Lcd_Init
  1923 ;;		_Lcd_Clear
  1924 ;;		_Lcd_Set_Cursor
  1925 ;;		_Lcd_Shift_Right
  1926 ;;		_Lcd_Shift_Left
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function _Lcd_Cmd
  1932  0220                     _Lcd_Cmd:
  1933                           
  1934                           ;incstack = 0
  1935                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  1936                           ;Lcd_Cmd@a stored from wreg
  1937  0220  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0221  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0222  00B1               	movwf	Lcd_Cmd@a
  1940  0223                     l1212:
  1941                           
  1942                           ;LCD.c: 14:  PORTD = 0xFF;
  1943  0223  30FF               	movlw	255
  1944  0224  0088               	movwf	8	;volatile
  1945  0225                     l1214:
  1946                           
  1947                           ;LCD.c: 15:     PORTD &= 0x80;
  1948  0225  3080               	movlw	128
  1949  0226  00AF               	movwf	??_Lcd_Cmd
  1950  0227  082F               	movf	??_Lcd_Cmd,w
  1951  0228  0588               	andwf	8,f	;volatile
  1952  0229                     l1216:
  1953                           
  1954                           ;LCD.c: 16:     RE0 = 0;
  1955  0229  1009               	bcf	9,0	;volatile
  1956  022A                     l1218:
  1957                           
  1958                           ;LCD.c: 17:     RE1 = 1;
  1959  022A  1489               	bsf	9,1	;volatile
  1960  022B                     l1220:
  1961                           
  1962                           ;LCD.c: 18:     RE2 = 0;
  1963  022B  1109               	bcf	9,2	;volatile
  1964  022C                     l1222:
  1965                           
  1966                           ;LCD.c: 19:     _delay((unsigned long)((30)*(8000000/4000.0)));
  1967  022C  304E               	movlw	78
  1968  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1969  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1970  022F  00B0               	movwf	??_Lcd_Cmd+1
  1971  0230  30EA               	movlw	234
  1972  0231  00AF               	movwf	??_Lcd_Cmd
  1973  0232                     u657:
  1974  0232  0BAF               	decfsz	??_Lcd_Cmd,f
  1975  0233  2A32               	goto	u657
  1976  0234  0BB0               	decfsz	??_Lcd_Cmd+1,f
  1977  0235  2A32               	goto	u657
  1978  0236  0000               	nop
  1979  0237                     l1224:
  1980                           
  1981                           ;LCD.c: 20:     RE2 = 1;
  1982  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0239  1509               	bsf	9,2	;volatile
  1985                           
  1986                           ;LCD.c: 21:     if (PORTD == 0x80){
  1987  023A  3080               	movlw	128
  1988  023B  0608               	xorwf	8,w	;volatile
  1989  023C  1D03               	btfss	3,2
  1990  023D  2A3F               	goto	u421
  1991  023E  2A40               	goto	u420
  1992  023F                     u421:
  1993  023F  2A4F               	goto	l1232
  1994  0240                     u420:
  1995  0240                     l1226:
  1996                           
  1997                           ;LCD.c: 22:     RE2 = 0;
  1998  0240  1109               	bcf	9,2	;volatile
  1999  0241                     l1228:
  2000                           
  2001                           ;LCD.c: 23:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2002  0241  304E               	movlw	78
  2003  0242  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0243  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0244  00B0               	movwf	??_Lcd_Cmd+1
  2006  0245  30EA               	movlw	234
  2007  0246  00AF               	movwf	??_Lcd_Cmd
  2008  0247                     u667:
  2009  0247  0BAF               	decfsz	??_Lcd_Cmd,f
  2010  0248  2A47               	goto	u667
  2011  0249  0BB0               	decfsz	??_Lcd_Cmd+1,f
  2012  024A  2A47               	goto	u667
  2013  024B  0000               	nop
  2014  024C                     l1230:
  2015                           
  2016                           ;LCD.c: 24:     RE2 = 1;
  2017  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2018  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2019  024E  1509               	bsf	9,2	;volatile
  2020  024F                     l1232:	
  2021                           ;LCD.c: 25:     }
  2022                           
  2023                           
  2024                           ;LCD.c: 28:     PORTD = a;
  2025  024F  0831               	movf	Lcd_Cmd@a,w
  2026  0250  0088               	movwf	8	;volatile
  2027  0251                     l1234:
  2028                           
  2029                           ;LCD.c: 29:     RE0 = 0;
  2030  0251  1009               	bcf	9,0	;volatile
  2031  0252                     l1236:
  2032                           
  2033                           ;LCD.c: 30:     RE1 = 0;
  2034  0252  1089               	bcf	9,1	;volatile
  2035  0253                     l1238:
  2036                           
  2037                           ;LCD.c: 31:     RE2 = 1;
  2038  0253  1509               	bsf	9,2	;volatile
  2039                           
  2040                           ;LCD.c: 32:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2041  0254  304E               	movlw	78
  2042  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0257  00B0               	movwf	??_Lcd_Cmd+1
  2045  0258  30EA               	movlw	234
  2046  0259  00AF               	movwf	??_Lcd_Cmd
  2047  025A                     u677:
  2048  025A  0BAF               	decfsz	??_Lcd_Cmd,f
  2049  025B  2A5A               	goto	u677
  2050  025C  0BB0               	decfsz	??_Lcd_Cmd+1,f
  2051  025D  2A5A               	goto	u677
  2052  025E  0000               	nop
  2053  025F                     l1240:
  2054                           
  2055                           ;LCD.c: 33:     RE2 = 0;
  2056  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0261  1109               	bcf	9,2	;volatile
  2059  0262                     l142:
  2060  0262  0008               	return
  2061  0263                     __end_of_Lcd_Cmd:
  2062                           
  2063                           	psect	text11
  2064  029D                     __ptext11:	
  2065 ;; *************** function _ISR *****************
  2066 ;; Defined at:
  2067 ;;		line 70 in file "Master.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0
  2083 ;;      Temps:          0       5       0       0       0
  2084 ;;      Totals:         0       5       0       0       0
  2085 ;;Total ram usage:        5 bytes
  2086 ;; Hardware stack levels used:    1
  2087 ;; Hardware stack levels required when called:    3
  2088 ;; This function calls:
  2089 ;;		_CONTADOR
  2090 ;;		_itoa
  2091 ;; This function is called by:
  2092 ;;		Interrupt level 1
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           
  2096                           
  2097                           ;psect for function _ISR
  2098  029D                     _ISR:
  2099  029D                     i1l1398:
  2100                           
  2101                           ;Master.c: 71:     if (RCIF==1){
  2102  029D  1E8C               	btfss	12,5	;volatile
  2103  029E  2AA0               	goto	u50_21
  2104  029F  2AA1               	goto	u50_20
  2105  02A0                     u50_21:
  2106  02A0  2AC4               	goto	i1l116
  2107  02A1                     u50_20:
  2108  02A1                     i1l1400:
  2109                           
  2110                           ;Master.c: 72:         O = CONTADOR ((int)RCREG);
  2111  02A1  081A               	movf	26,w	;volatile
  2112  02A2  00AA               	movwf	??_ISR
  2113  02A3  01AB               	clrf	??_ISR+1
  2114  02A4  082A               	movf	??_ISR,w
  2115  02A5  00F0               	movwf	CONTADOR@n
  2116  02A6  082B               	movf	??_ISR+1,w
  2117  02A7  00F1               	movwf	CONTADOR@n+1
  2118  02A8  120A  118A  239B  120A  118A  	fcall	_CONTADOR
  2119  02AD  0871               	movf	?_CONTADOR+1,w
  2120  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2121  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2122  02B0  00BA               	movwf	_O+1
  2123  02B1  0870               	movf	?_CONTADOR,w
  2124  02B2  00B9               	movwf	_O
  2125  02B3                     i1l1402:
  2126                           
  2127                           ;Master.c: 73:         itoa(COMPARE,O,10);
  2128  02B3  083A               	movf	_O+1,w
  2129  02B4  00A5               	movwf	itoa@val+1
  2130  02B5  0839               	movf	_O,w
  2131  02B6  00A4               	movwf	itoa@val
  2132  02B7  300A               	movlw	10
  2133  02B8  00A6               	movwf	itoa@base
  2134  02B9  3000               	movlw	0
  2135  02BA  00A7               	movwf	itoa@base+1
  2136  02BB  3040               	movlw	(low (_COMPARE| 0))& (0+255)
  2137  02BC  120A  118A  22CD  120A  118A  	fcall	_itoa
  2138  02C1                     i1l1404:
  2139                           
  2140                           ;Master.c: 74:         RCIF=0;
  2141  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2142  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2143  02C3  128C               	bcf	12,5	;volatile
  2144  02C4                     i1l116:
  2145  02C4  082E               	movf	??_ISR+4,w
  2146  02C5  008A               	movwf	10
  2147  02C6  082D               	movf	??_ISR+3,w
  2148  02C7  0084               	movwf	4
  2149  02C8  0E2C               	swapf	??_ISR+2,w
  2150  02C9  0083               	movwf	3
  2151  02CA  0EFE               	swapf	btemp,f
  2152  02CB  0E7E               	swapf	btemp,w
  2153  02CC  0009               	retfie
  2154  02CD                     __end_of_ISR:
  2155                           
  2156                           	psect	intentry
  2157  0004                     __pintentry:	
  2158                           ;incstack = 0
  2159                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2160                           
  2161  0004                     interrupt_function:
  2162  007E                     saved_w	set	btemp
  2163  0004  00FE               	movwf	btemp
  2164  0005  0E03               	swapf	3,w
  2165  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0008  00AC               	movwf	??_ISR+2
  2168  0009  0804               	movf	4,w
  2169  000A  00AD               	movwf	??_ISR+3
  2170  000B  080A               	movf	10,w
  2171  000C  00AE               	movwf	??_ISR+4
  2172  000D  120A  118A  2A9D   	ljmp	_ISR
  2173                           
  2174                           	psect	text12
  2175  02CD                     __ptext12:	
  2176 ;; *************** function _itoa *****************
  2177 ;; Defined at:
  2178 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  buf             1    wreg     PTR unsigned char 
  2181 ;;		 -> COMPARE(5), 
  2182 ;;  val             2    4[BANK0 ] int 
  2183 ;;  base            2    6[BANK0 ] int 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2186 ;;		 -> COMPARE(5), 
  2187 ;;  cp              1    0        PTR unsigned char 
  2188 ;;		 -> COMPARE(5), 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      PTR unsigned char 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       4       0       0       0
  2199 ;;      Locals:         0       2       0       0       0
  2200 ;;      Temps:          1       0       0       0       0
  2201 ;;      Totals:         1       6       0       0       0
  2202 ;;Total ram usage:        7 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    2
  2205 ;; This function calls:
  2206 ;;		_utoa
  2207 ;; This function is called by:
  2208 ;;		_ISR
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           
  2213                           ;psect for function _itoa
  2214  02CD                     _itoa:
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2218                           ;itoa@buf stored from wreg
  2219  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  2220  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  2221  02CF  00A9               	movwf	itoa@buf
  2222  02D0                     i1l1324:
  2223  02D0                     i1l1326:
  2224  02D0  1FA5               	btfss	itoa@val+1,7
  2225  02D1  2AD3               	goto	u48_21
  2226  02D2  2AD4               	goto	u48_20
  2227  02D3                     u48_21:
  2228  02D3  2AE4               	goto	i1l1334
  2229  02D4                     u48_20:
  2230  02D4                     i1l1328:
  2231  02D4  302D               	movlw	45
  2232  02D5  00FD               	movwf	??_itoa
  2233  02D6  0829               	movf	itoa@buf,w
  2234  02D7  0084               	movwf	4
  2235  02D8  087D               	movf	??_itoa,w
  2236  02D9  1383               	bcf	3,7	;select IRP bank0
  2237  02DA  0080               	movwf	0
  2238  02DB                     i1l1330:
  2239  02DB  3001               	movlw	1
  2240  02DC  00FD               	movwf	??_itoa
  2241  02DD  087D               	movf	??_itoa,w
  2242  02DE  07A9               	addwf	itoa@buf,f
  2243  02DF                     i1l1332:
  2244  02DF  09A4               	comf	itoa@val,f
  2245  02E0  09A5               	comf	itoa@val+1,f
  2246  02E1  0AA4               	incf	itoa@val,f
  2247  02E2  1903               	skipnz
  2248  02E3  0AA5               	incf	itoa@val+1,f
  2249  02E4                     i1l1334:
  2250  02E4  0825               	movf	itoa@val+1,w
  2251  02E5  00F9               	movwf	utoa@val+1
  2252  02E6  0824               	movf	itoa@val,w
  2253  02E7  00F8               	movwf	utoa@val
  2254  02E8  0827               	movf	itoa@base+1,w
  2255  02E9  00FB               	movwf	utoa@base+1
  2256  02EA  0826               	movf	itoa@base,w
  2257  02EB  00FA               	movwf	utoa@base
  2258  02EC  0829               	movf	itoa@buf,w
  2259  02ED  120A  118A  2127  120A  118A  	fcall	_utoa
  2260  02F2                     i1l754:
  2261  02F2  0008               	return
  2262  02F3                     __end_of_itoa:
  2263                           
  2264                           	psect	text13
  2265  0127                     __ptext13:	
  2266 ;; *************** function _utoa *****************
  2267 ;; Defined at:
  2268 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  buf             1    wreg     PTR unsigned char 
  2271 ;;		 -> COMPARE(5), 
  2272 ;;  val             2    8[COMMON] unsigned int 
  2273 ;;  base            2   10[COMMON] int 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2276 ;;		 -> COMPARE(5), 
  2277 ;;  v               2    0[BANK0 ] unsigned int 
  2278 ;;  c               1    2[BANK0 ] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      PTR unsigned char 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         4       0       0       0       0
  2289 ;;      Locals:         0       4       0       0       0
  2290 ;;      Temps:          1       0       0       0       0
  2291 ;;      Totals:         5       4       0       0       0
  2292 ;;Total ram usage:        9 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    1
  2295 ;; This function calls:
  2296 ;;		___lwdiv
  2297 ;;		___lwmod
  2298 ;; This function is called by:
  2299 ;;		_itoa
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _utoa
  2305  0127                     _utoa:
  2306                           
  2307                           ;incstack = 0
  2308                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2309                           ;utoa@buf stored from wreg
  2310  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0128  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0129  00A3               	movwf	utoa@buf
  2313  012A                     i1l1272:
  2314  012A  0879               	movf	utoa@val+1,w
  2315  012B  00A1               	movwf	utoa@v+1
  2316  012C  0878               	movf	utoa@val,w
  2317  012D  00A0               	movwf	utoa@v
  2318  012E                     i1l1274:
  2319  012E  087B               	movf	utoa@base+1,w
  2320  012F  00F1               	movwf	___lwdiv@divisor+1
  2321  0130  087A               	movf	utoa@base,w
  2322  0131  00F0               	movwf	___lwdiv@divisor
  2323  0132  0821               	movf	utoa@v+1,w
  2324  0133  00F3               	movwf	___lwdiv@dividend+1
  2325  0134  0820               	movf	utoa@v,w
  2326  0135  00F2               	movwf	___lwdiv@dividend
  2327  0136  120A  118A  2199  120A  118A  	fcall	___lwdiv
  2328  013B  0871               	movf	?___lwdiv+1,w
  2329  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2330  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2331  013E  00A1               	movwf	utoa@v+1
  2332  013F  0870               	movf	?___lwdiv,w
  2333  0140  00A0               	movwf	utoa@v
  2334  0141                     i1l1276:
  2335  0141  3001               	movlw	1
  2336  0142  00FC               	movwf	??_utoa
  2337  0143  087C               	movf	??_utoa,w
  2338  0144  07A3               	addwf	utoa@buf,f
  2339  0145                     i1l1278:
  2340  0145  0820               	movf	utoa@v,w
  2341  0146  0421               	iorwf	utoa@v+1,w
  2342  0147  1D03               	btfss	3,2
  2343  0148  294A               	goto	u44_21
  2344  0149  294B               	goto	u44_20
  2345  014A                     u44_21:
  2346  014A  292E               	goto	i1l1274
  2347  014B                     u44_20:
  2348  014B                     i1l1280:
  2349  014B  0823               	movf	utoa@buf,w
  2350  014C  0084               	movwf	4
  2351  014D  1383               	bcf	3,7	;select IRP bank0
  2352  014E  0180               	clrf	0
  2353  014F                     i1l1282:
  2354  014F  3001               	movlw	1
  2355  0150  02A3               	subwf	utoa@buf,f
  2356  0151                     i1l1284:
  2357  0151  087B               	movf	utoa@base+1,w
  2358  0152  00F1               	movwf	___lwmod@divisor+1
  2359  0153  087A               	movf	utoa@base,w
  2360  0154  00F0               	movwf	___lwmod@divisor
  2361  0155  0879               	movf	utoa@val+1,w
  2362  0156  00F3               	movwf	___lwmod@dividend+1
  2363  0157  0878               	movf	utoa@val,w
  2364  0158  00F2               	movwf	___lwmod@dividend
  2365  0159  120A  118A  2263  120A  118A  	fcall	___lwmod
  2366  015E  0870               	movf	?___lwmod,w
  2367  015F  00FC               	movwf	??_utoa
  2368  0160  087C               	movf	??_utoa,w
  2369  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2370  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2371  0163  00A2               	movwf	utoa@c
  2372  0164                     i1l1286:
  2373  0164  087B               	movf	utoa@base+1,w
  2374  0165  00F1               	movwf	___lwdiv@divisor+1
  2375  0166  087A               	movf	utoa@base,w
  2376  0167  00F0               	movwf	___lwdiv@divisor
  2377  0168  0879               	movf	utoa@val+1,w
  2378  0169  00F3               	movwf	___lwdiv@dividend+1
  2379  016A  0878               	movf	utoa@val,w
  2380  016B  00F2               	movwf	___lwdiv@dividend
  2381  016C  120A  118A  2199  120A  118A  	fcall	___lwdiv
  2382  0171  0871               	movf	?___lwdiv+1,w
  2383  0172  00F9               	movwf	utoa@val+1
  2384  0173  0870               	movf	?___lwdiv,w
  2385  0174  00F8               	movwf	utoa@val
  2386  0175                     i1l1288:
  2387  0175  300A               	movlw	10
  2388  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2390  0178  0222               	subwf	utoa@c,w
  2391  0179  1C03               	skipc
  2392  017A  297C               	goto	u45_21
  2393  017B  297D               	goto	u45_20
  2394  017C                     u45_21:
  2395  017C  2981               	goto	i1l760
  2396  017D                     u45_20:
  2397  017D                     i1l1290:
  2398  017D  3007               	movlw	7
  2399  017E  00FC               	movwf	??_utoa
  2400  017F  087C               	movf	??_utoa,w
  2401  0180  07A2               	addwf	utoa@c,f
  2402  0181                     i1l760:
  2403  0181  3030               	movlw	48
  2404  0182  00FC               	movwf	??_utoa
  2405  0183  087C               	movf	??_utoa,w
  2406  0184  07A2               	addwf	utoa@c,f
  2407  0185                     i1l1292:
  2408  0185  0822               	movf	utoa@c,w
  2409  0186  00FC               	movwf	??_utoa
  2410  0187  0823               	movf	utoa@buf,w
  2411  0188  0084               	movwf	4
  2412  0189  087C               	movf	??_utoa,w
  2413  018A  1383               	bcf	3,7	;select IRP bank0
  2414  018B  0080               	movwf	0
  2415  018C                     i1l1294:
  2416  018C  3001               	movlw	1
  2417  018D  02A3               	subwf	utoa@buf,f
  2418  018E                     i1l1296:
  2419  018E  0878               	movf	utoa@val,w
  2420  018F  0479               	iorwf	utoa@val+1,w
  2421  0190  1D03               	btfss	3,2
  2422  0191  2993               	goto	u46_21
  2423  0192  2994               	goto	u46_20
  2424  0193                     u46_21:
  2425  0193  2951               	goto	i1l1284
  2426  0194                     u46_20:
  2427  0194                     i1l1298:
  2428                           
  2429                           ;	Return value of _utoa is never used
  2430  0194  3001               	movlw	1
  2431  0195  00FC               	movwf	??_utoa
  2432  0196  087C               	movf	??_utoa,w
  2433  0197  07A3               	addwf	utoa@buf,f
  2434  0198                     i1l762:
  2435  0198  0008               	return
  2436  0199                     __end_of_utoa:
  2437                           
  2438                           	psect	text14
  2439  0263                     __ptext14:	
  2440 ;; *************** function ___lwmod *****************
  2441 ;; Defined at:
  2442 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  divisor         2    0[COMMON] unsigned int 
  2445 ;;  dividend        2    2[COMMON] unsigned int 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  counter         1    5[COMMON] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  2    0[COMMON] unsigned int 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2457 ;;      Params:         4       0       0       0       0
  2458 ;;      Locals:         1       0       0       0       0
  2459 ;;      Temps:          1       0       0       0       0
  2460 ;;      Totals:         6       0       0       0       0
  2461 ;;Total ram usage:        6 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_utoa
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           
  2471                           ;psect for function ___lwmod
  2472  0263                     ___lwmod:
  2473  0263                     i1l1188:	
  2474                           ;incstack = 0
  2475                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2476                           
  2477  0263  0870               	movf	___lwmod@divisor,w
  2478  0264  0471               	iorwf	___lwmod@divisor+1,w
  2479  0265  1903               	btfsc	3,2
  2480  0266  2A68               	goto	u35_21
  2481  0267  2A69               	goto	u35_20
  2482  0268                     u35_21:
  2483  0268  2A98               	goto	i1l1206
  2484  0269                     u35_20:
  2485  0269                     i1l1190:
  2486  0269  01F5               	clrf	___lwmod@counter
  2487  026A  0AF5               	incf	___lwmod@counter,f
  2488  026B  2A77               	goto	i1l1196
  2489  026C                     i1l1192:
  2490  026C  3001               	movlw	1
  2491  026D                     u36_25:
  2492  026D  1003               	clrc
  2493  026E  0DF0               	rlf	___lwmod@divisor,f
  2494  026F  0DF1               	rlf	___lwmod@divisor+1,f
  2495  0270  3EFF               	addlw	-1
  2496  0271  1D03               	skipz
  2497  0272  2A6D               	goto	u36_25
  2498  0273                     i1l1194:
  2499  0273  3001               	movlw	1
  2500  0274  00F4               	movwf	??___lwmod
  2501  0275  0874               	movf	??___lwmod,w
  2502  0276  07F5               	addwf	___lwmod@counter,f
  2503  0277                     i1l1196:
  2504  0277  1FF1               	btfss	___lwmod@divisor+1,7
  2505  0278  2A7A               	goto	u37_21
  2506  0279  2A7B               	goto	u37_20
  2507  027A                     u37_21:
  2508  027A  2A6C               	goto	i1l1192
  2509  027B                     u37_20:
  2510  027B                     i1l1198:
  2511  027B  0871               	movf	___lwmod@divisor+1,w
  2512  027C  0273               	subwf	___lwmod@dividend+1,w
  2513  027D  1D03               	skipz
  2514  027E  2A81               	goto	u38_25
  2515  027F  0870               	movf	___lwmod@divisor,w
  2516  0280  0272               	subwf	___lwmod@dividend,w
  2517  0281                     u38_25:
  2518  0281  1C03               	skipc
  2519  0282  2A84               	goto	u38_21
  2520  0283  2A85               	goto	u38_20
  2521  0284                     u38_21:
  2522  0284  2A8B               	goto	i1l1202
  2523  0285                     u38_20:
  2524  0285                     i1l1200:
  2525  0285  0870               	movf	___lwmod@divisor,w
  2526  0286  02F2               	subwf	___lwmod@dividend,f
  2527  0287  0871               	movf	___lwmod@divisor+1,w
  2528  0288  1C03               	skipc
  2529  0289  03F3               	decf	___lwmod@dividend+1,f
  2530  028A  02F3               	subwf	___lwmod@dividend+1,f
  2531  028B                     i1l1202:
  2532  028B  3001               	movlw	1
  2533  028C                     u39_25:
  2534  028C  1003               	clrc
  2535  028D  0CF1               	rrf	___lwmod@divisor+1,f
  2536  028E  0CF0               	rrf	___lwmod@divisor,f
  2537  028F  3EFF               	addlw	-1
  2538  0290  1D03               	skipz
  2539  0291  2A8C               	goto	u39_25
  2540  0292                     i1l1204:
  2541  0292  3001               	movlw	1
  2542  0293  02F5               	subwf	___lwmod@counter,f
  2543  0294  1D03               	btfss	3,2
  2544  0295  2A97               	goto	u40_21
  2545  0296  2A98               	goto	u40_20
  2546  0297                     u40_21:
  2547  0297  2A7B               	goto	i1l1198
  2548  0298                     u40_20:
  2549  0298                     i1l1206:
  2550  0298  0873               	movf	___lwmod@dividend+1,w
  2551  0299  00F1               	movwf	?___lwmod+1
  2552  029A  0872               	movf	___lwmod@dividend,w
  2553  029B  00F0               	movwf	?___lwmod
  2554  029C                     i1l582:
  2555  029C  0008               	return
  2556  029D                     __end_of___lwmod:
  2557                           
  2558                           	psect	text15
  2559  0199                     __ptext15:	
  2560 ;; *************** function ___lwdiv *****************
  2561 ;; Defined at:
  2562 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  divisor         2    0[COMMON] unsigned int 
  2565 ;;  dividend        2    2[COMMON] unsigned int 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  quotient        2    5[COMMON] unsigned int 
  2568 ;;  counter         1    7[COMMON] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  2    0[COMMON] unsigned int 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2578 ;;      Params:         4       0       0       0       0
  2579 ;;      Locals:         3       0       0       0       0
  2580 ;;      Temps:          1       0       0       0       0
  2581 ;;      Totals:         8       0       0       0       0
  2582 ;;Total ram usage:        8 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_utoa
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function ___lwdiv
  2593  0199                     ___lwdiv:
  2594  0199                     i1l1162:	
  2595                           ;incstack = 0
  2596                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2597                           
  2598  0199  01F5               	clrf	___lwdiv@quotient
  2599  019A  01F6               	clrf	___lwdiv@quotient+1
  2600  019B                     i1l1164:
  2601  019B  0870               	movf	___lwdiv@divisor,w
  2602  019C  0471               	iorwf	___lwdiv@divisor+1,w
  2603  019D  1903               	btfsc	3,2
  2604  019E  29A0               	goto	u28_21
  2605  019F  29A1               	goto	u28_20
  2606  01A0                     u28_21:
  2607  01A0  29D8               	goto	i1l1184
  2608  01A1                     u28_20:
  2609  01A1                     i1l1166:
  2610  01A1  01F7               	clrf	___lwdiv@counter
  2611  01A2  0AF7               	incf	___lwdiv@counter,f
  2612  01A3  29AF               	goto	i1l1172
  2613  01A4                     i1l1168:
  2614  01A4  3001               	movlw	1
  2615  01A5                     u29_25:
  2616  01A5  1003               	clrc
  2617  01A6  0DF0               	rlf	___lwdiv@divisor,f
  2618  01A7  0DF1               	rlf	___lwdiv@divisor+1,f
  2619  01A8  3EFF               	addlw	-1
  2620  01A9  1D03               	skipz
  2621  01AA  29A5               	goto	u29_25
  2622  01AB                     i1l1170:
  2623  01AB  3001               	movlw	1
  2624  01AC  00F4               	movwf	??___lwdiv
  2625  01AD  0874               	movf	??___lwdiv,w
  2626  01AE  07F7               	addwf	___lwdiv@counter,f
  2627  01AF                     i1l1172:
  2628  01AF  1FF1               	btfss	___lwdiv@divisor+1,7
  2629  01B0  29B2               	goto	u30_21
  2630  01B1  29B3               	goto	u30_20
  2631  01B2                     u30_21:
  2632  01B2  29A4               	goto	i1l1168
  2633  01B3                     u30_20:
  2634  01B3                     i1l1174:
  2635  01B3  3001               	movlw	1
  2636  01B4                     u31_25:
  2637  01B4  1003               	clrc
  2638  01B5  0DF5               	rlf	___lwdiv@quotient,f
  2639  01B6  0DF6               	rlf	___lwdiv@quotient+1,f
  2640  01B7  3EFF               	addlw	-1
  2641  01B8  1D03               	skipz
  2642  01B9  29B4               	goto	u31_25
  2643  01BA  0871               	movf	___lwdiv@divisor+1,w
  2644  01BB  0273               	subwf	___lwdiv@dividend+1,w
  2645  01BC  1D03               	skipz
  2646  01BD  29C0               	goto	u32_25
  2647  01BE  0870               	movf	___lwdiv@divisor,w
  2648  01BF  0272               	subwf	___lwdiv@dividend,w
  2649  01C0                     u32_25:
  2650  01C0  1C03               	skipc
  2651  01C1  29C3               	goto	u32_21
  2652  01C2  29C4               	goto	u32_20
  2653  01C3                     u32_21:
  2654  01C3  29CB               	goto	i1l1180
  2655  01C4                     u32_20:
  2656  01C4                     i1l1176:
  2657  01C4  0870               	movf	___lwdiv@divisor,w
  2658  01C5  02F2               	subwf	___lwdiv@dividend,f
  2659  01C6  0871               	movf	___lwdiv@divisor+1,w
  2660  01C7  1C03               	skipc
  2661  01C8  03F3               	decf	___lwdiv@dividend+1,f
  2662  01C9  02F3               	subwf	___lwdiv@dividend+1,f
  2663  01CA                     i1l1178:
  2664  01CA  1475               	bsf	___lwdiv@quotient,0
  2665  01CB                     i1l1180:
  2666  01CB  3001               	movlw	1
  2667  01CC                     u33_25:
  2668  01CC  1003               	clrc
  2669  01CD  0CF1               	rrf	___lwdiv@divisor+1,f
  2670  01CE  0CF0               	rrf	___lwdiv@divisor,f
  2671  01CF  3EFF               	addlw	-1
  2672  01D0  1D03               	skipz
  2673  01D1  29CC               	goto	u33_25
  2674  01D2                     i1l1182:
  2675  01D2  3001               	movlw	1
  2676  01D3  02F7               	subwf	___lwdiv@counter,f
  2677  01D4  1D03               	btfss	3,2
  2678  01D5  29D7               	goto	u34_21
  2679  01D6  29D8               	goto	u34_20
  2680  01D7                     u34_21:
  2681  01D7  29B3               	goto	i1l1174
  2682  01D8                     u34_20:
  2683  01D8                     i1l1184:
  2684  01D8  0876               	movf	___lwdiv@quotient+1,w
  2685  01D9  00F1               	movwf	?___lwdiv+1
  2686  01DA  0875               	movf	___lwdiv@quotient,w
  2687  01DB  00F0               	movwf	?___lwdiv
  2688  01DC                     i1l572:
  2689  01DC  0008               	return
  2690  01DD                     __end_of___lwdiv:
  2691                           
  2692                           	psect	text16
  2693  039B                     __ptext16:	
  2694 ;; *************** function _CONTADOR *****************
  2695 ;; Defined at:
  2696 ;;		line 8 in file "UART.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  n               2    0[COMMON] int 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  2    0[COMMON] int 
  2703 ;; Registers used:
  2704 ;;		wreg
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2710 ;;      Params:         2       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0
  2713 ;;      Totals:         2       0       0       0       0
  2714 ;;Total ram usage:        2 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; This function calls:
  2717 ;;		Nothing
  2718 ;; This function is called by:
  2719 ;;		_ISR
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           
  2724                           ;psect for function _CONTADOR
  2725  039B                     _CONTADOR:
  2726  039B                     i1l1320:	
  2727                           ;incstack = 0
  2728                           ; Regs used in _CONTADOR: [wreg]
  2729                           
  2730                           
  2731                           ;UART.c: 9:     Destination = n;
  2732  039B  0871               	movf	CONTADOR@n+1,w
  2733  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2734  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2735  039E  00B8               	movwf	_Destination+1
  2736  039F  0870               	movf	CONTADOR@n,w
  2737  03A0  00B7               	movwf	_Destination
  2738                           
  2739                           ;UART.c: 10:     return ((Destination)*1);
  2740  03A1  0838               	movf	_Destination+1,w
  2741  03A2  00F1               	movwf	?_CONTADOR+1
  2742  03A3  0837               	movf	_Destination,w
  2743  03A4  00F0               	movwf	?_CONTADOR
  2744  03A5                     i1l196:
  2745  03A5  0008               	return
  2746  03A6                     __end_of_CONTADOR:
  2747  007E                     btemp	set	126	;btemp
  2748  007E                     wtemp0	set	126
  2749                           
  2750                           	psect	config
  2751                           
  2752                           ;Config register CONFIG1 @ 0x2007
  2753                           ;	Oscillator Selection bits
  2754                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  2755                           ;	Watchdog Timer Enable bit
  2756                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2757                           ;	Power-up Timer Enable bit
  2758                           ;	PWRTE = OFF, PWRT disabled
  2759                           ;	RE3/MCLR pin function select bit
  2760                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2761                           ;	Code Protection bit
  2762                           ;	CP = OFF, Program memory code protection is disabled
  2763                           ;	Data Code Protection bit
  2764                           ;	CPD = OFF, Data memory code protection is disabled
  2765                           ;	Brown Out Reset Selection bits
  2766                           ;	BOREN = OFF, BOR disabled
  2767                           ;	Internal External Switchover bit
  2768                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2769                           ;	Fail-Safe Clock Monitor Enabled bit
  2770                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2771                           ;	Low Voltage Programming Enable bit
  2772                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2773                           ;	In-Circuit Debugger Mode bit
  2774                           ;	DEBUG = 0x1, unprogrammed default
  2775  2007                     	org	8199
  2776  2007  20D1               	dw	8401
  2777                           
  2778                           ;Config register CONFIG2 @ 0x2008
  2779                           ;	Brown-out Reset Selection bit
  2780                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2781                           ;	Flash Program Memory Self Write Enable bits
  2782                           ;	WRT = OFF, Write protection off
  2783  2008                     	org	8200
  2784  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     23      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    _ISR->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     647
                                             20 BANK0      3     3      0
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Write_Char
                   _Lcd_Write_String
                        _SERIAL_Init
                           _SPI_Init
                           _SPI_Read
                          _SPI_Write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      22
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     360
                                             15 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SERIAL_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     2     2      0     199
                                             18 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0    1710
                                             10 BANK0      5     5      0
                           _CONTADOR
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CONTADOR                                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _SERIAL_Init
   _SPI_Init
   _SPI_Read
     _spiReceiveWait
   _SPI_Write
   _setup

 _ISR (ROOT)
   _CONTADOR
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      33       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      25       5       46.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      33      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 00:48:52 2021

                        _O 0039                          pc 0002                _SSPSTATbits 0094  
                       l22 03BB                         l25 03AF                         l18 032F  
                       l19 0334                         l28 03B5                         l36 03AE  
                       fsr 0004                        l121 002C                        l142 0262  
                      l127 036E                        l154 0353                        l165 0315  
                      l159 021F                        l199 039A                        _RE0 0048  
                      _RE1 0049                        _RE2 004A                        u410 03B5  
                      u411 03B4                        u420 0240                        u421 023F  
                      u430 01FD                        u431 01FC                        _ISR 029D  
                      u470 0323                        u471 0322                        u607 00FF  
                      u617 010E                        u537 0057                        u490 0315  
                      u627 01EF                        u491 0314                        u547 0071  
                      u637 0204                        u557 0080                        u647 0217  
                      u567 009E                        u657 0232                        u577 00B8  
                      u667 0247                        u587 00C7                        u677 025A  
                      u597 00E5                        fsr0 0004                        indf 0000  
                     ?_ISR 0070                       l1210 03AF                       l1220 022B  
                     l1212 0223                       l1230 024C                       l1222 022C  
                     l1214 0225                       l1310 032E                       l1302 0319  
                     l1240 025F                       l1232 024F                       l1224 0237  
                     l1216 0229                       l1304 0323                       l1312 03B9  
                     l1234 0251                       l1226 0240                       l1218 022A  
                     l1250 01E8                       l1242 01E0                       l1306 0327  
                     l1314 03A6                       l1410 0047                       l1236 0252  
                     l1228 0241                       l1260 0209                       l1252 01E9  
                     l1244 01E2                       l1308 0329                       l1316 03AB  
                     l1340 0358                       l1420 0061                       l1412 004D  
                     l1238 0253                       l1270 021C                       l1262 020C  
                     l1254 01F4                       l1246 01E6                       l1350 0362  
                     l1342 0359                       l1430 008F                       l1422 006B  
                     l1414 0050                       l1406 0027                       l1264 020E  
                     l1256 01FD                       l1248 01E7                       l1360 0369  
                     l1352 0365                       l1344 035E                       l1440 00B2  
                     l1432 0095                       l1424 0075                       l1416 0051  
                     l1408 0041                       l1266 020F                       l1258 01FE  
                     l1370 038C                       l1362 036C                       l1354 0366  
                     l1346 0360                       l1338 0354                       l1450 00DC  
                     l1442 00BC                       l1434 0098                       l1426 0078  
                     l1418 005B                       l1268 0210                       l1380 0393  
                     l1372 038D                       l1364 036D                       l1356 0367  
                     l1348 0361                       l1460 0103                       l1452 00DF  
                     l1444 00BF                       l1436 00A2                       l1428 0087  
                     l1366 0335                       l1390 02F6                       l1382 0394  
                     l1374 038E                       l1358 0368                       l1462 0106  
                     l1454 00E9                       l1446 00CE                       l1438 00A8  
                     l1392 02F7                       l1384 0395                       l1376 038F  
                     l1368 0388                       l1464 0115                       l1456 00EF  
                     l1448 00D6                       l1394 0303                       l1386 0398  
                     l1378 0390                       l1466 011D                       l1458 00F9  
                     l1396 0309                       l1388 0399                       STR_1 0375  
                     STR_2 0386                       STR_3 0386                       STR_4 0386  
                     _RCIF 0065                       _TRMT 04C1          ?_Lcd_Write_String 0070  
                     _main 0027                       _itoa 02CD                       btemp 007E  
                     _utoa 0127         SPI_Init@sClockIdle 0030                       start 0010  
       ??_Lcd_Write_String 0032            __end_of_Lcd_Cmd 0263           __end_of_CONTADOR 03A6  
                    ??_ISR 002A        SPI_Init@sDataSample 002F                      ?_main 0070  
                    ?_itoa 0024                      _ANSEL 0188                      ?_utoa 0078  
          __end_of___lwdiv 01DD                      i1l116 02C4            __end_of___lwmod 029D  
                    i1l196 03A5                      i1l572 01DC                      i1l582 029C  
                    i1l760 0181                      i1l762 0198                      i1l754 02F2  
                    _RCREG 001A                      u30_20 01B3                      u30_21 01B2  
                    u31_25 01B4                      u32_20 01C4                      u40_20 0298  
                    u32_21 01C3                      u40_21 0297                      u32_25 01C0  
                    u33_25 01CC                      u34_20 01D8                      u50_20 02A1  
                    u34_21 01D7                      u50_21 02A0                      _SPBRG 0099  
                    u35_20 0269                      u35_21 0268                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      u28_20 01A1                      u44_20 014B  
                    u28_21 01A0                      u44_21 014A                      u36_25 026D  
                    u37_20 027B                      u45_20 017D                      u37_21 027A  
                    u45_21 017C                      u29_25 01A5                      u38_20 0285  
                    u46_20 0194                      u38_21 0284                      u46_21 0193  
                    u38_25 0281                      u39_25 028C                      u48_20 02D4  
                    u48_21 02D3                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019                      _Ready 003F      SPI_Init@sTransmitEdge 0031  
                    _setup 0354           __end_of_SPI_Init 0335           __end_of_SPI_Read 03AF  
                    pclath 000A                      utoa@c 0022                      utoa@v 0020  
                    status 0003                      wtemp0 007E         __size_of_SPI_Write 0006  
         __end_of_Lcd_Init 0354               ?_SERIAL_Init 0070            __initialization 0013  
             __end_of_main 0127               __end_of_itoa 02F3               __end_of_utoa 0199  
                   ??_main 0034                     ??_itoa 007D                     ??_utoa 007C  
                   ?_setup 0070                     _ANSELH 0189                _Destination 0037  
                   i1l1200 0285                     i1l1202 028B                     i1l1204 0292  
                   i1l1206 0298                     i1l1320 039B                     i1l1400 02A1  
                   i1l1170 01AB                     i1l1162 0199                     i1l1330 02DB  
                   i1l1402 02B3                     i1l1180 01CB                     i1l1172 01AF  
                   i1l1164 019B                     i1l1332 02DF                     i1l1324 02D0  
                   i1l1404 02C1                     i1l1182 01D2                     i1l1174 01B3  
                   i1l1166 01A1                     i1l1190 0269                     i1l1334 02E4  
                   i1l1326 02D0                     i1l1176 01C4                     i1l1168 01A4  
                   i1l1184 01D8                     i1l1192 026C                     i1l1280 014B  
                   i1l1272 012A                     i1l1328 02D4                     i1l1178 01CA  
                   i1l1194 0273                     i1l1290 017D                     i1l1282 014F  
                   i1l1274 012E                     i1l1196 0277                     i1l1188 0263  
                   i1l1292 0185                     i1l1284 0151                     i1l1276 0141  
                   i1l1198 027B                     i1l1294 018C                     i1l1286 0164  
                   i1l1278 0145                     i1l1296 018E                     i1l1288 0175  
                   i1l1298 0194                     i1l1398 029D                  ??_Lcd_Cmd 002F  
  __size_of_Lcd_Write_Char 0043                     _TRISC3 043B                     _TRISC4 043C  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
                   _Slave1 003E                     _Slave2 003D                     _Slave3 003C  
                ??___lwdiv 0074                  ??___lwmod 0074          __end_of_SPI_Write 03BC  
                CONTADOR@n 0070                     saved_w 007E                  ?_CONTADOR 0070  
  __end_of__initialization 0023              SPI_Init@sType 0032             __pcstackCOMMON 0070  
            __end_of_setup 036F                  ?_SPI_Init 002F                  ?_SPI_Read 0070  
                ?_Lcd_Init 0070                    ??_setup 002F                 ??_CONTADOR 0072  
               __pbssBANK0 0037                 __pmaintext 0027       __size_of_SERIAL_Init 0013  
               __pintentry 0004    __size_of_spiReceiveWait 0007  __size_of_Lcd_Write_String 0023  
               ??_SPI_Init 0032                 ??_SPI_Read 002F                    _COMPARE 0040  
               ??_Lcd_Init 0032                    _SSPSTAT 0094                 __stringtab 036F  
           _Lcd_Write_Char 01DD                    _Lcd_Cmd 0220                    ___lwdiv 0199  
                  ___lwmod 0263                    __ptext1 0354                    __ptext2 03B6  
                  __ptext3 03A6                    __ptext4 03AF                    __ptext5 0316  
                  __ptext6 0388                    __ptext7 02F3                    __ptext8 01DD  
                  __ptext9 0335               __size_of_ISR 0030     __end_of_Lcd_Write_Char 0220  
     end_of_initialization 0023                    itoa@buf 0029                    itoa@val 0024  
                _RCSTAbits 0018                    utoa@buf 0023                    utoa@val 0078  
                _PORTBbits 0006                  _SPI_Write 03B6            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0033          __size_of_CONTADOR 000B                  _TXSTAbits 0098  
           _spiReceiveWait 03AF           _Lcd_Write_String 02F3          __size_of_SPI_Init 001F  
        __size_of_SPI_Read 0009        start_initialization 0013                __end_of_ISR 02CD  
               ?_SPI_Write 0070          __size_of_Lcd_Init 001F     __end_of_spiReceiveWait 03B6  
          Lcd_Write_Char@a 0031                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070              ??_SERIAL_Init 002F           ___lwdiv@dividend 0072  
          ?_spiReceiveWait 0070                   ?___lwdiv 0070                   ?___lwmod 0070  
                __pstrings 036F                ??_SPI_Write 002F           ___lwdiv@quotient 0075  
                 _CONTADOR 039B             __size_of_setup 001B          interrupt_function 0004  
                 _PIE1bits 008C                   Lcd_Cmd@a 0031        __end_of_SERIAL_Init 039B  
                 _SPI_Init 0316                   _SPI_Read 03A6                __stringbase 0374  
         ??_Lcd_Write_Char 002F                   _Lcd_Init 0335                   _Contador 003B  
 __end_of_Lcd_Write_String 0316           __size_of_Lcd_Cmd 0043                 SPI_Write@a 002F  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0375  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 0220  
                 __ptext11 029D                   __ptext12 02CD                   __ptext13 0127  
                 __ptext14 0263                   __ptext15 0199                   __ptext16 039B  
            __size_of_main 0100              __size_of_itoa 0026              __size_of_utoa 0072  
              _SERIAL_Init 0388                 _INTCONbits 000B                   itoa@base 0026  
                 intlevel1 0000           ___lwmod@dividend 0072           ??_spiReceiveWait 002F  
                stringcode 036F                   utoa@base 007A            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 036F                   stringtab 036F  
