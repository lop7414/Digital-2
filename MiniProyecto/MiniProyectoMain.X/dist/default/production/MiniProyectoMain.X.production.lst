

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 20:30:23 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0019                     _TXREG	set	25
   454  000B                     _INTCONbits	set	11
   455  0018                     _RCSTAbits	set	24
   456  0009                     _PORTE	set	9
   457  0008                     _PORTD	set	8
   458  0007                     _PORTC	set	7
   459  0005                     _PORTA	set	5
   460  0006                     _PORTBbits	set	6
   461  0006                     _PORTB	set	6
   462  001A                     _RCREG	set	26
   463  0013                     _SSPBUF	set	19
   464  0014                     _SSPCON	set	20
   465  004A                     _RE2	set	74
   466  0049                     _RE1	set	73
   467  0048                     _RE0	set	72
   468  0065                     _RCIF	set	101
   469  0063                     _SSPIF	set	99
   470  008C                     _PIE1bits	set	140
   471  0098                     _TXSTAbits	set	152
   472  0099                     _SPBRG	set	153
   473  008F                     _OSCCONbits	set	143
   474  0089                     _TRISE	set	137
   475  0088                     _TRISD	set	136
   476  0087                     _TRISC	set	135
   477  0086                     _TRISB	set	134
   478  0085                     _TRISA	set	133
   479  0094                     _SSPSTATbits	set	148
   480  0087                     _TRISCbits	set	135
   481  04C1                     _TRMT	set	1217
   482  0189                     _ANSELH	set	393
   483  0188                     _ANSEL	set	392
   484                           
   485                           	psect	strings
   486  0300                     __pstrings:
   487  0300                     stringtab:
   488  0300                     __stringtab:
   489                           
   490                           ;	String table - string pointers are 1 byte each
   491  0300  1BFF               	btfsc	btemp+1,7
   492  0301  2B0A               	ljmp	stringcode
   493  0302  1383               	bcf	3,7
   494  0303  187F               	btfsc	btemp+1,0
   495  0304  1783               	bsf	3,7
   496  0305  0800               	movf	0,w
   497  0306  0A84               	incf	4,f
   498  0307  1903               	skipnz
   499  0308  0AFF               	incf	btemp+1,f
   500  0309  0008               	return
   501  030A                     stringcode:
   502  030A                     stringdir:
   503  030A  3003               	movlw	high stringdir
   504  030B  008A               	movwf	10
   505  030C  0804               	movf	4,w
   506  030D  0A84               	incf	4,f
   507  030E  0782               	addwf	2,f
   508  030F                     __stringbase:
   509  030F  3400               	retlw	0
   510  0310                     __end_of__stringtab:
   511  0310                     STR_1:
   512  0310  3453               	retlw	83	;'S'
   513  0311  3431               	retlw	49	;'1'
   514  0312  3420               	retlw	32	;' '
   515  0313  3420               	retlw	32	;' '
   516  0314  3420               	retlw	32	;' '
   517  0315  3420               	retlw	32	;' '
   518  0316  3453               	retlw	83	;'S'
   519  0317  3432               	retlw	50	;'2'
   520  0318  3420               	retlw	32	;' '
   521  0319  3420               	retlw	32	;' '
   522  031A  3420               	retlw	32	;' '
   523  031B  3420               	retlw	32	;' '
   524  031C  3453               	retlw	83	;'S'
   525  031D  3433               	retlw	51	;'3'
   526  031E  3420               	retlw	32	;' '
   527  031F  3420               	retlw	32	;' '
   528  0320  3400               	retlw	0
   529  0321                     STR_2:
   530  0321  344C               	retlw	76	;'L'
   531  0322  3420               	retlw	32	;' '
   532  0323  3400               	retlw	0
   533  031F                     
   534                           	psect	cinit
   535  0013                     start_initialization:	
   536                           ; #config settings
   537                           
   538  0013                     __initialization:
   539                           
   540                           ; Clear objects allocated to BANK0
   541  0013  1283               	bcf	3,5	;RP0=0, select bank0
   542  0014  1303               	bcf	3,6	;RP1=0, select bank0
   543  0015  01B5               	clrf	__pbssBANK0& (0+127)
   544  0016  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   545  0017  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   546  0018  01B8               	clrf	(__pbssBANK0+3)& (0+127)
   547  0019  01B9               	clrf	(__pbssBANK0+4)& (0+127)
   548  001A  01BA               	clrf	(__pbssBANK0+5)& (0+127)
   549  001B  01BB               	clrf	(__pbssBANK0+6)& (0+127)
   550  001C  01BC               	clrf	(__pbssBANK0+7)& (0+127)
   551  001D  01BD               	clrf	(__pbssBANK0+8)& (0+127)
   552  001E  01BE               	clrf	(__pbssBANK0+9)& (0+127)
   553  001F  01BF               	clrf	(__pbssBANK0+10)& (0+127)
   554  0020  01C0               	clrf	(__pbssBANK0+11)& (0+127)
   555  0021  01C1               	clrf	(__pbssBANK0+12)& (0+127)
   556  0022  01C2               	clrf	(__pbssBANK0+13)& (0+127)
   557  0023                     end_of_initialization:	
   558                           ;End of C runtime variable initialization code
   559                           
   560  0023                     __end_of__initialization:
   561  0023  0183               	clrf	3
   562  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   563                           
   564                           	psect	bssBANK0
   565  0035                     __pbssBANK0:
   566  0035                     _Destination:
   567  0035                     	ds	2
   568  0037                     _O:
   569  0037                     	ds	2
   570  0039                     _Contador:
   571  0039                     	ds	1
   572  003A                     _Slave3:
   573  003A                     	ds	1
   574  003B                     _Slave2:
   575  003B                     	ds	1
   576  003C                     _Slave1:
   577  003C                     	ds	1
   578  003D                     _Ready:
   579  003D                     	ds	1
   580  003E                     _COMPARE:
   581  003E                     	ds	5
   582                           
   583                           	psect	cstackCOMMON
   584  0070                     __pcstackCOMMON:
   585  0070                     ?_setup:
   586  0070                     ?_Lcd_Init:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_SERIAL_Init:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_Lcd_Cmd:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_Lcd_Write_Char:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_SPI_Init:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_SPI_Ready:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_SPI_Read:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_ISR:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_main:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_CONTADOR:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?___lwdiv:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     ?___lwmod:	
   620                           ; 2 bytes @ 0x0
   621                           
   622  0070                     CONTADOR@n:	
   623                           ; 2 bytes @ 0x0
   624                           
   625  0070                     ___lwdiv@divisor:	
   626                           ; 2 bytes @ 0x0
   627                           
   628  0070                     ___lwmod@divisor:	
   629                           ; 2 bytes @ 0x0
   630                           
   631                           
   632                           ; 2 bytes @ 0x0
   633  0070                     	ds	2
   634  0072                     ??_CONTADOR:
   635  0072                     ___lwdiv@dividend:	
   636                           ; 1 bytes @ 0x2
   637                           
   638  0072                     ___lwmod@dividend:	
   639                           ; 2 bytes @ 0x2
   640                           
   641                           
   642                           ; 2 bytes @ 0x2
   643  0072                     	ds	2
   644  0074                     ??___lwdiv:
   645  0074                     ??___lwmod:	
   646                           ; 1 bytes @ 0x4
   647                           
   648                           
   649                           ; 1 bytes @ 0x4
   650  0074                     	ds	1
   651  0075                     ___lwmod@counter:
   652  0075                     ___lwdiv@quotient:	
   653                           ; 1 bytes @ 0x5
   654                           
   655                           
   656                           ; 2 bytes @ 0x5
   657  0075                     	ds	2
   658  0077                     ___lwdiv@counter:
   659                           
   660                           ; 1 bytes @ 0x7
   661  0077                     	ds	1
   662  0078                     ?_utoa:
   663  0078                     utoa@val:	
   664                           ; 1 bytes @ 0x8
   665                           
   666                           
   667                           ; 2 bytes @ 0x8
   668  0078                     	ds	2
   669  007A                     utoa@base:
   670                           
   671                           ; 2 bytes @ 0xA
   672  007A                     	ds	2
   673  007C                     ??_utoa:
   674                           
   675                           ; 1 bytes @ 0xC
   676  007C                     	ds	1
   677  007D                     ??_itoa:
   678                           
   679                           ; 1 bytes @ 0xD
   680  007D                     	ds	1
   681                           
   682                           	psect	cstackBANK0
   683  0020                     __pcstackBANK0:
   684  0020                     utoa@v:
   685                           
   686                           ; 2 bytes @ 0x0
   687  0020                     	ds	2
   688  0022                     utoa@c:
   689                           
   690                           ; 1 bytes @ 0x2
   691  0022                     	ds	1
   692  0023                     utoa@buf:
   693                           
   694                           ; 1 bytes @ 0x3
   695  0023                     	ds	1
   696  0024                     ?_itoa:
   697  0024                     itoa@val:	
   698                           ; 1 bytes @ 0x4
   699                           
   700                           
   701                           ; 2 bytes @ 0x4
   702  0024                     	ds	2
   703  0026                     itoa@base:
   704                           
   705                           ; 2 bytes @ 0x6
   706  0026                     	ds	3
   707  0029                     itoa@buf:
   708                           
   709                           ; 1 bytes @ 0x9
   710  0029                     	ds	1
   711  002A                     ??_ISR:
   712                           
   713                           ; 1 bytes @ 0xA
   714  002A                     	ds	5
   715  002F                     ??_setup:
   716  002F                     ??_SERIAL_Init:	
   717                           ; 1 bytes @ 0xF
   718                           
   719  002F                     ??_Lcd_Cmd:	
   720                           ; 1 bytes @ 0xF
   721                           
   722  002F                     ??_Lcd_Write_Char:	
   723                           ; 1 bytes @ 0xF
   724                           
   725  002F                     ??_SPI_Init:	
   726                           ; 1 bytes @ 0xF
   727                           
   728  002F                     ??_SPI_Ready:	
   729                           ; 1 bytes @ 0xF
   730                           
   731  002F                     ??_SPI_Read:	
   732                           ; 1 bytes @ 0xF
   733                           
   734  002F                     SPI_Ready@a:	
   735                           ; 1 bytes @ 0xF
   736                           
   737  002F                     SPI_Read@a:	
   738                           ; 1 bytes @ 0xF
   739                           
   740                           
   741                           ; 1 bytes @ 0xF
   742  002F                     	ds	2
   743  0031                     SPI_Init@a:
   744  0031                     Lcd_Cmd@a:	
   745                           ; 1 bytes @ 0x11
   746                           
   747  0031                     Lcd_Write_Char@a:	
   748                           ; 1 bytes @ 0x11
   749                           
   750                           
   751                           ; 1 bytes @ 0x11
   752  0031                     	ds	1
   753  0032                     ??_Lcd_Init:
   754  0032                     ?_Lcd_Write_String:	
   755                           ; 1 bytes @ 0x12
   756                           
   757  0032                     Lcd_Write_String@a:	
   758                           ; 1 bytes @ 0x12
   759                           
   760                           
   761                           ; 2 bytes @ 0x12
   762  0032                     	ds	2
   763  0034                     ??_Lcd_Write_String:
   764  0034                     ??_main:	
   765                           ; 1 bytes @ 0x14
   766                           
   767                           
   768                           ; 1 bytes @ 0x14
   769  0034                     	ds	1
   770                           
   771                           	psect	maintext
   772  0027                     __pmaintext:	
   773 ;;
   774 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   775 ;;
   776 ;; *************** function _main *****************
   777 ;; Defined at:
   778 ;;		line 79 in file "Master.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : B00/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       0       0       0       0
   793 ;;      Locals:         0       0       0       0       0
   794 ;;      Temps:          0       1       0       0       0
   795 ;;      Totals:         0       1       0       0       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels required when called:    6
   798 ;; This function calls:
   799 ;;		_Lcd_Cmd
   800 ;;		_Lcd_Init
   801 ;;		_Lcd_Write_Char
   802 ;;		_Lcd_Write_String
   803 ;;		_SERIAL_Init
   804 ;;		_SPI_Init
   805 ;;		_SPI_Read
   806 ;;		_SPI_Ready
   807 ;;		_setup
   808 ;; This function is called by:
   809 ;;		Startup code after reset
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _main
   815  0027                     _main:
   816  0027                     l1507:	
   817                           ;incstack = 0
   818                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   819                           
   820                           
   821                           ;Master.c: 81:     setup();
   822  0027  120A  118A  2324  120A  118A  	fcall	_setup
   823  002C                     l114:	
   824                           ;Master.c: 87:     while (1) {
   825                           
   826                           
   827                           ;Master.c: 88:         Lcd_Init();
   828  002C  120A  118A  2343  120A  118A  	fcall	_Lcd_Init
   829  0031                     l1509:
   830                           
   831                           ;Master.c: 89:         SPI_Init(0);
   832  0031  3000               	movlw	0
   833  0032  120A  118A  212C  120A  118A  	fcall	_SPI_Init
   834  0037                     l1511:
   835                           
   836                           ;Master.c: 90:         SERIAL_Init();
   837  0037  120A  118A  2362  120A  118A  	fcall	_SERIAL_Init
   838  003C                     l1513:
   839                           
   840                           ;Master.c: 92:         Lcd_Write_String("S1    S2    S3  ");
   841  003C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   842  003D  1283               	bcf	3,5	;RP0=0, select bank0
   843  003E  1303               	bcf	3,6	;RP1=0, select bank0
   844  003F  00B2               	movwf	Lcd_Write_String@a
   845  0040  3080               	movlw	128
   846  0041  00B3               	movwf	Lcd_Write_String@a+1
   847  0042  120A  118A  22AC  120A  118A  	fcall	_Lcd_Write_String
   848  0047                     l1515:
   849                           
   850                           ;Master.c: 94:         SPI_Ready(Ready);
   851  0047  3000               	movlw	0
   852  0048  120A  118A  2375  120A  118A  	fcall	_SPI_Ready
   853  004D                     l1517:
   854                           
   855                           ;Master.c: 96:         PORTB = 0;
   856  004D  1283               	bcf	3,5	;RP0=0, select bank0
   857  004E  1303               	bcf	3,6	;RP1=0, select bank0
   858  004F  0186               	clrf	6	;volatile
   859  0050                     l1519:
   860                           
   861                           ;Master.c: 97:         PORTBbits.RB0 = 1;
   862  0050  1406               	bsf	6,0	;volatile
   863  0051                     l1521:
   864                           
   865                           ;Master.c: 98:         SPI_Read(Slave1);
   866  0051  3000               	movlw	0
   867  0052  120A  118A  238C  120A  118A  	fcall	_SPI_Read
   868  0057                     l1523:
   869                           
   870                           ;Master.c: 99:         _delay((unsigned long)((1)*(4000000/4000.0)));
   871  0057  30C7               	movlw	199
   872  0058  1283               	bcf	3,5	;RP0=0, select bank0
   873  0059  1303               	bcf	3,6	;RP1=0, select bank0
   874  005A  00B4               	movwf	??_main
   875  005B                     u557:
   876  005B  285C               	nop2
   877  005C  0BB4               	decfsz	??_main,f
   878  005D  285B               	goto	u557
   879  005E  285F               	nop2
   880  005F                     l1525:
   881                           
   882                           ;Master.c: 100:         PORTBbits.RB0 = 0;
   883  005F  1283               	bcf	3,5	;RP0=0, select bank0
   884  0060  1303               	bcf	3,6	;RP1=0, select bank0
   885  0061  1006               	bcf	6,0	;volatile
   886  0062                     l1527:
   887                           
   888                           ;Master.c: 101:         PORTBbits.RB1 = 1;
   889  0062  1486               	bsf	6,1	;volatile
   890  0063                     l1529:
   891                           
   892                           ;Master.c: 102:         SPI_Read(Slave2);
   893  0063  3000               	movlw	0
   894  0064  120A  118A  238C  120A  118A  	fcall	_SPI_Read
   895  0069                     l1531:
   896                           
   897                           ;Master.c: 103:         _delay((unsigned long)((1)*(4000000/4000.0)));
   898  0069  30C7               	movlw	199
   899  006A  1283               	bcf	3,5	;RP0=0, select bank0
   900  006B  1303               	bcf	3,6	;RP1=0, select bank0
   901  006C  00B4               	movwf	??_main
   902  006D                     u567:
   903  006D  286E               	nop2
   904  006E  0BB4               	decfsz	??_main,f
   905  006F  286D               	goto	u567
   906  0070  2871               	nop2
   907  0071                     l1533:
   908                           
   909                           ;Master.c: 104:         PORTBbits.RB1 = 0;
   910  0071  1283               	bcf	3,5	;RP0=0, select bank0
   911  0072  1303               	bcf	3,6	;RP1=0, select bank0
   912  0073  1086               	bcf	6,1	;volatile
   913  0074                     l1535:
   914                           
   915                           ;Master.c: 105:         PORTBbits.RB2 = 1;
   916  0074  1506               	bsf	6,2	;volatile
   917  0075                     l1537:
   918                           
   919                           ;Master.c: 106:         SPI_Read(Slave3);
   920  0075  3000               	movlw	0
   921  0076  120A  118A  238C  120A  118A  	fcall	_SPI_Read
   922  007B                     l1539:
   923                           
   924                           ;Master.c: 108:         PORTB = 0;
   925  007B  1283               	bcf	3,5	;RP0=0, select bank0
   926  007C  1303               	bcf	3,6	;RP1=0, select bank0
   927  007D  0186               	clrf	6	;volatile
   928  007E                     l1541:
   929                           
   930                           ;Master.c: 110:         Lcd_Cmd(0xC0);
   931  007E  30C0               	movlw	192
   932  007F  120A  118A  21FF  120A  118A  	fcall	_Lcd_Cmd
   933  0084                     l1543:
   934                           
   935                           ;Master.c: 111:         Lcd_Write_Char(Slave1);
   936  0084  3000               	movlw	0
   937  0085  120A  118A  21BC  120A  118A  	fcall	_Lcd_Write_Char
   938  008A                     l1545:
   939                           
   940                           ;Master.c: 112:         Lcd_Write_String("L ");
   941  008A  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   942  008B  1283               	bcf	3,5	;RP0=0, select bank0
   943  008C  1303               	bcf	3,6	;RP1=0, select bank0
   944  008D  00B2               	movwf	Lcd_Write_String@a
   945  008E  3080               	movlw	128
   946  008F  00B3               	movwf	Lcd_Write_String@a+1
   947  0090  120A  118A  22AC  120A  118A  	fcall	_Lcd_Write_String
   948  0095                     l1547:
   949                           
   950                           ;Master.c: 113:         Lcd_Write_String(Slave2);
   951  0095  3000               	movlw	0
   952  0096  1283               	bcf	3,5	;RP0=0, select bank0
   953  0097  1303               	bcf	3,6	;RP1=0, select bank0
   954  0098  00B2               	movwf	Lcd_Write_String@a
   955  0099  3000               	movlw	0
   956  009A  00B3               	movwf	Lcd_Write_String@a+1
   957  009B  120A  118A  22AC  120A  118A  	fcall	_Lcd_Write_String
   958  00A0                     l1549:
   959                           
   960                           ;Master.c: 114:         Lcd_Write_String(" ");
   961  00A0  3010               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
   962  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   963  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   964  00A3  00B2               	movwf	Lcd_Write_String@a
   965  00A4  3080               	movlw	128
   966  00A5  00B3               	movwf	Lcd_Write_String@a+1
   967  00A6  120A  118A  22AC  120A  118A  	fcall	_Lcd_Write_String
   968  00AB                     l1551:
   969                           
   970                           ;Master.c: 115:         Lcd_Write_String(Slave3);
   971  00AB  3000               	movlw	0
   972  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   973  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   974  00AE  00B2               	movwf	Lcd_Write_String@a
   975  00AF  3000               	movlw	0
   976  00B0  00B3               	movwf	Lcd_Write_String@a+1
   977  00B1  120A  118A  22AC  120A  118A  	fcall	_Lcd_Write_String
   978  00B6  282C               	goto	l114
   979  00B7  120A  118A  2810   	ljmp	start
   980  00BA                     __end_of_main:
   981                           
   982                           	psect	text1
   983  0324                     __ptext1:	
   984 ;; *************** function _setup *****************
   985 ;; Defined at:
   986 ;;		line 123 in file "Master.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;                  1    wreg      void 
   993 ;; Registers used:
   994 ;;		wreg, status,2, status,0
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       0       0       0       0
  1002 ;;      Temps:          0       0       0       0       0
  1003 ;;      Totals:         0       0       0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    4
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _setup
  1016  0324                     _setup:
  1017  0324                     l1347:	
  1018                           ;incstack = 0
  1019                           ; Regs used in _setup: [wreg+status,2+status,0]
  1020                           
  1021                           
  1022                           ;Master.c: 124:     ANSEL = 0b00001001;
  1023  0324  3009               	movlw	9
  1024  0325  1683               	bsf	3,5	;RP0=1, select bank3
  1025  0326  1703               	bsf	3,6	;RP1=1, select bank3
  1026  0327  0088               	movwf	8	;volatile
  1027  0328                     l1349:
  1028                           
  1029                           ;Master.c: 125:     ANSELH= 0b00000000;
  1030  0328  0189               	clrf	9	;volatile
  1031  0329                     l1351:
  1032                           
  1033                           ;Master.c: 126:     TRISA = 0b00001001;
  1034  0329  3009               	movlw	9
  1035  032A  1683               	bsf	3,5	;RP0=1, select bank1
  1036  032B  1303               	bcf	3,6	;RP1=0, select bank1
  1037  032C  0085               	movwf	5	;volatile
  1038                           
  1039                           ;Master.c: 127:     TRISB = 0b00000000;
  1040  032D  0186               	clrf	6	;volatile
  1041                           
  1042                           ;Master.c: 128:     TRISC = 0b00000000;
  1043  032E  0187               	clrf	7	;volatile
  1044                           
  1045                           ;Master.c: 129:     TRISD = 0b00000000;
  1046  032F  0188               	clrf	8	;volatile
  1047                           
  1048                           ;Master.c: 130:     TRISE = 0;
  1049  0330  0189               	clrf	9	;volatile
  1050                           
  1051                           ;Master.c: 132:     PORTA = 0;
  1052  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0333  0185               	clrf	5	;volatile
  1055                           
  1056                           ;Master.c: 133:     PORTB = 0;
  1057  0334  0186               	clrf	6	;volatile
  1058                           
  1059                           ;Master.c: 134:     PORTC = 0;
  1060  0335  0187               	clrf	7	;volatile
  1061                           
  1062                           ;Master.c: 135:     PORTD = 0;
  1063  0336  0188               	clrf	8	;volatile
  1064                           
  1065                           ;Master.c: 136:     PORTE = 0;
  1066  0337  0189               	clrf	9	;volatile
  1067  0338                     l1353:
  1068                           
  1069                           ;Master.c: 138:     OSCCONbits.IRCF = 0b110;
  1070  0338  1683               	bsf	3,5	;RP0=1, select bank1
  1071  0339  1303               	bcf	3,6	;RP1=0, select bank1
  1072  033A  080F               	movf	15,w	;volatile
  1073  033B  398F               	andlw	-113
  1074  033C  3860               	iorlw	96
  1075  033D  008F               	movwf	15	;volatile
  1076  033E                     l1355:
  1077                           
  1078                           ;Master.c: 139:     OSCCONbits.OSTS= 0;
  1079  033E  118F               	bcf	15,3	;volatile
  1080  033F                     l1357:
  1081                           
  1082                           ;Master.c: 140:     OSCCONbits.HTS = 0;
  1083  033F  110F               	bcf	15,2	;volatile
  1084  0340                     l1359:
  1085                           
  1086                           ;Master.c: 141:     OSCCONbits.LTS = 0;
  1087  0340  108F               	bcf	15,1	;volatile
  1088  0341                     l1361:
  1089                           
  1090                           ;Master.c: 142:     OSCCONbits.SCS = 1;
  1091  0341  140F               	bsf	15,0	;volatile
  1092  0342                     l120:
  1093  0342  0008               	return
  1094  0343                     __end_of_setup:
  1095                           
  1096                           	psect	text2
  1097  0375                     __ptext2:	
  1098 ;; *************** function _SPI_Ready *****************
  1099 ;; Defined at:
  1100 ;;		line 56 in file "SPI.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  a               1    wreg     unsigned char 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  a               1   15[BANK0 ] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         0       0       0       0       0
  1115 ;;      Locals:         0       1       0       0       0
  1116 ;;      Temps:          0       0       0       0       0
  1117 ;;      Totals:         0       1       0       0       0
  1118 ;;Total ram usage:        1 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    4
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           
  1129                           ;psect for function _SPI_Ready
  1130  0375                     _SPI_Ready:
  1131  0375                     l1497:	
  1132                           ;incstack = 0
  1133                           ; Regs used in _SPI_Ready: [wreg]
  1134                           
  1135                           
  1136                           ;SPI.c: 57:     if (SSPSTATbits.BF == 1){
  1137  0375  1683               	bsf	3,5	;RP0=1, select bank1
  1138  0376  1303               	bcf	3,6	;RP1=0, select bank1
  1139  0377  1C14               	btfss	20,0	;volatile
  1140  0378  2B7A               	goto	u531
  1141  0379  2B7B               	goto	u530
  1142  037A                     u531:
  1143  037A  2B7C               	goto	l25
  1144  037B                     u530:
  1145  037B                     l1499:
  1146                           
  1147                           ;SPI.c: 59:     }
  1148  037B  2B80               	goto	l28
  1149  037C                     l25:	
  1150                           ;SPI.c: 60:     else if (SSPSTATbits.BF == 0){
  1151                           
  1152  037C  1814               	btfsc	20,0	;volatile
  1153  037D  2B7F               	goto	u541
  1154  037E  2B80               	goto	u540
  1155  037F                     u541:
  1156  037F  2B80               	goto	l28
  1157  0380                     u540:
  1158  0380                     l1501:
  1159  0380                     l28:
  1160  0380  0008               	return
  1161  0381                     __end_of_SPI_Ready:
  1162                           
  1163                           	psect	text3
  1164  038C                     __ptext3:	
  1165 ;; *************** function _SPI_Read *****************
  1166 ;; Defined at:
  1167 ;;		line 65 in file "SPI.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  a               1    wreg     unsigned char 
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;  a               1   15[BANK0 ] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         0       0       0       0       0
  1182 ;;      Locals:         0       1       0       0       0
  1183 ;;      Temps:          0       0       0       0       0
  1184 ;;      Totals:         0       1       0       0       0
  1185 ;;Total ram usage:        1 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    4
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _SPI_Read
  1197  038C                     _SPI_Read:
  1198  038C                     l1503:	
  1199                           ;incstack = 0
  1200                           ; Regs used in _SPI_Read: [wreg]
  1201                           
  1202  038C  1283               	bcf	3,5	;RP0=0, select bank0
  1203  038D  1303               	bcf	3,6	;RP1=0, select bank0
  1204  038E  0813               	movf	19,w	;volatile
  1205  038F                     l1505:
  1206                           
  1207                           ;SPI.c: 67:     SSPIF = 0;
  1208  038F  118C               	bcf	12,3	;volatile
  1209  0390                     l31:
  1210  0390  0008               	return
  1211  0391                     __end_of_SPI_Read:
  1212                           
  1213                           	psect	text4
  1214  012C                     __ptext4:	
  1215 ;; *************** function _SPI_Init *****************
  1216 ;; Defined at:
  1217 ;;		line 8 in file "SPI.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  a               1    wreg     unsigned char 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  a               1   17[BANK0 ] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         0       0       0       0       0
  1232 ;;      Locals:         0       1       0       0       0
  1233 ;;      Temps:          0       2       0       0       0
  1234 ;;      Totals:         0       3       0       0       0
  1235 ;;Total ram usage:        3 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    4
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_main
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           
  1246                           ;psect for function _SPI_Init
  1247  012C                     _SPI_Init:
  1248                           
  1249                           ;incstack = 0
  1250                           ; Regs used in _SPI_Init: [wreg-fsr0h+status,2+status,0]
  1251                           ;SPI_Init@a stored from wreg
  1252  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1253  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1254  012E  00B1               	movwf	SPI_Init@a
  1255  012F                     l1301:
  1256                           
  1257                           ;SPI.c: 9:     switch(a){
  1258  012F  2961               	goto	l1311
  1259  0130                     l14:	
  1260                           ;SPI.c: 10:         case 0:
  1261                           
  1262                           
  1263                           ;SPI.c: 11:             TRISCbits.TRISC5 = 0;
  1264  0130  1683               	bsf	3,5	;RP0=1, select bank1
  1265  0131  1303               	bcf	3,6	;RP1=0, select bank1
  1266  0132  1287               	bcf	7,5	;volatile
  1267                           
  1268                           ;SPI.c: 12:             TRISCbits.TRISC3 = 0;
  1269  0133  1187               	bcf	7,3	;volatile
  1270                           
  1271                           ;SPI.c: 13:             SSPSTATbits.SMP = 0;
  1272  0134  1394               	bcf	20,7	;volatile
  1273                           
  1274                           ;SPI.c: 14:             SSPSTATbits.CKE = 0;
  1275  0135  1314               	bcf	20,6	;volatile
  1276                           
  1277                           ;SPI.c: 15:             SSPSTATbits.BF = 0;
  1278  0136  1014               	bcf	20,0	;volatile
  1279  0137                     l1303:
  1280                           
  1281                           ;SPI.c: 16:             SSPCON = 0b00100000;
  1282  0137  3020               	movlw	32
  1283  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1285  013A  0094               	movwf	20	;volatile
  1286                           
  1287                           ;SPI.c: 19:             break;
  1288  013B  2977               	goto	l19
  1289  013C                     l16:	
  1290                           ;SPI.c: 20:         case 1:
  1291                           
  1292                           
  1293                           ;SPI.c: 21:             TRISCbits.TRISC5 = 0;
  1294  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1295  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1296  013E  1287               	bcf	7,5	;volatile
  1297                           
  1298                           ;SPI.c: 22:             TRISCbits.TRISC3 = 0;
  1299  013F  1187               	bcf	7,3	;volatile
  1300                           
  1301                           ;SPI.c: 23:             SSPSTATbits.SMP = 0;
  1302  0140  1394               	bcf	20,7	;volatile
  1303                           
  1304                           ;SPI.c: 24:             SSPSTATbits.CKE = 0;
  1305  0141  1314               	bcf	20,6	;volatile
  1306                           
  1307                           ;SPI.c: 25:             SSPSTATbits.BF = 0;
  1308  0142  1014               	bcf	20,0	;volatile
  1309  0143                     l1305:
  1310                           
  1311                           ;SPI.c: 26:             SSPCON = 0b00100001;
  1312  0143  3021               	movlw	33
  1313  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0146  0094               	movwf	20	;volatile
  1316                           
  1317                           ;SPI.c: 29:             break;
  1318  0147  2977               	goto	l19
  1319  0148                     l17:	
  1320                           ;SPI.c: 30:         case 2:
  1321                           
  1322                           
  1323                           ;SPI.c: 31:             TRISCbits.TRISC5 = 0;
  1324  0148  1683               	bsf	3,5	;RP0=1, select bank1
  1325  0149  1303               	bcf	3,6	;RP1=0, select bank1
  1326  014A  1287               	bcf	7,5	;volatile
  1327                           
  1328                           ;SPI.c: 32:             TRISCbits.TRISC3 = 0;
  1329  014B  1187               	bcf	7,3	;volatile
  1330                           
  1331                           ;SPI.c: 33:             SSPSTATbits.SMP = 0;
  1332  014C  1394               	bcf	20,7	;volatile
  1333                           
  1334                           ;SPI.c: 34:             SSPSTATbits.CKE = 0;
  1335  014D  1314               	bcf	20,6	;volatile
  1336                           
  1337                           ;SPI.c: 35:             SSPSTATbits.BF = 0;
  1338  014E  1014               	bcf	20,0	;volatile
  1339  014F                     l1307:
  1340                           
  1341                           ;SPI.c: 36:             SSPCON = 0b00100010;
  1342  014F  3022               	movlw	34
  1343  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0152  0094               	movwf	20	;volatile
  1346                           
  1347                           ;SPI.c: 39:             break;
  1348  0153  2977               	goto	l19
  1349  0154                     l18:	
  1350                           ;SPI.c: 40:         case 3:
  1351                           
  1352                           
  1353                           ;SPI.c: 41:             TRISCbits.TRISC5 = 0;
  1354  0154  1683               	bsf	3,5	;RP0=1, select bank1
  1355  0155  1303               	bcf	3,6	;RP1=0, select bank1
  1356  0156  1287               	bcf	7,5	;volatile
  1357                           
  1358                           ;SPI.c: 42:             TRISCbits.TRISC3 = 1;
  1359  0157  1587               	bsf	7,3	;volatile
  1360                           
  1361                           ;SPI.c: 43:             TRISCbits.TRISC4 = 1;
  1362  0158  1607               	bsf	7,4	;volatile
  1363                           
  1364                           ;SPI.c: 44:             SSPSTATbits.SMP = 0;
  1365  0159  1394               	bcf	20,7	;volatile
  1366                           
  1367                           ;SPI.c: 45:             SSPSTATbits.CKE = 0;
  1368  015A  1314               	bcf	20,6	;volatile
  1369                           
  1370                           ;SPI.c: 46:             SSPSTATbits.BF = 0;
  1371  015B  1014               	bcf	20,0	;volatile
  1372  015C                     l1309:
  1373                           
  1374                           ;SPI.c: 47:             SSPCON = 0b00100100;
  1375  015C  3024               	movlw	36
  1376  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1377  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1378  015F  0094               	movwf	20	;volatile
  1379                           
  1380                           ;SPI.c: 48:     }
  1381  0160  2977               	goto	l19
  1382  0161                     l1311:
  1383  0161  0831               	movf	SPI_Init@a,w
  1384  0162  00AF               	movwf	??_SPI_Init
  1385  0163  01B0               	clrf	??_SPI_Init+1
  1386                           
  1387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1388                           ; Switch size 1, requested type "simple"
  1389                           ; Number of cases is 1, Range of values is 0 to 0
  1390                           ; switch strategies available:
  1391                           ; Name         Instructions Cycles
  1392                           ; simple_byte            4     3 (average)
  1393                           ; direct_byte           11     8 (fixed)
  1394                           ; jumptable            260     6 (fixed)
  1395                           ;	Chosen strategy is simple_byte
  1396  0164  0830               	movf	??_SPI_Init+1,w
  1397  0165  3A00               	xorlw	0	; case 0
  1398  0166  1903               	skipnz
  1399  0167  2969               	goto	l1583
  1400  0168  2977               	goto	l19
  1401  0169                     l1583:
  1402                           
  1403                           ; Switch size 1, requested type "simple"
  1404                           ; Number of cases is 4, Range of values is 0 to 3
  1405                           ; switch strategies available:
  1406                           ; Name         Instructions Cycles
  1407                           ; simple_byte           13     7 (average)
  1408                           ; direct_byte           20     8 (fixed)
  1409                           ; jumptable            260     6 (fixed)
  1410                           ;	Chosen strategy is simple_byte
  1411  0169  082F               	movf	??_SPI_Init,w
  1412  016A  3A00               	xorlw	0	; case 0
  1413  016B  1903               	skipnz
  1414  016C  2930               	goto	l14
  1415  016D  3A01               	xorlw	1	; case 1
  1416  016E  1903               	skipnz
  1417  016F  293C               	goto	l16
  1418  0170  3A03               	xorlw	3	; case 2
  1419  0171  1903               	skipnz
  1420  0172  2948               	goto	l17
  1421  0173  3A01               	xorlw	1	; case 3
  1422  0174  1903               	skipnz
  1423  0175  2954               	goto	l18
  1424  0176  2977               	goto	l19
  1425  0177                     l19:
  1426  0177  0008               	return
  1427  0178                     __end_of_SPI_Init:
  1428                           
  1429                           	psect	text5
  1430  0362                     __ptext5:	
  1431 ;; *************** function _SERIAL_Init *****************
  1432 ;; Defined at:
  1433 ;;		line 13 in file "UART.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    4
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           
  1462                           ;psect for function _SERIAL_Init
  1463  0362                     _SERIAL_Init:
  1464  0362                     l1365:	
  1465                           ;incstack = 0
  1466                           ; Regs used in _SERIAL_Init: [wreg]
  1467                           
  1468                           
  1469                           ;UART.c: 14:     SPBRG = 25;
  1470  0362  3019               	movlw	25
  1471  0363  1683               	bsf	3,5	;RP0=1, select bank1
  1472  0364  1303               	bcf	3,6	;RP1=0, select bank1
  1473  0365  0099               	movwf	25	;volatile
  1474  0366                     l1367:
  1475                           
  1476                           ;UART.c: 16:     TXSTAbits.BRGH = 1;
  1477  0366  1518               	bsf	24,2	;volatile
  1478  0367                     l1369:
  1479                           
  1480                           ;UART.c: 17:     TXSTAbits.TXEN = 1;
  1481  0367  1698               	bsf	24,5	;volatile
  1482  0368                     l1371:
  1483                           
  1484                           ;UART.c: 18:     TXSTAbits.SYNC = 0;
  1485  0368  1218               	bcf	24,4	;volatile
  1486  0369                     l1373:
  1487                           
  1488                           ;UART.c: 19:     TXSTAbits.TX9 = 0;
  1489  0369  1318               	bcf	24,6	;volatile
  1490  036A                     l1375:
  1491                           
  1492                           ;UART.c: 21:     RCSTAbits.CREN = 1;
  1493  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1494  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1495  036C  1618               	bsf	24,4	;volatile
  1496  036D                     l1377:
  1497                           
  1498                           ;UART.c: 22:     RCSTAbits.SPEN = 1;
  1499  036D  1798               	bsf	24,7	;volatile
  1500  036E                     l1379:
  1501                           
  1502                           ;UART.c: 23:     RCSTAbits.RX9 = 0;
  1503  036E  1318               	bcf	24,6	;volatile
  1504  036F                     l1381:
  1505                           
  1506                           ;UART.c: 25:     PIE1bits.RCIE = 1;
  1507  036F  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0370  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0371  168C               	bsf	12,5	;volatile
  1510  0372                     l1383:
  1511                           
  1512                           ;UART.c: 26:     INTCONbits.PEIE = 1;
  1513  0372  170B               	bsf	11,6	;volatile
  1514  0373                     l1385:
  1515                           
  1516                           ;UART.c: 27:     INTCONbits.GIE = 1;
  1517  0373  178B               	bsf	11,7	;volatile
  1518  0374                     l192:
  1519  0374  0008               	return
  1520  0375                     __end_of_SERIAL_Init:
  1521                           
  1522                           	psect	text6
  1523  02AC                     __ptext6:	
  1524 ;; *************** function _Lcd_Write_String *****************
  1525 ;; Defined at:
  1526 ;;		line 83 in file "LCD.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  a               2   18[BANK0 ] PTR unsigned char 
  1529 ;;		 -> NULL(0), STR_3(2), RAM(512), STR_2(3), 
  1530 ;;		 -> STR_1(17), 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       2       0       0       0
  1543 ;;      Locals:         0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0
  1545 ;;      Totals:         0       2       0       0       0
  1546 ;;Total ram usage:        2 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    5
  1549 ;; This function calls:
  1550 ;;		_Lcd_Write_Char
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           
  1557                           ;psect for function _Lcd_Write_String
  1558  02AC                     _Lcd_Write_String:
  1559  02AC                     l1387:	
  1560                           ;incstack = 0
  1561                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1562                           
  1563                           
  1564                           ;LCD.c: 84:     while(*a != 0)
  1565  02AC  2AC3               	goto	l1393
  1566  02AD                     l1389:
  1567                           
  1568                           ;LCD.c: 85:         Lcd_Write_Char(*a++);
  1569  02AD  0833               	movf	Lcd_Write_String@a+1,w
  1570  02AE  00FF               	movwf	btemp+1
  1571  02AF  0832               	movf	Lcd_Write_String@a,w
  1572  02B0  0084               	movwf	4
  1573  02B1  120A  118A  2300  120A  118A  	fcall	stringtab
  1574  02B6  120A  118A  21BC  120A  118A  	fcall	_Lcd_Write_Char
  1575  02BB                     l1391:
  1576  02BB  3001               	movlw	1
  1577  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1578  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1579  02BE  07B2               	addwf	Lcd_Write_String@a,f
  1580  02BF  1803               	skipnc
  1581  02C0  0AB3               	incf	Lcd_Write_String@a+1,f
  1582  02C1  3000               	movlw	0
  1583  02C2  07B3               	addwf	Lcd_Write_String@a+1,f
  1584  02C3                     l1393:
  1585                           
  1586                           ;LCD.c: 84:     while(*a != 0)
  1587  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  1588  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  1589  02C5  0833               	movf	Lcd_Write_String@a+1,w
  1590  02C6  00FF               	movwf	btemp+1
  1591  02C7  0832               	movf	Lcd_Write_String@a,w
  1592  02C8  0084               	movwf	4
  1593  02C9  120A  118A  2300  120A  118A  	fcall	stringtab
  1594  02CE  3A00               	xorlw	0
  1595  02CF  1D03               	skipz
  1596  02D0  2AD2               	goto	u491
  1597  02D1  2AD3               	goto	u490
  1598  02D2                     u491:
  1599  02D2  2AAD               	goto	l1389
  1600  02D3                     u490:
  1601  02D3                     l158:
  1602  02D3  0008               	return
  1603  02D4                     __end_of_Lcd_Write_String:
  1604                           
  1605                           	psect	text7
  1606  01BC                     __ptext7:	
  1607 ;; *************** function _Lcd_Write_Char *****************
  1608 ;; Defined at:
  1609 ;;		line 60 in file "LCD.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  a               1    wreg     unsigned char 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  a               1   17[BANK0 ] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       0       0       0       0
  1624 ;;      Locals:         0       1       0       0       0
  1625 ;;      Temps:          0       2       0       0       0
  1626 ;;      Totals:         0       3       0       0       0
  1627 ;;Total ram usage:        3 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    4
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;;		_Lcd_Write_String
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function _Lcd_Write_Char
  1640  01BC                     _Lcd_Write_Char:
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0]
  1644                           ;Lcd_Write_Char@a stored from wreg
  1645  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1646  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1647  01BE  00B1               	movwf	Lcd_Write_Char@a
  1648  01BF                     l1241:
  1649                           
  1650                           ;LCD.c: 61:     PORTD = 0xFF;
  1651  01BF  30FF               	movlw	255
  1652  01C0  0088               	movwf	8	;volatile
  1653  01C1                     l1243:
  1654                           
  1655                           ;LCD.c: 62:     PORTD &= 0x80;
  1656  01C1  3080               	movlw	128
  1657  01C2  00AF               	movwf	??_Lcd_Write_Char
  1658  01C3  082F               	movf	??_Lcd_Write_Char,w
  1659  01C4  0588               	andwf	8,f	;volatile
  1660  01C5                     l1245:
  1661                           
  1662                           ;LCD.c: 63:     RE0 = 0;
  1663  01C5  1009               	bcf	9,0	;volatile
  1664  01C6                     l1247:
  1665                           
  1666                           ;LCD.c: 64:     RE1 = 1;
  1667  01C6  1489               	bsf	9,1	;volatile
  1668  01C7                     l1249:
  1669                           
  1670                           ;LCD.c: 65:     RE2 = 0;
  1671  01C7  1109               	bcf	9,2	;volatile
  1672  01C8                     l1251:
  1673                           
  1674                           ;LCD.c: 66:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1675  01C8  3027               	movlw	39
  1676  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1677  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1678  01CB  00B0               	movwf	??_Lcd_Write_Char+1
  1679  01CC  30F4               	movlw	244
  1680  01CD  00AF               	movwf	??_Lcd_Write_Char
  1681  01CE                     u577:
  1682  01CE  0BAF               	decfsz	??_Lcd_Write_Char,f
  1683  01CF  29CE               	goto	u577
  1684  01D0  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1685  01D1  29CE               	goto	u577
  1686  01D2  0000               	nop
  1687  01D3                     l1253:
  1688                           
  1689                           ;LCD.c: 67:     RE2 = 1;
  1690  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1691  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1692  01D5  1509               	bsf	9,2	;volatile
  1693                           
  1694                           ;LCD.c: 68:     if (PORTD == 0x80){
  1695  01D6  3080               	movlw	128
  1696  01D7  0608               	xorwf	8,w	;volatile
  1697  01D8  1D03               	btfss	3,2
  1698  01D9  29DB               	goto	u421
  1699  01DA  29DC               	goto	u420
  1700  01DB                     u421:
  1701  01DB  29EB               	goto	l1261
  1702  01DC                     u420:
  1703  01DC                     l1255:
  1704                           
  1705                           ;LCD.c: 69:     RE2 = 0;
  1706  01DC  1109               	bcf	9,2	;volatile
  1707  01DD                     l1257:
  1708                           
  1709                           ;LCD.c: 70:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1710  01DD  3027               	movlw	39
  1711  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1712  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1713  01E0  00B0               	movwf	??_Lcd_Write_Char+1
  1714  01E1  30F4               	movlw	244
  1715  01E2  00AF               	movwf	??_Lcd_Write_Char
  1716  01E3                     u587:
  1717  01E3  0BAF               	decfsz	??_Lcd_Write_Char,f
  1718  01E4  29E3               	goto	u587
  1719  01E5  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1720  01E6  29E3               	goto	u587
  1721  01E7  0000               	nop
  1722  01E8                     l1259:
  1723                           
  1724                           ;LCD.c: 71:     RE2 = 1;
  1725  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1726  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1727  01EA  1509               	bsf	9,2	;volatile
  1728  01EB                     l1261:	
  1729                           ;LCD.c: 72:     }
  1730                           
  1731                           
  1732                           ;LCD.c: 75:     PORTD = a;
  1733  01EB  0831               	movf	Lcd_Write_Char@a,w
  1734  01EC  0088               	movwf	8	;volatile
  1735  01ED                     l1263:
  1736                           
  1737                           ;LCD.c: 76:     RE0 = 1;
  1738  01ED  1409               	bsf	9,0	;volatile
  1739  01EE                     l1265:
  1740                           
  1741                           ;LCD.c: 77:     RE1 = 0;
  1742  01EE  1089               	bcf	9,1	;volatile
  1743  01EF                     l1267:
  1744                           
  1745                           ;LCD.c: 78:     RE2 = 1;
  1746  01EF  1509               	bsf	9,2	;volatile
  1747                           
  1748                           ;LCD.c: 79:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1749  01F0  3027               	movlw	39
  1750  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1751  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1752  01F3  00B0               	movwf	??_Lcd_Write_Char+1
  1753  01F4  30F4               	movlw	244
  1754  01F5  00AF               	movwf	??_Lcd_Write_Char
  1755  01F6                     u597:
  1756  01F6  0BAF               	decfsz	??_Lcd_Write_Char,f
  1757  01F7  29F6               	goto	u597
  1758  01F8  0BB0               	decfsz	??_Lcd_Write_Char+1,f
  1759  01F9  29F6               	goto	u597
  1760  01FA  0000               	nop
  1761  01FB                     l1269:
  1762                           
  1763                           ;LCD.c: 80:     RE2 = 0;
  1764  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1765  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1766  01FD  1109               	bcf	9,2	;volatile
  1767  01FE                     l152:
  1768  01FE  0008               	return
  1769  01FF                     __end_of_Lcd_Write_Char:
  1770                           
  1771                           	psect	text8
  1772  0343                     __ptext8:	
  1773 ;; *************** function _Lcd_Init *****************
  1774 ;; Defined at:
  1775 ;;		line 52 in file "LCD.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, status,2, status,0, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0
  1791 ;;      Temps:          0       0       0       0       0
  1792 ;;      Totals:         0       0       0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    5
  1796 ;; This function calls:
  1797 ;;		_Lcd_Cmd
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           
  1804                           ;psect for function _Lcd_Init
  1805  0343                     _Lcd_Init:
  1806  0343                     l1363:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1809                           
  1810                           
  1811                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  1812  0343  3038               	movlw	56
  1813  0344  120A  118A  21FF  120A  118A  	fcall	_Lcd_Cmd
  1814                           
  1815                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  1816  0349  300C               	movlw	12
  1817  034A  120A  118A  21FF  120A  118A  	fcall	_Lcd_Cmd
  1818                           
  1819                           ;LCD.c: 55:     Lcd_Cmd(0x01);
  1820  034F  3001               	movlw	1
  1821  0350  120A  118A  21FF  120A  118A  	fcall	_Lcd_Cmd
  1822                           
  1823                           ;LCD.c: 56:     Lcd_Cmd(0x06);
  1824  0355  3006               	movlw	6
  1825  0356  120A  118A  21FF  120A  118A  	fcall	_Lcd_Cmd
  1826                           
  1827                           ;LCD.c: 57:     Lcd_Cmd(0x80);
  1828  035B  3080               	movlw	128
  1829  035C  120A  118A  21FF  120A  118A  	fcall	_Lcd_Cmd
  1830  0361                     l147:
  1831  0361  0008               	return
  1832  0362                     __end_of_Lcd_Init:
  1833                           
  1834                           	psect	text9
  1835  01FF                     __ptext9:	
  1836 ;; *************** function _Lcd_Cmd *****************
  1837 ;; Defined at:
  1838 ;;		line 13 in file "LCD.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  a               1    wreg     unsigned char 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  a               1   17[BANK0 ] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         0       0       0       0       0
  1853 ;;      Locals:         0       1       0       0       0
  1854 ;;      Temps:          0       2       0       0       0
  1855 ;;      Totals:         0       3       0       0       0
  1856 ;;Total ram usage:        3 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    4
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;;		_Lcd_Init
  1864 ;;		_Lcd_Clear
  1865 ;;		_Lcd_Set_Cursor
  1866 ;;		_Lcd_Shift_Right
  1867 ;;		_Lcd_Shift_Left
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           
  1872                           ;psect for function _Lcd_Cmd
  1873  01FF                     _Lcd_Cmd:
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  1877                           ;Lcd_Cmd@a stored from wreg
  1878  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0201  00B1               	movwf	Lcd_Cmd@a
  1881  0202                     l1211:
  1882                           
  1883                           ;LCD.c: 14:  PORTD = 0xFF;
  1884  0202  30FF               	movlw	255
  1885  0203  0088               	movwf	8	;volatile
  1886  0204                     l1213:
  1887                           
  1888                           ;LCD.c: 15:     PORTD &= 0x80;
  1889  0204  3080               	movlw	128
  1890  0205  00AF               	movwf	??_Lcd_Cmd
  1891  0206  082F               	movf	??_Lcd_Cmd,w
  1892  0207  0588               	andwf	8,f	;volatile
  1893  0208                     l1215:
  1894                           
  1895                           ;LCD.c: 16:     RE0 = 0;
  1896  0208  1009               	bcf	9,0	;volatile
  1897  0209                     l1217:
  1898                           
  1899                           ;LCD.c: 17:     RE1 = 1;
  1900  0209  1489               	bsf	9,1	;volatile
  1901  020A                     l1219:
  1902                           
  1903                           ;LCD.c: 18:     RE2 = 0;
  1904  020A  1109               	bcf	9,2	;volatile
  1905  020B                     l1221:
  1906                           
  1907                           ;LCD.c: 19:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1908  020B  3027               	movlw	39
  1909  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1910  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1911  020E  00B0               	movwf	??_Lcd_Cmd+1
  1912  020F  30F4               	movlw	244
  1913  0210  00AF               	movwf	??_Lcd_Cmd
  1914  0211                     u607:
  1915  0211  0BAF               	decfsz	??_Lcd_Cmd,f
  1916  0212  2A11               	goto	u607
  1917  0213  0BB0               	decfsz	??_Lcd_Cmd+1,f
  1918  0214  2A11               	goto	u607
  1919  0215  0000               	nop
  1920  0216                     l1223:
  1921                           
  1922                           ;LCD.c: 20:     RE2 = 1;
  1923  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0218  1509               	bsf	9,2	;volatile
  1926                           
  1927                           ;LCD.c: 21:     if (PORTD == 0x80){
  1928  0219  3080               	movlw	128
  1929  021A  0608               	xorwf	8,w	;volatile
  1930  021B  1D03               	btfss	3,2
  1931  021C  2A1E               	goto	u411
  1932  021D  2A1F               	goto	u410
  1933  021E                     u411:
  1934  021E  2A2E               	goto	l1231
  1935  021F                     u410:
  1936  021F                     l1225:
  1937                           
  1938                           ;LCD.c: 22:     RE2 = 0;
  1939  021F  1109               	bcf	9,2	;volatile
  1940  0220                     l1227:
  1941                           
  1942                           ;LCD.c: 23:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1943  0220  3027               	movlw	39
  1944  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0223  00B0               	movwf	??_Lcd_Cmd+1
  1947  0224  30F4               	movlw	244
  1948  0225  00AF               	movwf	??_Lcd_Cmd
  1949  0226                     u617:
  1950  0226  0BAF               	decfsz	??_Lcd_Cmd,f
  1951  0227  2A26               	goto	u617
  1952  0228  0BB0               	decfsz	??_Lcd_Cmd+1,f
  1953  0229  2A26               	goto	u617
  1954  022A  0000               	nop
  1955  022B                     l1229:
  1956                           
  1957                           ;LCD.c: 24:     RE2 = 1;
  1958  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1959  022C  1303               	bcf	3,6	;RP1=0, select bank0
  1960  022D  1509               	bsf	9,2	;volatile
  1961  022E                     l1231:	
  1962                           ;LCD.c: 25:     }
  1963                           
  1964                           
  1965                           ;LCD.c: 28:     PORTD = a;
  1966  022E  0831               	movf	Lcd_Cmd@a,w
  1967  022F  0088               	movwf	8	;volatile
  1968  0230                     l1233:
  1969                           
  1970                           ;LCD.c: 29:     RE0 = 0;
  1971  0230  1009               	bcf	9,0	;volatile
  1972  0231                     l1235:
  1973                           
  1974                           ;LCD.c: 30:     RE1 = 0;
  1975  0231  1089               	bcf	9,1	;volatile
  1976  0232                     l1237:
  1977                           
  1978                           ;LCD.c: 31:     RE2 = 1;
  1979  0232  1509               	bsf	9,2	;volatile
  1980                           
  1981                           ;LCD.c: 32:     _delay((unsigned long)((30)*(4000000/4000.0)));
  1982  0233  3027               	movlw	39
  1983  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0236  00B0               	movwf	??_Lcd_Cmd+1
  1986  0237  30F4               	movlw	244
  1987  0238  00AF               	movwf	??_Lcd_Cmd
  1988  0239                     u627:
  1989  0239  0BAF               	decfsz	??_Lcd_Cmd,f
  1990  023A  2A39               	goto	u627
  1991  023B  0BB0               	decfsz	??_Lcd_Cmd+1,f
  1992  023C  2A39               	goto	u627
  1993  023D  0000               	nop
  1994  023E                     l1239:
  1995                           
  1996                           ;LCD.c: 33:     RE2 = 0;
  1997  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1998  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0240  1109               	bcf	9,2	;volatile
  2000  0241                     l135:
  2001  0241  0008               	return
  2002  0242                     __end_of_Lcd_Cmd:
  2003                           
  2004                           	psect	text10
  2005  027C                     __ptext10:	
  2006 ;; *************** function _ISR *****************
  2007 ;; Defined at:
  2008 ;;		line 70 in file "Master.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0
  2024 ;;      Temps:          0       5       0       0       0
  2025 ;;      Totals:         0       5       0       0       0
  2026 ;;Total ram usage:        5 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    3
  2029 ;; This function calls:
  2030 ;;		_CONTADOR
  2031 ;;		_itoa
  2032 ;; This function is called by:
  2033 ;;		Interrupt level 1
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           
  2038                           ;psect for function _ISR
  2039  027C                     _ISR:
  2040  027C                     i1l1395:
  2041                           
  2042                           ;Master.c: 71:     if (RCIF==1){
  2043  027C  1E8C               	btfss	12,5	;volatile
  2044  027D  2A7F               	goto	u50_21
  2045  027E  2A80               	goto	u50_20
  2046  027F                     u50_21:
  2047  027F  2AA3               	goto	i1l109
  2048  0280                     u50_20:
  2049  0280                     i1l1397:
  2050                           
  2051                           ;Master.c: 72:         O = CONTADOR ((int)RCREG);
  2052  0280  081A               	movf	26,w	;volatile
  2053  0281  00AA               	movwf	??_ISR
  2054  0282  01AB               	clrf	??_ISR+1
  2055  0283  082A               	movf	??_ISR,w
  2056  0284  00F0               	movwf	CONTADOR@n
  2057  0285  082B               	movf	??_ISR+1,w
  2058  0286  00F1               	movwf	CONTADOR@n+1
  2059  0287  120A  118A  2381  120A  118A  	fcall	_CONTADOR
  2060  028C  0871               	movf	?_CONTADOR+1,w
  2061  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2062  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2063  028F  00B8               	movwf	_O+1
  2064  0290  0870               	movf	?_CONTADOR,w
  2065  0291  00B7               	movwf	_O
  2066  0292                     i1l1399:
  2067                           
  2068                           ;Master.c: 73:         itoa(COMPARE,O,10);
  2069  0292  0838               	movf	_O+1,w
  2070  0293  00A5               	movwf	itoa@val+1
  2071  0294  0837               	movf	_O,w
  2072  0295  00A4               	movwf	itoa@val
  2073  0296  300A               	movlw	10
  2074  0297  00A6               	movwf	itoa@base
  2075  0298  3000               	movlw	0
  2076  0299  00A7               	movwf	itoa@base+1
  2077  029A  303E               	movlw	(low (_COMPARE| 0))& (0+255)
  2078  029B  120A  118A  22D4  120A  118A  	fcall	_itoa
  2079  02A0                     i1l1401:
  2080                           
  2081                           ;Master.c: 74:         RCIF=0;
  2082  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2083  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2084  02A2  128C               	bcf	12,5	;volatile
  2085  02A3                     i1l109:
  2086  02A3  082E               	movf	??_ISR+4,w
  2087  02A4  008A               	movwf	10
  2088  02A5  082D               	movf	??_ISR+3,w
  2089  02A6  0084               	movwf	4
  2090  02A7  0E2C               	swapf	??_ISR+2,w
  2091  02A8  0083               	movwf	3
  2092  02A9  0EFE               	swapf	btemp,f
  2093  02AA  0E7E               	swapf	btemp,w
  2094  02AB  0009               	retfie
  2095  02AC                     __end_of_ISR:
  2096                           
  2097                           	psect	intentry
  2098  0004                     __pintentry:	
  2099                           ;incstack = 0
  2100                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2101                           
  2102  0004                     interrupt_function:
  2103  007E                     saved_w	set	btemp
  2104  0004  00FE               	movwf	btemp
  2105  0005  0E03               	swapf	3,w
  2106  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0008  00AC               	movwf	??_ISR+2
  2109  0009  0804               	movf	4,w
  2110  000A  00AD               	movwf	??_ISR+3
  2111  000B  080A               	movf	10,w
  2112  000C  00AE               	movwf	??_ISR+4
  2113  000D  120A  118A  2A7C   	ljmp	_ISR
  2114                           
  2115                           	psect	text11
  2116  02D4                     __ptext11:	
  2117 ;; *************** function _itoa *****************
  2118 ;; Defined at:
  2119 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  buf             1    wreg     PTR unsigned char 
  2122 ;;		 -> COMPARE(5), 
  2123 ;;  val             2    4[BANK0 ] int 
  2124 ;;  base            2    6[BANK0 ] int 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2127 ;;		 -> COMPARE(5), 
  2128 ;;  cp              1    0        PTR unsigned char 
  2129 ;;		 -> COMPARE(5), 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      PTR unsigned char 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2139 ;;      Params:         0       4       0       0       0
  2140 ;;      Locals:         0       2       0       0       0
  2141 ;;      Temps:          1       0       0       0       0
  2142 ;;      Totals:         1       6       0       0       0
  2143 ;;Total ram usage:        7 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    2
  2146 ;; This function calls:
  2147 ;;		_utoa
  2148 ;; This function is called by:
  2149 ;;		_ISR
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           
  2154                           ;psect for function _itoa
  2155  02D4                     _itoa:
  2156                           
  2157                           ;incstack = 0
  2158                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2159                           ;itoa@buf stored from wreg
  2160  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2161  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2162  02D6  00A9               	movwf	itoa@buf
  2163  02D7                     i1l1333:
  2164  02D7                     i1l1335:
  2165  02D7  1FA5               	btfss	itoa@val+1,7
  2166  02D8  2ADA               	goto	u48_21
  2167  02D9  2ADB               	goto	u48_20
  2168  02DA                     u48_21:
  2169  02DA  2AEB               	goto	i1l1343
  2170  02DB                     u48_20:
  2171  02DB                     i1l1337:
  2172  02DB  302D               	movlw	45
  2173  02DC  00FD               	movwf	??_itoa
  2174  02DD  0829               	movf	itoa@buf,w
  2175  02DE  0084               	movwf	4
  2176  02DF  087D               	movf	??_itoa,w
  2177  02E0  1383               	bcf	3,7	;select IRP bank0
  2178  02E1  0080               	movwf	0
  2179  02E2                     i1l1339:
  2180  02E2  3001               	movlw	1
  2181  02E3  00FD               	movwf	??_itoa
  2182  02E4  087D               	movf	??_itoa,w
  2183  02E5  07A9               	addwf	itoa@buf,f
  2184  02E6                     i1l1341:
  2185  02E6  09A4               	comf	itoa@val,f
  2186  02E7  09A5               	comf	itoa@val+1,f
  2187  02E8  0AA4               	incf	itoa@val,f
  2188  02E9  1903               	skipnz
  2189  02EA  0AA5               	incf	itoa@val+1,f
  2190  02EB                     i1l1343:
  2191  02EB  0825               	movf	itoa@val+1,w
  2192  02EC  00F9               	movwf	utoa@val+1
  2193  02ED  0824               	movf	itoa@val,w
  2194  02EE  00F8               	movwf	utoa@val
  2195  02EF  0827               	movf	itoa@base+1,w
  2196  02F0  00FB               	movwf	utoa@base+1
  2197  02F1  0826               	movf	itoa@base,w
  2198  02F2  00FA               	movwf	utoa@base
  2199  02F3  0829               	movf	itoa@buf,w
  2200  02F4  120A  118A  20BA  120A  118A  	fcall	_utoa
  2201  02F9                     i1l747:
  2202  02F9  0008               	return
  2203  02FA                     __end_of_itoa:
  2204                           
  2205                           	psect	text12
  2206  00BA                     __ptext12:	
  2207 ;; *************** function _utoa *****************
  2208 ;; Defined at:
  2209 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  buf             1    wreg     PTR unsigned char 
  2212 ;;		 -> COMPARE(5), 
  2213 ;;  val             2    8[COMMON] unsigned int 
  2214 ;;  base            2   10[COMMON] int 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2217 ;;		 -> COMPARE(5), 
  2218 ;;  v               2    0[BANK0 ] unsigned int 
  2219 ;;  c               1    2[BANK0 ] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      PTR unsigned char 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         4       0       0       0       0
  2230 ;;      Locals:         0       4       0       0       0
  2231 ;;      Temps:          1       0       0       0       0
  2232 ;;      Totals:         5       4       0       0       0
  2233 ;;Total ram usage:        9 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    1
  2236 ;; This function calls:
  2237 ;;		___lwdiv
  2238 ;;		___lwmod
  2239 ;; This function is called by:
  2240 ;;		_itoa
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           
  2245                           ;psect for function _utoa
  2246  00BA                     _utoa:
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2250                           ;utoa@buf stored from wreg
  2251  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2252  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2253  00BC  00A3               	movwf	utoa@buf
  2254  00BD                     i1l1271:
  2255  00BD  0879               	movf	utoa@val+1,w
  2256  00BE  00A1               	movwf	utoa@v+1
  2257  00BF  0878               	movf	utoa@val,w
  2258  00C0  00A0               	movwf	utoa@v
  2259  00C1                     i1l1273:
  2260  00C1  087B               	movf	utoa@base+1,w
  2261  00C2  00F1               	movwf	___lwdiv@divisor+1
  2262  00C3  087A               	movf	utoa@base,w
  2263  00C4  00F0               	movwf	___lwdiv@divisor
  2264  00C5  0821               	movf	utoa@v+1,w
  2265  00C6  00F3               	movwf	___lwdiv@dividend+1
  2266  00C7  0820               	movf	utoa@v,w
  2267  00C8  00F2               	movwf	___lwdiv@dividend
  2268  00C9  120A  118A  2178  120A  118A  	fcall	___lwdiv
  2269  00CE  0871               	movf	?___lwdiv+1,w
  2270  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2271  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2272  00D1  00A1               	movwf	utoa@v+1
  2273  00D2  0870               	movf	?___lwdiv,w
  2274  00D3  00A0               	movwf	utoa@v
  2275  00D4                     i1l1275:
  2276  00D4  3001               	movlw	1
  2277  00D5  00FC               	movwf	??_utoa
  2278  00D6  087C               	movf	??_utoa,w
  2279  00D7  07A3               	addwf	utoa@buf,f
  2280  00D8                     i1l1277:
  2281  00D8  0820               	movf	utoa@v,w
  2282  00D9  0421               	iorwf	utoa@v+1,w
  2283  00DA  1D03               	btfss	3,2
  2284  00DB  28DD               	goto	u43_21
  2285  00DC  28DE               	goto	u43_20
  2286  00DD                     u43_21:
  2287  00DD  28C1               	goto	i1l1273
  2288  00DE                     u43_20:
  2289  00DE                     i1l1279:
  2290  00DE  0823               	movf	utoa@buf,w
  2291  00DF  0084               	movwf	4
  2292  00E0  1383               	bcf	3,7	;select IRP bank0
  2293  00E1  0180               	clrf	0
  2294  00E2                     i1l1281:
  2295  00E2  3001               	movlw	1
  2296  00E3  02A3               	subwf	utoa@buf,f
  2297  00E4                     i1l1283:
  2298  00E4  087B               	movf	utoa@base+1,w
  2299  00E5  00F1               	movwf	___lwmod@divisor+1
  2300  00E6  087A               	movf	utoa@base,w
  2301  00E7  00F0               	movwf	___lwmod@divisor
  2302  00E8  0879               	movf	utoa@val+1,w
  2303  00E9  00F3               	movwf	___lwmod@dividend+1
  2304  00EA  0878               	movf	utoa@val,w
  2305  00EB  00F2               	movwf	___lwmod@dividend
  2306  00EC  120A  118A  2242  120A  118A  	fcall	___lwmod
  2307  00F1  0870               	movf	?___lwmod,w
  2308  00F2  00FC               	movwf	??_utoa
  2309  00F3  087C               	movf	??_utoa,w
  2310  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2311  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2312  00F6  00A2               	movwf	utoa@c
  2313  00F7                     i1l1285:
  2314  00F7  087B               	movf	utoa@base+1,w
  2315  00F8  00F1               	movwf	___lwdiv@divisor+1
  2316  00F9  087A               	movf	utoa@base,w
  2317  00FA  00F0               	movwf	___lwdiv@divisor
  2318  00FB  0879               	movf	utoa@val+1,w
  2319  00FC  00F3               	movwf	___lwdiv@dividend+1
  2320  00FD  0878               	movf	utoa@val,w
  2321  00FE  00F2               	movwf	___lwdiv@dividend
  2322  00FF  120A  118A  2178  120A  118A  	fcall	___lwdiv
  2323  0104  0871               	movf	?___lwdiv+1,w
  2324  0105  00F9               	movwf	utoa@val+1
  2325  0106  0870               	movf	?___lwdiv,w
  2326  0107  00F8               	movwf	utoa@val
  2327  0108                     i1l1287:
  2328  0108  300A               	movlw	10
  2329  0109  1283               	bcf	3,5	;RP0=0, select bank0
  2330  010A  1303               	bcf	3,6	;RP1=0, select bank0
  2331  010B  0222               	subwf	utoa@c,w
  2332  010C  1C03               	skipc
  2333  010D  290F               	goto	u44_21
  2334  010E  2910               	goto	u44_20
  2335  010F                     u44_21:
  2336  010F  2914               	goto	i1l753
  2337  0110                     u44_20:
  2338  0110                     i1l1289:
  2339  0110  3007               	movlw	7
  2340  0111  00FC               	movwf	??_utoa
  2341  0112  087C               	movf	??_utoa,w
  2342  0113  07A2               	addwf	utoa@c,f
  2343  0114                     i1l753:
  2344  0114  3030               	movlw	48
  2345  0115  00FC               	movwf	??_utoa
  2346  0116  087C               	movf	??_utoa,w
  2347  0117  07A2               	addwf	utoa@c,f
  2348  0118                     i1l1291:
  2349  0118  0822               	movf	utoa@c,w
  2350  0119  00FC               	movwf	??_utoa
  2351  011A  0823               	movf	utoa@buf,w
  2352  011B  0084               	movwf	4
  2353  011C  087C               	movf	??_utoa,w
  2354  011D  1383               	bcf	3,7	;select IRP bank0
  2355  011E  0080               	movwf	0
  2356  011F                     i1l1293:
  2357  011F  3001               	movlw	1
  2358  0120  02A3               	subwf	utoa@buf,f
  2359  0121                     i1l1295:
  2360  0121  0878               	movf	utoa@val,w
  2361  0122  0479               	iorwf	utoa@val+1,w
  2362  0123  1D03               	btfss	3,2
  2363  0124  2926               	goto	u45_21
  2364  0125  2927               	goto	u45_20
  2365  0126                     u45_21:
  2366  0126  28E4               	goto	i1l1283
  2367  0127                     u45_20:
  2368  0127                     i1l1297:
  2369                           
  2370                           ;	Return value of _utoa is never used
  2371  0127  3001               	movlw	1
  2372  0128  00FC               	movwf	??_utoa
  2373  0129  087C               	movf	??_utoa,w
  2374  012A  07A3               	addwf	utoa@buf,f
  2375  012B                     i1l755:
  2376  012B  0008               	return
  2377  012C                     __end_of_utoa:
  2378                           
  2379                           	psect	text13
  2380  0242                     __ptext13:	
  2381 ;; *************** function ___lwmod *****************
  2382 ;; Defined at:
  2383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  divisor         2    0[COMMON] unsigned int 
  2386 ;;  dividend        2    2[COMMON] unsigned int 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  counter         1    5[COMMON] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  2    0[COMMON] unsigned int 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398 ;;      Params:         4       0       0       0       0
  2399 ;;      Locals:         1       0       0       0       0
  2400 ;;      Temps:          1       0       0       0       0
  2401 ;;      Totals:         6       0       0       0       0
  2402 ;;Total ram usage:        6 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_utoa
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function ___lwmod
  2413  0242                     ___lwmod:
  2414  0242                     i1l1189:	
  2415                           ;incstack = 0
  2416                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2417                           
  2418  0242  0870               	movf	___lwmod@divisor,w
  2419  0243  0471               	iorwf	___lwmod@divisor+1,w
  2420  0244  1903               	btfsc	3,2
  2421  0245  2A47               	goto	u35_21
  2422  0246  2A48               	goto	u35_20
  2423  0247                     u35_21:
  2424  0247  2A77               	goto	i1l1207
  2425  0248                     u35_20:
  2426  0248                     i1l1191:
  2427  0248  01F5               	clrf	___lwmod@counter
  2428  0249  0AF5               	incf	___lwmod@counter,f
  2429  024A  2A56               	goto	i1l1197
  2430  024B                     i1l1193:
  2431  024B  3001               	movlw	1
  2432  024C                     u36_25:
  2433  024C  1003               	clrc
  2434  024D  0DF0               	rlf	___lwmod@divisor,f
  2435  024E  0DF1               	rlf	___lwmod@divisor+1,f
  2436  024F  3EFF               	addlw	-1
  2437  0250  1D03               	skipz
  2438  0251  2A4C               	goto	u36_25
  2439  0252                     i1l1195:
  2440  0252  3001               	movlw	1
  2441  0253  00F4               	movwf	??___lwmod
  2442  0254  0874               	movf	??___lwmod,w
  2443  0255  07F5               	addwf	___lwmod@counter,f
  2444  0256                     i1l1197:
  2445  0256  1FF1               	btfss	___lwmod@divisor+1,7
  2446  0257  2A59               	goto	u37_21
  2447  0258  2A5A               	goto	u37_20
  2448  0259                     u37_21:
  2449  0259  2A4B               	goto	i1l1193
  2450  025A                     u37_20:
  2451  025A                     i1l1199:
  2452  025A  0871               	movf	___lwmod@divisor+1,w
  2453  025B  0273               	subwf	___lwmod@dividend+1,w
  2454  025C  1D03               	skipz
  2455  025D  2A60               	goto	u38_25
  2456  025E  0870               	movf	___lwmod@divisor,w
  2457  025F  0272               	subwf	___lwmod@dividend,w
  2458  0260                     u38_25:
  2459  0260  1C03               	skipc
  2460  0261  2A63               	goto	u38_21
  2461  0262  2A64               	goto	u38_20
  2462  0263                     u38_21:
  2463  0263  2A6A               	goto	i1l1203
  2464  0264                     u38_20:
  2465  0264                     i1l1201:
  2466  0264  0870               	movf	___lwmod@divisor,w
  2467  0265  02F2               	subwf	___lwmod@dividend,f
  2468  0266  0871               	movf	___lwmod@divisor+1,w
  2469  0267  1C03               	skipc
  2470  0268  03F3               	decf	___lwmod@dividend+1,f
  2471  0269  02F3               	subwf	___lwmod@dividend+1,f
  2472  026A                     i1l1203:
  2473  026A  3001               	movlw	1
  2474  026B                     u39_25:
  2475  026B  1003               	clrc
  2476  026C  0CF1               	rrf	___lwmod@divisor+1,f
  2477  026D  0CF0               	rrf	___lwmod@divisor,f
  2478  026E  3EFF               	addlw	-1
  2479  026F  1D03               	skipz
  2480  0270  2A6B               	goto	u39_25
  2481  0271                     i1l1205:
  2482  0271  3001               	movlw	1
  2483  0272  02F5               	subwf	___lwmod@counter,f
  2484  0273  1D03               	btfss	3,2
  2485  0274  2A76               	goto	u40_21
  2486  0275  2A77               	goto	u40_20
  2487  0276                     u40_21:
  2488  0276  2A5A               	goto	i1l1199
  2489  0277                     u40_20:
  2490  0277                     i1l1207:
  2491  0277  0873               	movf	___lwmod@dividend+1,w
  2492  0278  00F1               	movwf	?___lwmod+1
  2493  0279  0872               	movf	___lwmod@dividend,w
  2494  027A  00F0               	movwf	?___lwmod
  2495  027B                     i1l575:
  2496  027B  0008               	return
  2497  027C                     __end_of___lwmod:
  2498                           
  2499                           	psect	text14
  2500  0178                     __ptext14:	
  2501 ;; *************** function ___lwdiv *****************
  2502 ;; Defined at:
  2503 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  divisor         2    0[COMMON] unsigned int 
  2506 ;;  dividend        2    2[COMMON] unsigned int 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  quotient        2    5[COMMON] unsigned int 
  2509 ;;  counter         1    7[COMMON] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  2    0[COMMON] unsigned int 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         4       0       0       0       0
  2520 ;;      Locals:         3       0       0       0       0
  2521 ;;      Temps:          1       0       0       0       0
  2522 ;;      Totals:         8       0       0       0       0
  2523 ;;Total ram usage:        8 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_utoa
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function ___lwdiv
  2534  0178                     ___lwdiv:
  2535  0178                     i1l1163:	
  2536                           ;incstack = 0
  2537                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2538                           
  2539  0178  01F5               	clrf	___lwdiv@quotient
  2540  0179  01F6               	clrf	___lwdiv@quotient+1
  2541  017A                     i1l1165:
  2542  017A  0870               	movf	___lwdiv@divisor,w
  2543  017B  0471               	iorwf	___lwdiv@divisor+1,w
  2544  017C  1903               	btfsc	3,2
  2545  017D  297F               	goto	u28_21
  2546  017E  2980               	goto	u28_20
  2547  017F                     u28_21:
  2548  017F  29B7               	goto	i1l1185
  2549  0180                     u28_20:
  2550  0180                     i1l1167:
  2551  0180  01F7               	clrf	___lwdiv@counter
  2552  0181  0AF7               	incf	___lwdiv@counter,f
  2553  0182  298E               	goto	i1l1173
  2554  0183                     i1l1169:
  2555  0183  3001               	movlw	1
  2556  0184                     u29_25:
  2557  0184  1003               	clrc
  2558  0185  0DF0               	rlf	___lwdiv@divisor,f
  2559  0186  0DF1               	rlf	___lwdiv@divisor+1,f
  2560  0187  3EFF               	addlw	-1
  2561  0188  1D03               	skipz
  2562  0189  2984               	goto	u29_25
  2563  018A                     i1l1171:
  2564  018A  3001               	movlw	1
  2565  018B  00F4               	movwf	??___lwdiv
  2566  018C  0874               	movf	??___lwdiv,w
  2567  018D  07F7               	addwf	___lwdiv@counter,f
  2568  018E                     i1l1173:
  2569  018E  1FF1               	btfss	___lwdiv@divisor+1,7
  2570  018F  2991               	goto	u30_21
  2571  0190  2992               	goto	u30_20
  2572  0191                     u30_21:
  2573  0191  2983               	goto	i1l1169
  2574  0192                     u30_20:
  2575  0192                     i1l1175:
  2576  0192  3001               	movlw	1
  2577  0193                     u31_25:
  2578  0193  1003               	clrc
  2579  0194  0DF5               	rlf	___lwdiv@quotient,f
  2580  0195  0DF6               	rlf	___lwdiv@quotient+1,f
  2581  0196  3EFF               	addlw	-1
  2582  0197  1D03               	skipz
  2583  0198  2993               	goto	u31_25
  2584  0199  0871               	movf	___lwdiv@divisor+1,w
  2585  019A  0273               	subwf	___lwdiv@dividend+1,w
  2586  019B  1D03               	skipz
  2587  019C  299F               	goto	u32_25
  2588  019D  0870               	movf	___lwdiv@divisor,w
  2589  019E  0272               	subwf	___lwdiv@dividend,w
  2590  019F                     u32_25:
  2591  019F  1C03               	skipc
  2592  01A0  29A2               	goto	u32_21
  2593  01A1  29A3               	goto	u32_20
  2594  01A2                     u32_21:
  2595  01A2  29AA               	goto	i1l1181
  2596  01A3                     u32_20:
  2597  01A3                     i1l1177:
  2598  01A3  0870               	movf	___lwdiv@divisor,w
  2599  01A4  02F2               	subwf	___lwdiv@dividend,f
  2600  01A5  0871               	movf	___lwdiv@divisor+1,w
  2601  01A6  1C03               	skipc
  2602  01A7  03F3               	decf	___lwdiv@dividend+1,f
  2603  01A8  02F3               	subwf	___lwdiv@dividend+1,f
  2604  01A9                     i1l1179:
  2605  01A9  1475               	bsf	___lwdiv@quotient,0
  2606  01AA                     i1l1181:
  2607  01AA  3001               	movlw	1
  2608  01AB                     u33_25:
  2609  01AB  1003               	clrc
  2610  01AC  0CF1               	rrf	___lwdiv@divisor+1,f
  2611  01AD  0CF0               	rrf	___lwdiv@divisor,f
  2612  01AE  3EFF               	addlw	-1
  2613  01AF  1D03               	skipz
  2614  01B0  29AB               	goto	u33_25
  2615  01B1                     i1l1183:
  2616  01B1  3001               	movlw	1
  2617  01B2  02F7               	subwf	___lwdiv@counter,f
  2618  01B3  1D03               	btfss	3,2
  2619  01B4  29B6               	goto	u34_21
  2620  01B5  29B7               	goto	u34_20
  2621  01B6                     u34_21:
  2622  01B6  2992               	goto	i1l1175
  2623  01B7                     u34_20:
  2624  01B7                     i1l1185:
  2625  01B7  0876               	movf	___lwdiv@quotient+1,w
  2626  01B8  00F1               	movwf	?___lwdiv+1
  2627  01B9  0875               	movf	___lwdiv@quotient,w
  2628  01BA  00F0               	movwf	?___lwdiv
  2629  01BB                     i1l565:
  2630  01BB  0008               	return
  2631  01BC                     __end_of___lwdiv:
  2632                           
  2633                           	psect	text15
  2634  0381                     __ptext15:	
  2635 ;; *************** function _CONTADOR *****************
  2636 ;; Defined at:
  2637 ;;		line 8 in file "UART.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  n               2    0[COMMON] int 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  2    0[COMMON] int 
  2644 ;; Registers used:
  2645 ;;		wreg
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         2       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0
  2654 ;;      Totals:         2       0       0       0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; This function calls:
  2658 ;;		Nothing
  2659 ;; This function is called by:
  2660 ;;		_ISR
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _CONTADOR
  2666  0381                     _CONTADOR:
  2667  0381                     i1l1329:	
  2668                           ;incstack = 0
  2669                           ; Regs used in _CONTADOR: [wreg]
  2670                           
  2671                           
  2672                           ;UART.c: 9:     Destination = n;
  2673  0381  0871               	movf	CONTADOR@n+1,w
  2674  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0384  00B6               	movwf	_Destination+1
  2677  0385  0870               	movf	CONTADOR@n,w
  2678  0386  00B5               	movwf	_Destination
  2679                           
  2680                           ;UART.c: 10:     return ((Destination)*1);
  2681  0387  0836               	movf	_Destination+1,w
  2682  0388  00F1               	movwf	?_CONTADOR+1
  2683  0389  0835               	movf	_Destination,w
  2684  038A  00F0               	movwf	?_CONTADOR
  2685  038B                     i1l189:
  2686  038B  0008               	return
  2687  038C                     __end_of_CONTADOR:
  2688  007E                     btemp	set	126	;btemp
  2689  007E                     wtemp0	set	126
  2690                           
  2691                           	psect	config
  2692                           
  2693                           ;Config register CONFIG1 @ 0x2007
  2694                           ;	Oscillator Selection bits
  2695                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2696                           ;	Watchdog Timer Enable bit
  2697                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2698                           ;	Power-up Timer Enable bit
  2699                           ;	PWRTE = OFF, PWRT disabled
  2700                           ;	RE3/MCLR pin function select bit
  2701                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2702                           ;	Code Protection bit
  2703                           ;	CP = OFF, Program memory code protection is disabled
  2704                           ;	Data Code Protection bit
  2705                           ;	CPD = OFF, Data memory code protection is disabled
  2706                           ;	Brown Out Reset Selection bits
  2707                           ;	BOREN = OFF, BOR disabled
  2708                           ;	Internal External Switchover bit
  2709                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2710                           ;	Fail-Safe Clock Monitor Enabled bit
  2711                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2712                           ;	Low Voltage Programming Enable bit
  2713                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2714                           ;	In-Circuit Debugger Mode bit
  2715                           ;	DEBUG = 0x1, unprogrammed default
  2716  2007                     	org	8199
  2717  2007  20D4               	dw	8404
  2718                           
  2719                           ;Config register CONFIG2 @ 0x2008
  2720                           ;	Brown-out Reset Selection bit
  2721                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2722                           ;	Flash Program Memory Self Write Enable bits
  2723                           ;	WRT = OFF, Write protection off
  2724  2008                     	org	8200
  2725  2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), STR_3(CODE[2]), RAM(DATA[512]), STR_2(CODE[3]), 
		 -> STR_1(CODE[17]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK0[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_itoa
    _itoa->_utoa
    _utoa->___lwdiv

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    _ISR->_itoa
    _itoa->_utoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     544
                                             20 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Init
                     _Lcd_Write_Char
                   _Lcd_Write_String
                        _SERIAL_Init
                           _SPI_Init
                           _SPI_Read
                          _SPI_Ready
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Ready                                            1     1      0       6
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             1     1      0       3
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             3     3      0      22
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SERIAL_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     2     0      2     447
                                             18 BANK0      2     0      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                             15 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0    1710
                                             10 BANK0      5     5      0
                           _CONTADOR
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 7     3      4    1612
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) _CONTADOR                                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Write_Char
   _Lcd_Write_String
     _Lcd_Write_Char
   _SERIAL_Init
   _SPI_Init
   _SPI_Read
   _SPI_Ready
   _setup

 _ISR (ROOT)
   _CONTADOR
   _itoa
     _utoa
       ___lwdiv
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      31       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      31      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 20:30:23 2021

                        _O 0037                          pc 0002                _SSPSTATbits 0094  
                       l14 0130                         l31 0390                         l16 013C  
                       l17 0148                         l25 037C                         l18 0154  
                       l19 0177                         l28 0380                         fsr 0004  
                      l120 0342                        l114 002C                        l135 0241  
                      l152 01FE                        l147 0361                        l158 02D3  
                      l192 0374                        _RE0 0048                        _RE1 0049  
                      _RE2 004A                        u410 021F                        u411 021E  
                      u420 01DC                        u421 01DB                        u530 037B  
                      u531 037A                        u540 0380                        _ISR 027C  
                      u541 037F                        u607 0211                        u617 0226  
                      u490 02D3                        u627 0239                        u491 02D2  
                      u557 005B                        u567 006D                        u577 01CE  
                      u587 01E3                        u597 01F6                        fsr0 0004  
                      indf 0000                       ?_ISR 0070                       l1211 0202  
                     l1221 020B                       l1213 0204                       l1301 012F  
                     l1231 022E                       l1223 0216                       l1215 0208  
                     l1303 0137                       l1311 0161                       l1233 0230  
                     l1225 021F                       l1217 0209                       l1241 01BF  
                     l1305 0143                       l1235 0231                       l1227 0220  
                     l1219 020A                       l1251 01C8                       l1243 01C1  
                     l1307 014F                       l1237 0232                       l1229 022B  
                     l1261 01EB                       l1253 01D3                       l1245 01C5  
                     l1309 015C                       l1501 0380                       l1239 023E  
                     l1263 01ED                       l1255 01DC                       l1247 01C6  
                     l1503 038C                       l1351 0329                       l1511 0037  
                     l1265 01EE                       l1257 01DD                       l1249 01C7  
                     l1505 038F                       l1361 0341                       l1353 0338  
                     l1521 0051                       l1513 003C                       l1363 0343  
                     l1267 01EF                       l1259 01E8                       l1371 0368  
                     l1355 033E                       l1347 0324                       l1531 0069  
                     l1523 0057                       l1515 0047                       l1507 0027  
                     l1269 01FB                       l1381 036F                       l1373 0369  
                     l1365 0362                       l1357 033F                       l1349 0328  
                     l1541 007E                       l1533 0071                       l1525 005F  
                     l1517 004D                       l1509 0031                       l1391 02BB  
                     l1383 0372                       l1375 036A                       l1367 0366  
                     l1359 0340                       l1551 00AB                       l1543 0084  
                     l1535 0074                       l1527 0062                       l1519 0050  
                     l1393 02C3                       l1385 0373                       l1377 036D  
                     l1369 0367                       l1545 008A                       l1537 0075  
                     l1529 0063                       l1387 02AC                       l1379 036E  
                     l1547 0095                       l1539 007B                       l1389 02AD  
                     l1549 00A0                       l1583 0169                       l1497 0375  
                     l1499 037B                       STR_1 0310                       STR_2 0321  
                     STR_3 031F                       _RCIF 0065                       _TRMT 04C1  
        ?_Lcd_Write_String 0032                       _main 0027                       _itoa 02D4  
                     btemp 007E                       _utoa 00BA                       start 0010  
       ??_Lcd_Write_String 0034            __end_of_Lcd_Cmd 0242           __end_of_CONTADOR 038C  
                    ??_ISR 002A                      ?_main 0070                      ?_itoa 0024  
                    _ANSEL 0188                      ?_utoa 0078            __end_of___lwdiv 01BC  
                    i1l109 02A3            __end_of___lwmod 027C                      i1l189 038B  
                    i1l565 01BB                      i1l575 027B                      i1l753 0114  
                    i1l755 012B                      i1l747 02F9                      _RCREG 001A  
                    u30_20 0192                      u30_21 0191                      u31_25 0193  
                    u32_20 01A3                      u40_20 0277                      u32_21 01A2  
                    u40_21 0276                      u32_25 019F                      u33_25 01AB  
                    u34_20 01B7                      u50_20 0280                      u34_21 01B6  
                    u50_21 027F                      _SPBRG 0099                      u35_20 0248  
                    u43_20 00DE                      u35_21 0247                      u43_21 00DD  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u28_20 0180  
                    u44_20 0110                      u28_21 017F                      u44_21 010F  
                    u36_25 024C                      u37_20 025A                      u45_20 0127  
                    u37_21 0259                      u45_21 0126                      u29_25 0184  
                    u38_20 0264                      u38_21 0263                      u38_25 0260  
                    u39_25 026B                      u48_20 02DB                      u48_21 02DA  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019                      _Ready 003D                      _setup 0324  
         __end_of_SPI_Init 0178           __end_of_SPI_Read 0391                      pclath 000A  
                    utoa@c 0022         __size_of_SPI_Ready 000C                      utoa@v 0020  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0362  
             ?_SERIAL_Init 0070            __initialization 0013               __end_of_main 00BA  
             __end_of_itoa 02FA               __end_of_utoa 012C                     ??_main 0034  
                   ??_itoa 007D                     ??_utoa 007C                     ?_setup 0070  
                   _ANSELH 0189                _Destination 0035                     i1l1201 0264  
                   i1l1203 026A                     i1l1205 0271                     i1l1207 0277  
                   i1l1401 02A0                     i1l1171 018A                     i1l1163 0178  
                   i1l1181 01AA                     i1l1173 018E                     i1l1165 017A  
                   i1l1341 02E6                     i1l1333 02D7                     i1l1183 01B1  
                   i1l1175 0192                     i1l1167 0180                     i1l1191 0248  
                   i1l1271 00BD                     i1l1343 02EB                     i1l1335 02D7  
                   i1l1329 0381                     i1l1177 01A3                     i1l1169 0183  
                   i1l1185 01B7                     i1l1193 024B                     i1l1281 00E2  
                   i1l1273 00C1                     i1l1337 02DB                     i1l1179 01A9  
                   i1l1195 0252                     i1l1291 0118                     i1l1283 00E4  
                   i1l1275 00D4                     i1l1339 02E2                     i1l1197 0256  
                   i1l1189 0242                     i1l1293 011F                     i1l1285 00F7  
                   i1l1277 00D8                     i1l1199 025A                     i1l1295 0121  
                   i1l1287 0108                     i1l1279 00DE                     i1l1297 0127  
                   i1l1289 0110                     i1l1395 027C                     i1l1397 0280  
                   i1l1399 0292                  ??_Lcd_Cmd 002F    __size_of_Lcd_Write_Char 0043  
                   _SSPCON 0014                     _SSPBUF 0013                     _Slave1 003C  
                   _Slave2 003B                     _Slave3 003A                  ??___lwdiv 0074  
                ??___lwmod 0074          __end_of_SPI_Ready 0381                  CONTADOR@n 0070  
                   saved_w 007E                  ?_CONTADOR 0070    __end_of__initialization 0023  
           __pcstackCOMMON 0070              __end_of_setup 0343                  ?_SPI_Init 0070  
                ?_SPI_Read 0070                  ?_Lcd_Init 0070                    ??_setup 002F  
               ??_CONTADOR 0072                 __pbssBANK0 0035                 __pmaintext 0027  
     __size_of_SERIAL_Init 0013                 __pintentry 0004  __size_of_Lcd_Write_String 0028  
               ??_SPI_Init 002F                 ??_SPI_Read 002F                    _COMPARE 003E  
               ??_Lcd_Init 0032                 __stringtab 0300             _Lcd_Write_Char 01BC  
                  _Lcd_Cmd 01FF                  SPI_Init@a 0031                  SPI_Read@a 002F  
                  ___lwdiv 0178                    ___lwmod 0242                    __ptext1 0324  
                  __ptext2 0375                    __ptext3 038C                    __ptext4 012C  
                  __ptext5 0362                    __ptext6 02AC                    __ptext7 01BC  
                  __ptext8 0343                    __ptext9 01FF               __size_of_ISR 0030  
   __end_of_Lcd_Write_Char 01FF       end_of_initialization 0023                    itoa@buf 0029  
                  itoa@val 0024                  _RCSTAbits 0018                    utoa@buf 0023  
                  utoa@val 0078                  _PORTBbits 0006                  _TRISCbits 0087  
                _SPI_Ready 0375            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0032  
        __size_of_CONTADOR 000B                  _TXSTAbits 0098           _Lcd_Write_String 02AC  
        __size_of_SPI_Init 004C          __size_of_SPI_Read 0005        start_initialization 0013  
              __end_of_ISR 02AC                 ?_SPI_Ready 0070          __size_of_Lcd_Init 001F  
          Lcd_Write_Char@a 0031                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070              ??_SERIAL_Init 002F           ___lwdiv@dividend 0072  
                 ?___lwdiv 0070                   ?___lwmod 0070                  __pstrings 0300  
              ??_SPI_Ready 002F           ___lwdiv@quotient 0075                   _CONTADOR 0381  
           __size_of_setup 001F          interrupt_function 0004                   _PIE1bits 008C  
                 Lcd_Cmd@a 0031        __end_of_SERIAL_Init 0375                   _SPI_Init 012C  
                 _SPI_Read 038C                __stringbase 030F           ??_Lcd_Write_Char 002F  
                 _Lcd_Init 0343                   _Contador 0039   __end_of_Lcd_Write_String 02D4  
               SPI_Ready@a 002F           __size_of_Lcd_Cmd 0043           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0310            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 027C                   __ptext11 02D4  
                 __ptext12 00BA                   __ptext13 0242                   __ptext14 0178  
                 __ptext15 0381              __size_of_main 0093              __size_of_itoa 0026  
            __size_of_utoa 0072                _SERIAL_Init 0362                 _INTCONbits 000B  
                 itoa@base 0026                   intlevel1 0000           ___lwmod@dividend 0072  
                stringcode 030A                 _OSCCONbits 008F                   utoa@base 007A  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 030A  
                 stringtab 0300  
