

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 23:36:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0009                     _PORTE	set	9
   290  0008                     _PORTD	set	8
   291  0006                     _PORTB	set	6
   292  0005                     _PORTA	set	5
   293  005E                     _PEIE	set	94
   294  005F                     _GIE	set	95
   295  0063                     _SSPIF	set	99
   296  0094                     _SSPSTATbits	set	148
   297  0094                     _SSPSTAT	set	148
   298  0089                     _TRISE	set	137
   299  0088                     _TRISD	set	136
   300  0087                     _TRISC	set	135
   301  0086                     _TRISB	set	134
   302  009F                     _ADCON1	set	159
   303  043B                     _TRISC3	set	1083
   304  043C                     _TRISC4	set	1084
   305  043D                     _TRISC5	set	1085
   306  042D                     _TRISA5	set	1069
   307  0463                     _SSPIE	set	1123
   308                           
   309                           	psect	cinit
   310  000F                     start_initialization:	
   311                           ; #config settings
   312                           
   313  000F                     __initialization:
   314                           
   315                           ; Clear objects allocated to COMMON
   316  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   317  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   318  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   319  0012                     end_of_initialization:	
   320                           ;End of C runtime variable initialization code
   321                           
   322  0012                     __end_of__initialization:
   323  0012  0183               	clrf	3
   324  0013  120A  118A  2853   	ljmp	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMMON
   327  0077                     __pbssCOMMON:
   328  0077                     _slave:
   329  0077                     	ds	1
   330  0078                     _Ready:
   331  0078                     	ds	1
   332  0079                     _Data:
   333  0079                     	ds	1
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:
   337  0070                     ?_SPI_Read:
   338  0070                     ??_SPI_Read:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_SPI_Write:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_SPI_Write:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_setup:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_SPI_Slave_Read:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_spiReceiveWait:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_spiReceiveWait:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     SPI_Write@a:	
   363                           ; 1 bytes @ 0x0
   364                           
   365                           
   366                           ; 1 bytes @ 0x0
   367  0070                     	ds	1
   368  0071                     ??_SPI_Slave_Read:
   369                           
   370                           ; 1 bytes @ 0x1
   371  0071                     	ds	3
   372  0074                     ??_setup:
   373  0074                     ?_SPI_Init:	
   374                           ; 1 bytes @ 0x4
   375                           
   376  0074                     SPI_Init@sDataSample:	
   377                           ; 1 bytes @ 0x4
   378                           
   379                           
   380                           ; 1 bytes @ 0x4
   381  0074                     	ds	1
   382  0075                     SPI_Init@sClockIdle:
   383                           
   384                           ; 1 bytes @ 0x5
   385  0075                     	ds	1
   386  0076                     SPI_Init@sTransmitEdge:
   387                           
   388                           ; 1 bytes @ 0x6
   389  0076                     	ds	1
   390  0077                     ??_SPI_Init:
   391  0077                     ??_main:	
   392                           ; 1 bytes @ 0x7
   393                           
   394                           
   395                           	psect	cstackBANK0
   396  0020                     __pcstackBANK0:	
   397                           ; 1 bytes @ 0x7
   398                           
   399  0020                     SPI_Init@sType:
   400                           
   401                           ; 1 bytes @ 0x0
   402  0020                     	ds	1
   403                           
   404                           	psect	maintext
   405  0053                     __pmaintext:	
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 73 in file "S3.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0, pclath, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : B00/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels required when called:    4
   431 ;; This function calls:
   432 ;;		_SPI_Init
   433 ;;		_setup
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _main
   441  0053                     _main:
   442  0053                     l785:	
   443                           ;incstack = 0
   444                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   445                           
   446                           
   447                           ;S3.c: 75:     setup();
   448  0053  120A  118A  206F  120A  118A  	fcall	_setup
   449  0058                     l787:
   450                           
   451                           ;S3.c: 83:         GIE = 1;
   452  0058  178B               	bsf	11,7	;volatile
   453  0059                     l789:
   454                           
   455                           ;S3.c: 84:         PEIE = 1;
   456  0059  170B               	bsf	11,6	;volatile
   457  005A                     l791:
   458                           
   459                           ;S3.c: 85:         SSPIF = 0;
   460  005A  1283               	bcf	3,5	;RP0=0, select bank0
   461  005B  1303               	bcf	3,6	;RP1=0, select bank0
   462  005C  118C               	bcf	12,3	;volatile
   463  005D                     l793:
   464                           
   465                           ;S3.c: 86:         SSPIE = 1;
   466  005D  1683               	bsf	3,5	;RP0=1, select bank1
   467  005E  1303               	bcf	3,6	;RP1=0, select bank1
   468  005F  158C               	bsf	12,3	;volatile
   469  0060                     l795:
   470                           
   471                           ;S3.c: 87:         ADCON1 = 0x07;
   472  0060  3007               	movlw	7
   473  0061  009F               	movwf	31	;volatile
   474  0062                     l797:
   475                           
   476                           ;S3.c: 89:         SPI_Init(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   477  0062  01F4               	clrf	SPI_Init@sDataSample
   478  0063  01F5               	clrf	SPI_Init@sClockIdle
   479  0064  01F6               	clrf	SPI_Init@sTransmitEdge
   480  0065  3024               	movlw	36
   481  0066  120A  118A  2016  120A  118A  	fcall	_SPI_Init
   482  006B  2858               	goto	l787
   483  006C  120A  118A  280C   	ljmp	start
   484  006F                     __end_of_main:
   485                           
   486                           	psect	text1
   487  006F                     __ptext1:	
   488 ;; *************** function _setup *****************
   489 ;; Defined at:
   490 ;;		line 97 in file "S3.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used:    1
   510 ;; Hardware stack levels required when called:    3
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_main
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _setup
   520  006F                     _setup:
   521  006F                     l697:	
   522                           ;incstack = 0
   523                           ; Regs used in _setup: [wreg+status,2]
   524                           
   525                           
   526                           ;S3.c: 98:     TRISA5 = 1;
   527  006F  1683               	bsf	3,5	;RP0=1, select bank1
   528  0070  1303               	bcf	3,6	;RP1=0, select bank1
   529  0071  1685               	bsf	5,5	;volatile
   530  0072                     l699:
   531                           
   532                           ;S3.c: 99:     TRISB = 0b00000000;
   533  0072  0186               	clrf	6	;volatile
   534  0073                     l701:
   535                           
   536                           ;S3.c: 100:     TRISC = 0b00011000;
   537  0073  3018               	movlw	24
   538  0074  0087               	movwf	7	;volatile
   539  0075                     l703:
   540                           
   541                           ;S3.c: 101:     TRISD = 0b00000000;
   542  0075  0188               	clrf	8	;volatile
   543  0076                     l705:
   544                           
   545                           ;S3.c: 102:     TRISE = 0;
   546  0076  0189               	clrf	9	;volatile
   547  0077                     l707:
   548                           
   549                           ;S3.c: 104:     PORTA = 0;
   550  0077  1283               	bcf	3,5	;RP0=0, select bank0
   551  0078  1303               	bcf	3,6	;RP1=0, select bank0
   552  0079  0185               	clrf	5	;volatile
   553  007A                     l709:
   554                           
   555                           ;S3.c: 105:     PORTB = 0;
   556  007A  0186               	clrf	6	;volatile
   557  007B                     l711:
   558                           
   559                           ;S3.c: 106:     PORTD = 0;
   560  007B  0188               	clrf	8	;volatile
   561  007C                     l713:
   562                           
   563                           ;S3.c: 107:     PORTE = 0;
   564  007C  0189               	clrf	9	;volatile
   565  007D                     l59:
   566  007D  0008               	return
   567  007E                     __end_of_setup:
   568                           
   569                           	psect	text2
   570  0016                     __ptext2:	
   571 ;; *************** function _SPI_Init *****************
   572 ;; Defined at:
   573 ;;		line 8 in file "SPI.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;  sType           1    wreg     enum E1349
   576 ;;  sDataSample     1    4[COMMON] enum E1357
   577 ;;  sClockIdle      1    5[COMMON] enum E1361
   578 ;;  sTransmitEdg    1    6[COMMON] enum E1365
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  sType           1    0[BANK0 ] enum E1349
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2, status,0
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         3       0       0       0       0
   591 ;;      Locals:         0       1       0       0       0
   592 ;;      Temps:          0       0       0       0       0
   593 ;;      Totals:         3       1       0       0       0
   594 ;;Total ram usage:        4 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    3
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _SPI_Init
   606  0016                     _SPI_Init:
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
   610                           ;SPI_Init@sType stored from wreg
   611  0016  1283               	bcf	3,5	;RP0=0, select bank0
   612  0017  1303               	bcf	3,6	;RP1=0, select bank0
   613  0018  00A0               	movwf	SPI_Init@sType
   614  0019                     l775:
   615                           
   616                           ;SPI.c: 8: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:     TRISC5 = 0;
   617  0019  1683               	bsf	3,5	;RP0=1, select bank1
   618  001A  1303               	bcf	3,6	;RP1=0, select bank1
   619  001B  1287               	bcf	7,5	;volatile
   620                           
   621                           ;SPI.c: 11:     TRISC4 = 1;
   622  001C  1607               	bsf	7,4	;volatile
   623                           
   624                           ;SPI.c: 13:     if(sType & 0b00000100)
   625  001D  1283               	bcf	3,5	;RP0=0, select bank0
   626  001E  1303               	bcf	3,6	;RP1=0, select bank0
   627  001F  1D20               	btfss	SPI_Init@sType,2
   628  0020  2822               	goto	u51
   629  0021  2823               	goto	u50
   630  0022                     u51:
   631  0022  2829               	goto	l781
   632  0023                     u50:
   633  0023                     l777:
   634                           
   635                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   636  0023  0876               	movf	SPI_Init@sTransmitEdge,w
   637  0024  1683               	bsf	3,5	;RP0=1, select bank1
   638  0025  1303               	bcf	3,6	;RP1=0, select bank1
   639  0026  0094               	movwf	20	;volatile
   640  0027                     l779:
   641                           
   642                           ;SPI.c: 16:         TRISC3 = 1;
   643  0027  1587               	bsf	7,3	;volatile
   644                           
   645                           ;SPI.c: 17:     }
   646  0028  282F               	goto	l77
   647  0029                     l781:
   648                           
   649                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   650  0029  0874               	movf	SPI_Init@sDataSample,w
   651  002A  0476               	iorwf	SPI_Init@sTransmitEdge,w
   652  002B  1683               	bsf	3,5	;RP0=1, select bank1
   653  002C  1303               	bcf	3,6	;RP1=0, select bank1
   654  002D  0094               	movwf	20	;volatile
   655  002E                     l783:
   656                           
   657                           ;SPI.c: 21:         TRISC3 = 0;
   658  002E  1187               	bcf	7,3	;volatile
   659  002F                     l77:	
   660                           ;SPI.c: 22:     }
   661                           
   662                           
   663                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   664  002F  1283               	bcf	3,5	;RP0=0, select bank0
   665  0030  1303               	bcf	3,6	;RP1=0, select bank0
   666  0031  0820               	movf	SPI_Init@sType,w
   667  0032  0475               	iorwf	SPI_Init@sClockIdle,w
   668  0033  0094               	movwf	20	;volatile
   669  0034                     l78:
   670  0034  0008               	return
   671  0035                     __end_of_SPI_Init:
   672                           
   673                           	psect	text3
   674  0035                     __ptext3:	
   675 ;; *************** function _SPI_Slave_Read *****************
   676 ;; Defined at:
   677 ;;		line 64 in file "S3.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;		None
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0
   693 ;;      Temps:          3       0       0       0       0
   694 ;;      Totals:         3       0       0       0       0
   695 ;;Total ram usage:        3 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    2
   698 ;; This function calls:
   699 ;;		_SPI_Read
   700 ;;		_SPI_Write
   701 ;; This function is called by:
   702 ;;		Interrupt level 1
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           
   707                           ;psect for function _SPI_Slave_Read
   708  0035                     _SPI_Slave_Read:
   709  0035                     i1l725:
   710                           
   711                           ;S3.c: 65:     if (SSPIF == 1){
   712  0035  1283               	bcf	3,5	;RP0=0, select bank0
   713  0036  1303               	bcf	3,6	;RP1=0, select bank0
   714  0037  1D8C               	btfss	12,3	;volatile
   715  0038  283A               	goto	u3_21
   716  0039  283B               	goto	u3_20
   717  003A                     u3_21:
   718  003A  284C               	goto	i1l48
   719  003B                     u3_20:
   720  003B                     i1l727:
   721                           
   722                           ;S3.c: 66:         slave = SPI_Read();
   723  003B  120A  118A  207E  120A  118A  	fcall	_SPI_Read
   724  0040  00F1               	movwf	??_SPI_Slave_Read
   725  0041  0871               	movf	??_SPI_Slave_Read,w
   726  0042  00F7               	movwf	_slave
   727                           
   728                           ;S3.c: 67:         SPI_Write(Data);
   729  0043  0879               	movf	_Data,w
   730  0044  120A  118A  208E  120A  118A  	fcall	_SPI_Write
   731  0049                     i1l729:
   732                           
   733                           ;S3.c: 68:         SSPIF = 0;
   734  0049  1283               	bcf	3,5	;RP0=0, select bank0
   735  004A  1303               	bcf	3,6	;RP1=0, select bank0
   736  004B  118C               	bcf	12,3	;volatile
   737  004C                     i1l48:
   738  004C  0873               	movf	??_SPI_Slave_Read+2,w
   739  004D  008A               	movwf	10
   740  004E  0E72               	swapf	??_SPI_Slave_Read+1,w
   741  004F  0083               	movwf	3
   742  0050  0EFE               	swapf	btemp,f
   743  0051  0E7E               	swapf	btemp,w
   744  0052  0009               	retfie
   745  0053                     __end_of_SPI_Slave_Read:
   746                           
   747                           	psect	intentry
   748  0004                     __pintentry:	
   749                           ;incstack = 0
   750                           ; Regs used in _SPI_Slave_Read: [wreg+status,2+status,0+pclath+cstack]
   751                           
   752  0004                     interrupt_function:
   753  007E                     saved_w	set	btemp
   754  0004  00FE               	movwf	btemp
   755  0005  0E03               	swapf	3,w
   756  0006  00F2               	movwf	??_SPI_Slave_Read+1
   757  0007  080A               	movf	10,w
   758  0008  00F3               	movwf	??_SPI_Slave_Read+2
   759  0009  120A  118A  2835   	ljmp	_SPI_Slave_Read
   760                           
   761                           	psect	text4
   762  008E                     __ptext4:	
   763 ;; *************** function _SPI_Write *****************
   764 ;; Defined at:
   765 ;;		line 27 in file "SPI.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  a               1    wreg     unsigned char 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  a               1    0[COMMON] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         1       0       0       0       0
   783 ;;Total ram usage:        1 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_SPI_Slave_Read
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _SPI_Write
   794  008E                     _SPI_Write:
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _SPI_Write: [wreg]
   798                           ;SPI_Write@a stored from wreg
   799  008E  00F0               	movwf	SPI_Write@a
   800  008F                     i1l695:
   801                           
   802                           ;SPI.c: 28:     SSPBUF = a;
   803  008F  0870               	movf	SPI_Write@a,w
   804  0090  1283               	bcf	3,5	;RP0=0, select bank0
   805  0091  1303               	bcf	3,6	;RP1=0, select bank0
   806  0092  0093               	movwf	19	;volatile
   807  0093                     i1l81:
   808  0093  0008               	return
   809  0094                     __end_of_SPI_Write:
   810                           
   811                           	psect	text5
   812  007E                     __ptext5:	
   813 ;; *************** function _SPI_Read *****************
   814 ;; Defined at:
   815 ;;		line 43 in file "SPI.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      unsigned char 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, pclath, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         0       0       0       0       0
   833 ;;Total ram usage:        0 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    1
   836 ;; This function calls:
   837 ;;		_spiReceiveWait
   838 ;; This function is called by:
   839 ;;		_SPI_Slave_Read
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _SPI_Read
   845  007E                     _SPI_Read:
   846  007E                     i1l689:	
   847                           ;incstack = 0
   848                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
   849                           
   850                           
   851                           ;SPI.c: 44:     spiReceiveWait();
   852  007E  120A  118A  2087  120A  118A  	fcall	_spiReceiveWait
   853  0083                     i1l691:
   854                           
   855                           ;SPI.c: 45:     return (SSPBUF);
   856  0083  1283               	bcf	3,5	;RP0=0, select bank0
   857  0084  1303               	bcf	3,6	;RP1=0, select bank0
   858  0085  0813               	movf	19,w	;volatile
   859  0086                     i1l95:
   860  0086  0008               	return
   861  0087                     __end_of_SPI_Read:
   862                           
   863                           	psect	text6
   864  0087                     __ptext6:	
   865 ;; *************** function _spiReceiveWait *****************
   866 ;; Defined at:
   867 ;;		line 31 in file "SPI.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;		None
   870 ;; Auto vars:     Size  Location     Type
   871 ;;		None
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      void 
   874 ;; Registers used:
   875 ;;		None
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       0       0       0       0
   882 ;;      Locals:         0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0
   884 ;;      Totals:         0       0       0       0       0
   885 ;;Total ram usage:        0 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_SPI_Read
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function _spiReceiveWait
   896  0087                     _spiReceiveWait:
   897  0087                     i1l687:	
   898                           ;incstack = 0
   899                           ; Regs used in _spiReceiveWait: []
   900                           
   901  0087                     i1l84:	
   902                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
   903                           
   904  0087  1683               	bsf	3,5	;RP0=1, select bank1
   905  0088  1303               	bcf	3,6	;RP1=0, select bank1
   906  0089  1C14               	btfss	20,0	;volatile
   907  008A  288C               	goto	u1_21
   908  008B  288D               	goto	u1_20
   909  008C                     u1_21:
   910  008C  2887               	goto	i1l84
   911  008D                     u1_20:
   912  008D                     i1l87:
   913  008D  0008               	return
   914  008E                     __end_of_spiReceiveWait:
   915  007E                     btemp	set	126	;btemp
   916  007E                     wtemp0	set	126
   917                           
   918                           	psect	config
   919                           
   920                           ;Config register CONFIG1 @ 0x2007
   921                           ;	Oscillator Selection bits
   922                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   923                           ;	Watchdog Timer Enable bit
   924                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   925                           ;	Power-up Timer Enable bit
   926                           ;	PWRTE = OFF, PWRT disabled
   927                           ;	RE3/MCLR pin function select bit
   928                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   929                           ;	Code Protection bit
   930                           ;	CP = OFF, Program memory code protection is disabled
   931                           ;	Data Code Protection bit
   932                           ;	CPD = OFF, Data memory code protection is disabled
   933                           ;	Brown Out Reset Selection bits
   934                           ;	BOREN = OFF, BOR disabled
   935                           ;	Internal External Switchover bit
   936                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   937                           ;	Fail-Safe Clock Monitor Enabled bit
   938                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   939                           ;	Low Voltage Programming Enable bit
   940                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   941                           ;	In-Circuit Debugger Mode bit
   942                           ;	DEBUG = 0x1, unprogrammed default
   943  2007                     	org	8199
   944  2007  20D1               	dw	8401
   945                           
   946                           ;Config register CONFIG2 @ 0x2008
   947                           ;	Brown-out Reset Selection bit
   948                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   949                           ;	Flash Program Memory Self Write Enable bits
   950                           ;	WRT = OFF, Write protection off
   951  2008                     	org	8200
   952  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Init

Critical Paths under _SPI_Slave_Read in COMMON

    _SPI_Slave_Read->_SPI_Write

Critical Paths under _main in BANK0

    _main->_SPI_Init

Critical Paths under _SPI_Slave_Read in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI_Slave_Read in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SPI_Slave_Read in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI_Slave_Read in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                           _SPI_Init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _SPI_Slave_Read                                       3     3      0      15
                                              1 COMMON     3     3      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init
   _setup

 _SPI_Slave_Read (ROOT)
   _SPI_Read
     _spiReceiveWait
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 23:36:45 2021

            _SSPSTATbits 0094                       l59 007D                       l77 002F  
                     l78 0034                       u50 0023                       u51 0022  
                    l701 0073                      l711 007B                      l703 0075  
                    l713 007C                      l705 0076                      l707 0077  
                    l709 007A                      l781 0029                      l783 002E  
                    l775 0019                      l791 005A                      l777 0023  
                    l697 006F                      l793 005D                      l785 0053  
                    l779 0027                      l699 0072                      l795 0060  
                    l787 0058                      l797 0062                      l789 0059  
                    _GIE 005F                     _PEIE 005E                     i1l48 004C  
                   i1l81 0093                     i1l84 0087                     i1l87 008D  
                   i1l95 0086                     _Data 0079                     u1_20 008D  
                   u1_21 008C                     u3_20 003B                     u3_21 003A  
                   _main 0053                     btemp 007E       SPI_Init@sClockIdle 0075  
         _SPI_Slave_Read 0035                     start 000C      SPI_Init@sDataSample 0074  
                  ?_main 0070                    i1l725 0035                    i1l727 003B  
                  i1l729 0049                    i1l691 0083                    i1l687 0087  
                  i1l695 008F                    i1l689 007E                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    _PORTE 0009  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPIE 0463                    _TRISE 0089                    _SSPIF 0063  
                  _Ready 0078    SPI_Init@sTransmitEdge 0076                    _slave 0077  
                  _setup 006F         __end_of_SPI_Init 0035         __end_of_SPI_Read 0087  
                  pclath 000A   __end_of_SPI_Slave_Read 0053                    status 0003  
                  wtemp0 007E       __size_of_SPI_Write 0006          __initialization 000F  
           __end_of_main 006F                   ??_main 0077                   _ADCON1 009F  
                 ?_setup 0070          ?_SPI_Slave_Read 0070                   _TRISA5 042D  
                 _TRISC3 043B                   _TRISC4 043C                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013        __end_of_SPI_Write 0094  
                 saved_w 007E  __end_of__initialization 0012            SPI_Init@sType 0020  
         __pcstackCOMMON 0070            __end_of_setup 007E                ?_SPI_Init 0074  
              ?_SPI_Read 0070                  ??_setup 0074               __pmaintext 0053  
             __pintentry 0004  __size_of_spiReceiveWait 0007               ??_SPI_Init 0077  
             ??_SPI_Read 0070                  _SSPSTAT 0094                  __ptext1 006F  
                __ptext2 0016                  __ptext3 0035                  __ptext4 008E  
                __ptext5 007E                  __ptext6 0087         ??_SPI_Slave_Read 0071  
   end_of_initialization 0012                _SPI_Write 008E           _spiReceiveWait 0087  
      __size_of_SPI_Init 001F        __size_of_SPI_Read 0009      start_initialization 000F  
             ?_SPI_Write 0070   __end_of_spiReceiveWait 008E              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
            ??_SPI_Write 0070           __size_of_setup 000F        interrupt_function 0004  
               _SPI_Init 0016                 _SPI_Read 007E               SPI_Write@a 0070  
          __size_of_main 001C  __size_of_SPI_Slave_Read 001E                 intlevel1 0000  
       ??_spiReceiveWait 0070  
