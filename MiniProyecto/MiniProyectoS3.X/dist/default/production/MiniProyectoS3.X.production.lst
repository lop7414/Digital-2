

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 01:40:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0009                     _PORTE	set	9
   290  0008                     _PORTD	set	8
   291  0007                     _PORTC	set	7
   292  0006                     _PORTB	set	6
   293  0005                     _PORTA	set	5
   294  0063                     _SSPIF	set	99
   295  0094                     _SSPSTATbits	set	148
   296  0094                     _SSPSTAT	set	148
   297  0088                     _TRISD	set	136
   298  0087                     _TRISC	set	135
   299  0086                     _TRISB	set	134
   300  0085                     _TRISA	set	133
   301  0085                     _TRISAbits	set	133
   302  043B                     _TRISC3	set	1083
   303  043C                     _TRISC4	set	1084
   304  043D                     _TRISC5	set	1085
   305  0189                     _ANSELH	set	393
   306  0188                     _ANSEL	set	392
   307                           
   308                           	psect	cinit
   309  000F                     start_initialization:	
   310                           ; #config settings
   311                           
   312  000F                     __initialization:
   313                           
   314                           ; Clear objects allocated to COMMON
   315  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   316  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   317  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   318  0012                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0012                     __end_of__initialization:
   322  0012  0183               	clrf	3
   323  0013  120A  118A  2853   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0077                     __pbssCOMMON:
   327  0077                     _slave:
   328  0077                     	ds	1
   329  0078                     _Ready:
   330  0078                     	ds	1
   331  0079                     _Data:
   332  0079                     	ds	1
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:
   336  0070                     ?_SPI_Read:
   337  0070                     ??_SPI_Read:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_SPI_Write:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ??_SPI_Write:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_setup:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_ISR:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_main:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_spiReceiveWait:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ??_spiReceiveWait:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     SPI_Write@a:	
   362                           ; 1 bytes @ 0x0
   363                           
   364                           
   365                           ; 1 bytes @ 0x0
   366  0070                     	ds	1
   367  0071                     ??_ISR:
   368                           
   369                           ; 1 bytes @ 0x1
   370  0071                     	ds	3
   371  0074                     ??_setup:
   372  0074                     ?_SPI_Init:	
   373                           ; 1 bytes @ 0x4
   374                           
   375  0074                     SPI_Init@sDataSample:	
   376                           ; 1 bytes @ 0x4
   377                           
   378                           
   379                           ; 1 bytes @ 0x4
   380  0074                     	ds	1
   381  0075                     SPI_Init@sClockIdle:
   382                           
   383                           ; 1 bytes @ 0x5
   384  0075                     	ds	1
   385  0076                     SPI_Init@sTransmitEdge:
   386                           
   387                           ; 1 bytes @ 0x6
   388  0076                     	ds	1
   389  0077                     ??_SPI_Init:
   390  0077                     ??_main:	
   391                           ; 1 bytes @ 0x7
   392                           
   393                           
   394                           	psect	cstackBANK0
   395  0020                     __pcstackBANK0:	
   396                           ; 1 bytes @ 0x7
   397                           
   398  0020                     SPI_Init@sType:
   399                           
   400                           ; 1 bytes @ 0x0
   401  0020                     	ds	1
   402                           
   403                           	psect	maintext
   404  0053                     __pmaintext:	
   405 ;;
   406 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   407 ;;
   408 ;; *************** function _main *****************
   409 ;; Defined at:
   410 ;;		line 73 in file "S3.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : B00/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0
   427 ;;      Totals:         0       0       0       0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels required when called:    4
   430 ;; This function calls:
   431 ;;		_SPI_Init
   432 ;;		_setup
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _main
   440  0053                     _main:
   441  0053                     l761:	
   442                           ;incstack = 0
   443                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   444                           
   445                           
   446                           ;S3.c: 75:     setup();
   447  0053  120A  118A  2068  120A  118A  	fcall	_setup
   448  0058                     l763:
   449                           
   450                           ;S3.c: 83:         TRISAbits.TRISA5 = 1;
   451  0058  1683               	bsf	3,5	;RP0=1, select bank1
   452  0059  1303               	bcf	3,6	;RP1=0, select bank1
   453  005A  1685               	bsf	5,5	;volatile
   454                           
   455                           ;S3.c: 85:         SPI_Init(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   456  005B  01F4               	clrf	SPI_Init@sDataSample
   457  005C  01F5               	clrf	SPI_Init@sClockIdle
   458  005D  01F6               	clrf	SPI_Init@sTransmitEdge
   459  005E  3024               	movlw	36
   460  005F  120A  118A  2016  120A  118A  	fcall	_SPI_Init
   461  0064  2858               	goto	l763
   462  0065  120A  118A  280C   	ljmp	start
   463  0068                     __end_of_main:
   464                           
   465                           	psect	text1
   466  0068                     __ptext1:	
   467 ;; *************** function _setup *****************
   468 ;; Defined at:
   469 ;;		line 93 in file "S3.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0
   486 ;;      Totals:         0       0       0       0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used:    1
   489 ;; Hardware stack levels required when called:    3
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _setup
   499  0068                     _setup:
   500  0068                     l695:	
   501                           ;incstack = 0
   502                           ; Regs used in _setup: [wreg+status,2]
   503                           
   504                           
   505                           ;S3.c: 94:     ANSEL = 0;
   506  0068  1683               	bsf	3,5	;RP0=1, select bank3
   507  0069  1703               	bsf	3,6	;RP1=1, select bank3
   508  006A  0188               	clrf	8	;volatile
   509                           
   510                           ;S3.c: 95:     ANSELH= 0;
   511  006B  0189               	clrf	9	;volatile
   512                           
   513                           ;S3.c: 96:     TRISA = 0;
   514  006C  1683               	bsf	3,5	;RP0=1, select bank1
   515  006D  1303               	bcf	3,6	;RP1=0, select bank1
   516  006E  0185               	clrf	5	;volatile
   517                           
   518                           ;S3.c: 97:     TRISB = 0;
   519  006F  0186               	clrf	6	;volatile
   520  0070                     l697:
   521                           
   522                           ;S3.c: 98:     TRISC = 0b00010000;
   523  0070  3010               	movlw	16
   524  0071  0087               	movwf	7	;volatile
   525  0072                     l699:
   526                           
   527                           ;S3.c: 99:     TRISD = 0;
   528  0072  0188               	clrf	8	;volatile
   529  0073                     l701:
   530                           
   531                           ;S3.c: 101:     PORTA = 0;
   532  0073  1283               	bcf	3,5	;RP0=0, select bank0
   533  0074  1303               	bcf	3,6	;RP1=0, select bank0
   534  0075  0185               	clrf	5	;volatile
   535  0076                     l703:
   536                           
   537                           ;S3.c: 102:     PORTB = 0;
   538  0076  0186               	clrf	6	;volatile
   539  0077                     l705:
   540                           
   541                           ;S3.c: 103:     PORTC = 0;
   542  0077  0187               	clrf	7	;volatile
   543  0078                     l707:
   544                           
   545                           ;S3.c: 104:     PORTD = 0;
   546  0078  0188               	clrf	8	;volatile
   547  0079                     l709:
   548                           
   549                           ;S3.c: 105:     PORTE = 0;
   550  0079  0189               	clrf	9	;volatile
   551  007A                     l57:
   552  007A  0008               	return
   553  007B                     __end_of_setup:
   554                           
   555                           	psect	text2
   556  0016                     __ptext2:	
   557 ;; *************** function _SPI_Init *****************
   558 ;; Defined at:
   559 ;;		line 8 in file "SPI.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  sType           1    wreg     enum E1349
   562 ;;  sDataSample     1    4[COMMON] enum E1357
   563 ;;  sClockIdle      1    5[COMMON] enum E1361
   564 ;;  sTransmitEdg    1    6[COMMON] enum E1365
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  sType           1    0[BANK0 ] enum E1349
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         3       0       0       0       0
   577 ;;      Locals:         0       1       0       0       0
   578 ;;      Temps:          0       0       0       0       0
   579 ;;      Totals:         3       1       0       0       0
   580 ;;Total ram usage:        4 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    3
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _SPI_Init
   592  0016                     _SPI_Init:
   593                           
   594                           ;incstack = 0
   595                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
   596                           ;SPI_Init@sType stored from wreg
   597  0016  1283               	bcf	3,5	;RP0=0, select bank0
   598  0017  1303               	bcf	3,6	;RP1=0, select bank0
   599  0018  00A0               	movwf	SPI_Init@sType
   600  0019                     l751:
   601                           
   602                           ;SPI.c: 8: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:     TRISC5 = 0;
   603  0019  1683               	bsf	3,5	;RP0=1, select bank1
   604  001A  1303               	bcf	3,6	;RP1=0, select bank1
   605  001B  1287               	bcf	7,5	;volatile
   606                           
   607                           ;SPI.c: 11:     TRISC4 = 1;
   608  001C  1607               	bsf	7,4	;volatile
   609                           
   610                           ;SPI.c: 13:     if(sType & 0b00000100)
   611  001D  1283               	bcf	3,5	;RP0=0, select bank0
   612  001E  1303               	bcf	3,6	;RP1=0, select bank0
   613  001F  1D20               	btfss	SPI_Init@sType,2
   614  0020  2822               	goto	u51
   615  0021  2823               	goto	u50
   616  0022                     u51:
   617  0022  2829               	goto	l757
   618  0023                     u50:
   619  0023                     l753:
   620                           
   621                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   622  0023  0876               	movf	SPI_Init@sTransmitEdge,w
   623  0024  1683               	bsf	3,5	;RP0=1, select bank1
   624  0025  1303               	bcf	3,6	;RP1=0, select bank1
   625  0026  0094               	movwf	20	;volatile
   626  0027                     l755:
   627                           
   628                           ;SPI.c: 16:         TRISC3 = 1;
   629  0027  1587               	bsf	7,3	;volatile
   630                           
   631                           ;SPI.c: 17:     }
   632  0028  282F               	goto	l75
   633  0029                     l757:
   634                           
   635                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   636  0029  0874               	movf	SPI_Init@sDataSample,w
   637  002A  0476               	iorwf	SPI_Init@sTransmitEdge,w
   638  002B  1683               	bsf	3,5	;RP0=1, select bank1
   639  002C  1303               	bcf	3,6	;RP1=0, select bank1
   640  002D  0094               	movwf	20	;volatile
   641  002E                     l759:
   642                           
   643                           ;SPI.c: 21:         TRISC3 = 0;
   644  002E  1187               	bcf	7,3	;volatile
   645  002F                     l75:	
   646                           ;SPI.c: 22:     }
   647                           
   648                           
   649                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   650  002F  1283               	bcf	3,5	;RP0=0, select bank0
   651  0030  1303               	bcf	3,6	;RP1=0, select bank0
   652  0031  0820               	movf	SPI_Init@sType,w
   653  0032  0475               	iorwf	SPI_Init@sClockIdle,w
   654  0033  0094               	movwf	20	;volatile
   655  0034                     l76:
   656  0034  0008               	return
   657  0035                     __end_of_SPI_Init:
   658                           
   659                           	psect	text3
   660  0035                     __ptext3:	
   661 ;; *************** function _ISR *****************
   662 ;; Defined at:
   663 ;;		line 64 in file "S3.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0, pclath, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0
   679 ;;      Temps:          3       0       0       0       0
   680 ;;      Totals:         3       0       0       0       0
   681 ;;Total ram usage:        3 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    2
   684 ;; This function calls:
   685 ;;		_SPI_Read
   686 ;;		_SPI_Write
   687 ;; This function is called by:
   688 ;;		Interrupt level 1
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _ISR
   694  0035                     _ISR:
   695  0035                     i1l721:
   696                           
   697                           ;S3.c: 65:     if (SSPIF == 1){
   698  0035  1283               	bcf	3,5	;RP0=0, select bank0
   699  0036  1303               	bcf	3,6	;RP1=0, select bank0
   700  0037  1D8C               	btfss	12,3	;volatile
   701  0038  283A               	goto	u3_21
   702  0039  283B               	goto	u3_20
   703  003A                     u3_21:
   704  003A  284C               	goto	i1l46
   705  003B                     u3_20:
   706  003B                     i1l723:
   707                           
   708                           ;S3.c: 66:         slave = SPI_Read();
   709  003B  120A  118A  207B  120A  118A  	fcall	_SPI_Read
   710  0040  00F1               	movwf	??_ISR
   711  0041  0871               	movf	??_ISR,w
   712  0042  00F7               	movwf	_slave
   713                           
   714                           ;S3.c: 67:         SPI_Write(Data);
   715  0043  0879               	movf	_Data,w
   716  0044  120A  118A  208B  120A  118A  	fcall	_SPI_Write
   717  0049                     i1l725:
   718                           
   719                           ;S3.c: 68:         SSPIF = 0;
   720  0049  1283               	bcf	3,5	;RP0=0, select bank0
   721  004A  1303               	bcf	3,6	;RP1=0, select bank0
   722  004B  118C               	bcf	12,3	;volatile
   723  004C                     i1l46:
   724  004C  0873               	movf	??_ISR+2,w
   725  004D  008A               	movwf	10
   726  004E  0E72               	swapf	??_ISR+1,w
   727  004F  0083               	movwf	3
   728  0050  0EFE               	swapf	btemp,f
   729  0051  0E7E               	swapf	btemp,w
   730  0052  0009               	retfie
   731  0053                     __end_of_ISR:
   732                           
   733                           	psect	intentry
   734  0004                     __pintentry:	
   735                           ;incstack = 0
   736                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   737                           
   738  0004                     interrupt_function:
   739  007E                     saved_w	set	btemp
   740  0004  00FE               	movwf	btemp
   741  0005  0E03               	swapf	3,w
   742  0006  00F2               	movwf	??_ISR+1
   743  0007  080A               	movf	10,w
   744  0008  00F3               	movwf	??_ISR+2
   745  0009  120A  118A  2835   	ljmp	_ISR
   746                           
   747                           	psect	text4
   748  008B                     __ptext4:	
   749 ;; *************** function _SPI_Write *****************
   750 ;; Defined at:
   751 ;;		line 27 in file "SPI.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  a               1    wreg     unsigned char 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  a               1    0[COMMON] unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   765 ;;      Params:         0       0       0       0       0
   766 ;;      Locals:         1       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0
   768 ;;      Totals:         1       0       0       0       0
   769 ;;Total ram usage:        1 bytes
   770 ;; Hardware stack levels used:    1
   771 ;; This function calls:
   772 ;;		Nothing
   773 ;; This function is called by:
   774 ;;		_ISR
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           
   779                           ;psect for function _SPI_Write
   780  008B                     _SPI_Write:
   781                           
   782                           ;incstack = 0
   783                           ; Regs used in _SPI_Write: [wreg]
   784                           ;SPI_Write@a stored from wreg
   785  008B  00F0               	movwf	SPI_Write@a
   786  008C                     i1l693:
   787                           
   788                           ;SPI.c: 28:     SSPBUF = a;
   789  008C  0870               	movf	SPI_Write@a,w
   790  008D  1283               	bcf	3,5	;RP0=0, select bank0
   791  008E  1303               	bcf	3,6	;RP1=0, select bank0
   792  008F  0093               	movwf	19	;volatile
   793  0090                     i1l79:
   794  0090  0008               	return
   795  0091                     __end_of_SPI_Write:
   796                           
   797                           	psect	text5
   798  007B                     __ptext5:	
   799 ;; *************** function _SPI_Read *****************
   800 ;; Defined at:
   801 ;;		line 43 in file "SPI.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      unsigned char 
   808 ;; Registers used:
   809 ;;		wreg, status,2, status,0, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0
   817 ;;      Temps:          0       0       0       0       0
   818 ;;      Totals:         0       0       0       0       0
   819 ;;Total ram usage:        0 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    1
   822 ;; This function calls:
   823 ;;		_spiReceiveWait
   824 ;; This function is called by:
   825 ;;		_ISR
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _SPI_Read
   831  007B                     _SPI_Read:
   832  007B                     i1l687:	
   833                           ;incstack = 0
   834                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
   835                           
   836                           
   837                           ;SPI.c: 44:     spiReceiveWait();
   838  007B  120A  118A  2084  120A  118A  	fcall	_spiReceiveWait
   839  0080                     i1l689:
   840                           
   841                           ;SPI.c: 45:     return (SSPBUF);
   842  0080  1283               	bcf	3,5	;RP0=0, select bank0
   843  0081  1303               	bcf	3,6	;RP1=0, select bank0
   844  0082  0813               	movf	19,w	;volatile
   845  0083                     i1l93:
   846  0083  0008               	return
   847  0084                     __end_of_SPI_Read:
   848                           
   849                           	psect	text6
   850  0084                     __ptext6:	
   851 ;; *************** function _spiReceiveWait *****************
   852 ;; Defined at:
   853 ;;		line 31 in file "SPI.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		None
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_SPI_Read
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           
   881                           ;psect for function _spiReceiveWait
   882  0084                     _spiReceiveWait:
   883  0084                     i1l685:	
   884                           ;incstack = 0
   885                           ; Regs used in _spiReceiveWait: []
   886                           
   887  0084                     i1l82:	
   888                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
   889                           
   890  0084  1683               	bsf	3,5	;RP0=1, select bank1
   891  0085  1303               	bcf	3,6	;RP1=0, select bank1
   892  0086  1C14               	btfss	20,0	;volatile
   893  0087  2889               	goto	u1_21
   894  0088  288A               	goto	u1_20
   895  0089                     u1_21:
   896  0089  2884               	goto	i1l82
   897  008A                     u1_20:
   898  008A                     i1l85:
   899  008A  0008               	return
   900  008B                     __end_of_spiReceiveWait:
   901  007E                     btemp	set	126	;btemp
   902  007E                     wtemp0	set	126
   903                           
   904                           	psect	config
   905                           
   906                           ;Config register CONFIG1 @ 0x2007
   907                           ;	Oscillator Selection bits
   908                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   909                           ;	Watchdog Timer Enable bit
   910                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   911                           ;	Power-up Timer Enable bit
   912                           ;	PWRTE = OFF, PWRT disabled
   913                           ;	RE3/MCLR pin function select bit
   914                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   915                           ;	Code Protection bit
   916                           ;	CP = OFF, Program memory code protection is disabled
   917                           ;	Data Code Protection bit
   918                           ;	CPD = OFF, Data memory code protection is disabled
   919                           ;	Brown Out Reset Selection bits
   920                           ;	BOREN = OFF, BOR disabled
   921                           ;	Internal External Switchover bit
   922                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   923                           ;	Fail-Safe Clock Monitor Enabled bit
   924                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   925                           ;	Low Voltage Programming Enable bit
   926                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   927                           ;	In-Circuit Debugger Mode bit
   928                           ;	DEBUG = 0x1, unprogrammed default
   929  2007                     	org	8199
   930  2007  20D1               	dw	8401
   931                           
   932                           ;Config register CONFIG2 @ 0x2008
   933                           ;	Brown-out Reset Selection bit
   934                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   935                           ;	Flash Program Memory Self Write Enable bits
   936                           ;	WRT = OFF, Write protection off
   937  2008                     	org	8200
   938  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Init

Critical Paths under _ISR in COMMON

    _ISR->_SPI_Write

Critical Paths under _main in BANK0

    _main->_SPI_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                           _SPI_Init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init
   _setup

 _ISR (ROOT)
   _SPI_Read
     _spiReceiveWait
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 01:40:52 2021

            _SSPSTATbits 0094                       l57 007A                       l75 002F  
                     l76 0034                       u50 0023                       u51 0022  
                    l701 0073                      l703 0076                      l705 0077  
                    l707 0078                      l709 0079                      l751 0019  
                    l753 0023                      l761 0053                      l755 0027  
                    l763 0058                      l757 0029                      l759 002E  
                    l695 0068                      l697 0070                      l699 0072  
                    _ISR 0035                     ?_ISR 0070                     i1l46 004C  
                   i1l82 0084                     i1l85 008A                     i1l93 0083  
                   i1l79 0090                     _Data 0079                     u1_20 008A  
                   u1_21 0089                     u3_20 003B                     u3_21 003A  
                   _main 0053                     btemp 007E       SPI_Init@sClockIdle 0075  
                   start 000C                    ??_ISR 0071      SPI_Init@sDataSample 0074  
                  ?_main 0070                    _ANSEL 0188                    i1l721 0035  
                  i1l723 003B                    i1l725 0049                    i1l685 0084  
                  i1l693 008C                    i1l687 007B                    i1l689 0080  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPIF 0063                    _Ready 0078    SPI_Init@sTransmitEdge 0076  
                  _slave 0077                    _setup 0068         __end_of_SPI_Init 0035  
       __end_of_SPI_Read 0084                    pclath 000A                    status 0003  
                  wtemp0 007E       __size_of_SPI_Write 0006          __initialization 000F  
           __end_of_main 0068                   ??_main 0077                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
      __end_of_SPI_Write 0091                   saved_w 007E  __end_of__initialization 0012  
          SPI_Init@sType 0020           __pcstackCOMMON 0070            __end_of_setup 007B  
              ?_SPI_Init 0074                ?_SPI_Read 0070                  ??_setup 0074  
             __pmaintext 0053               __pintentry 0004  __size_of_spiReceiveWait 0007  
             ??_SPI_Init 0077               ??_SPI_Read 0070                  _SSPSTAT 0094  
                __ptext1 0068                  __ptext2 0016                  __ptext3 0035  
                __ptext4 008B                  __ptext5 007B                  __ptext6 0084  
           __size_of_ISR 001E     end_of_initialization 0012                _TRISAbits 0085  
              _SPI_Write 008B           _spiReceiveWait 0084        __size_of_SPI_Init 001F  
      __size_of_SPI_Read 0009      start_initialization 000F              __end_of_ISR 0053  
             ?_SPI_Write 0070   __end_of_spiReceiveWait 008B              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
            ??_SPI_Write 0070           __size_of_setup 0013        interrupt_function 0004  
               _SPI_Init 0016                 _SPI_Read 007B               SPI_Write@a 0070  
          __size_of_main 0015                 intlevel1 0000         ??_spiReceiveWait 0070  
