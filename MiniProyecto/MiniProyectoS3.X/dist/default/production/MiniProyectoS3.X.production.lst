

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 01:44:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  0009                     _PORTE	set	9
   290  0008                     _PORTD	set	8
   291  0007                     _PORTC	set	7
   292  0006                     _PORTB	set	6
   293  0005                     _PORTA	set	5
   294  0063                     _SSPIF	set	99
   295  0094                     _SSPSTATbits	set	148
   296  0094                     _SSPSTAT	set	148
   297  0085                     _TRISAbits	set	133
   298  0088                     _TRISD	set	136
   299  0087                     _TRISC	set	135
   300  0086                     _TRISB	set	134
   301  0085                     _TRISA	set	133
   302  043B                     _TRISC3	set	1083
   303  043C                     _TRISC4	set	1084
   304  043D                     _TRISC5	set	1085
   305  0189                     _ANSELH	set	393
   306  0188                     _ANSEL	set	392
   307                           
   308                           	psect	cinit
   309  000F                     start_initialization:	
   310                           ; #config settings
   311                           
   312  000F                     __initialization:
   313                           
   314                           ; Clear objects allocated to COMMON
   315  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   316  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   317  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   318  0012                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0012                     __end_of__initialization:
   322  0012  0183               	clrf	3
   323  0013  120A  118A  2869   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0077                     __pbssCOMMON:
   327  0077                     _slave:
   328  0077                     	ds	1
   329  0078                     _Ready:
   330  0078                     	ds	1
   331  0079                     _Data:
   332  0079                     	ds	1
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:
   336  0070                     ?_SPI_Read:
   337  0070                     ??_SPI_Read:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_SPI_Write:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ??_SPI_Write:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_setup:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_ISR:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_main:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_spiReceiveWait:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ??_spiReceiveWait:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     SPI_Write@a:	
   362                           ; 1 bytes @ 0x0
   363                           
   364                           
   365                           ; 1 bytes @ 0x0
   366  0070                     	ds	1
   367  0071                     ??_ISR:
   368                           
   369                           ; 1 bytes @ 0x1
   370  0071                     	ds	3
   371  0074                     ??_setup:
   372  0074                     ?_SPI_Init:	
   373                           ; 1 bytes @ 0x4
   374                           
   375  0074                     SPI_Init@sDataSample:	
   376                           ; 1 bytes @ 0x4
   377                           
   378                           
   379                           ; 1 bytes @ 0x4
   380  0074                     	ds	1
   381  0075                     SPI_Init@sClockIdle:
   382                           
   383                           ; 1 bytes @ 0x5
   384  0075                     	ds	1
   385  0076                     SPI_Init@sTransmitEdge:
   386                           
   387                           ; 1 bytes @ 0x6
   388  0076                     	ds	1
   389  0077                     ??_SPI_Init:
   390  0077                     ??_main:	
   391                           ; 1 bytes @ 0x7
   392                           
   393                           
   394                           	psect	cstackBANK0
   395  0020                     __pcstackBANK0:	
   396                           ; 1 bytes @ 0x7
   397                           
   398  0020                     SPI_Init@sType:
   399                           
   400                           ; 1 bytes @ 0x0
   401  0020                     	ds	1
   402                           
   403                           	psect	maintext
   404  0069                     __pmaintext:	
   405 ;;
   406 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   407 ;;
   408 ;; *************** function _main *****************
   409 ;; Defined at:
   410 ;;		line 73 in file "S3.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;		None
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : B00/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0
   426 ;;      Temps:          0       0       0       0       0
   427 ;;      Totals:         0       0       0       0       0
   428 ;;Total ram usage:        0 bytes
   429 ;; Hardware stack levels required when called:    4
   430 ;; This function calls:
   431 ;;		_SPI_Init
   432 ;;		_setup
   433 ;; This function is called by:
   434 ;;		Startup code after reset
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _main
   440  0069                     _main:
   441  0069                     l759:	
   442                           ;incstack = 0
   443                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   444                           
   445                           
   446                           ;S3.c: 75:     setup();
   447  0069  120A  118A  2053  120A  118A  	fcall	_setup
   448  006E                     l51:	
   449                           ;S3.c: 81:     while (1) {
   450                           
   451                           
   452                           ;S3.c: 83:         SPI_Init(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   453  006E  01F4               	clrf	SPI_Init@sDataSample
   454  006F  01F5               	clrf	SPI_Init@sClockIdle
   455  0070  01F6               	clrf	SPI_Init@sTransmitEdge
   456  0071  3024               	movlw	36
   457  0072  120A  118A  2016  120A  118A  	fcall	_SPI_Init
   458  0077  286E               	goto	l51
   459  0078  120A  118A  280C   	ljmp	start
   460  007B                     __end_of_main:
   461                           
   462                           	psect	text1
   463  0053                     __ptext1:	
   464 ;; *************** function _setup *****************
   465 ;; Defined at:
   466 ;;		line 91 in file "S3.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    3
   487 ;; This function calls:
   488 ;;		Nothing
   489 ;; This function is called by:
   490 ;;		_main
   491 ;; This function uses a non-reentrant model
   492 ;;
   493                           
   494                           
   495                           ;psect for function _setup
   496  0053                     _setup:
   497  0053                     l695:	
   498                           ;incstack = 0
   499                           ; Regs used in _setup: [wreg+status,2]
   500                           
   501                           
   502                           ;S3.c: 92:     ANSEL = 0;
   503  0053  1683               	bsf	3,5	;RP0=1, select bank3
   504  0054  1703               	bsf	3,6	;RP1=1, select bank3
   505  0055  0188               	clrf	8	;volatile
   506                           
   507                           ;S3.c: 93:     ANSELH= 0;
   508  0056  0189               	clrf	9	;volatile
   509                           
   510                           ;S3.c: 94:     TRISA = 0;
   511  0057  1683               	bsf	3,5	;RP0=1, select bank1
   512  0058  1303               	bcf	3,6	;RP1=0, select bank1
   513  0059  0185               	clrf	5	;volatile
   514                           
   515                           ;S3.c: 95:     TRISB = 0;
   516  005A  0186               	clrf	6	;volatile
   517  005B                     l697:
   518                           
   519                           ;S3.c: 96:     TRISC = 0b00010000;
   520  005B  3010               	movlw	16
   521  005C  0087               	movwf	7	;volatile
   522  005D                     l699:
   523                           
   524                           ;S3.c: 97:     TRISD = 0;
   525  005D  0188               	clrf	8	;volatile
   526  005E                     l701:
   527                           
   528                           ;S3.c: 99:     PORTA = 0;
   529  005E  1283               	bcf	3,5	;RP0=0, select bank0
   530  005F  1303               	bcf	3,6	;RP1=0, select bank0
   531  0060  0185               	clrf	5	;volatile
   532  0061                     l703:
   533                           
   534                           ;S3.c: 100:     PORTB = 0;
   535  0061  0186               	clrf	6	;volatile
   536  0062                     l705:
   537                           
   538                           ;S3.c: 101:     PORTC = 0;
   539  0062  0187               	clrf	7	;volatile
   540  0063                     l707:
   541                           
   542                           ;S3.c: 102:     PORTD = 0;
   543  0063  0188               	clrf	8	;volatile
   544  0064                     l709:
   545                           
   546                           ;S3.c: 103:     PORTE = 0;
   547  0064  0189               	clrf	9	;volatile
   548  0065                     l711:
   549                           
   550                           ;S3.c: 105:     TRISAbits.TRISA5 = 1;
   551  0065  1683               	bsf	3,5	;RP0=1, select bank1
   552  0066  1303               	bcf	3,6	;RP1=0, select bank1
   553  0067  1685               	bsf	5,5	;volatile
   554  0068                     l57:
   555  0068  0008               	return
   556  0069                     __end_of_setup:
   557                           
   558                           	psect	text2
   559  0016                     __ptext2:	
   560 ;; *************** function _SPI_Init *****************
   561 ;; Defined at:
   562 ;;		line 8 in file "SPI.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  sType           1    wreg     enum E1349
   565 ;;  sDataSample     1    4[COMMON] enum E1357
   566 ;;  sClockIdle      1    5[COMMON] enum E1361
   567 ;;  sTransmitEdg    1    6[COMMON] enum E1365
   568 ;; Auto vars:     Size  Location     Type
   569 ;;  sType           1    0[BANK0 ] enum E1349
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, status,2, status,0
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         3       0       0       0       0
   580 ;;      Locals:         0       1       0       0       0
   581 ;;      Temps:          0       0       0       0       0
   582 ;;      Totals:         3       1       0       0       0
   583 ;;Total ram usage:        4 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    3
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _SPI_Init
   595  0016                     _SPI_Init:
   596                           
   597                           ;incstack = 0
   598                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
   599                           ;SPI_Init@sType stored from wreg
   600  0016  1283               	bcf	3,5	;RP0=0, select bank0
   601  0017  1303               	bcf	3,6	;RP1=0, select bank0
   602  0018  00A0               	movwf	SPI_Init@sType
   603  0019                     l749:
   604                           
   605                           ;SPI.c: 8: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:     TRISC5 = 0;
   606  0019  1683               	bsf	3,5	;RP0=1, select bank1
   607  001A  1303               	bcf	3,6	;RP1=0, select bank1
   608  001B  1287               	bcf	7,5	;volatile
   609                           
   610                           ;SPI.c: 11:     TRISC4 = 1;
   611  001C  1607               	bsf	7,4	;volatile
   612                           
   613                           ;SPI.c: 13:     if(sType & 0b00000100)
   614  001D  1283               	bcf	3,5	;RP0=0, select bank0
   615  001E  1303               	bcf	3,6	;RP1=0, select bank0
   616  001F  1D20               	btfss	SPI_Init@sType,2
   617  0020  2822               	goto	u51
   618  0021  2823               	goto	u50
   619  0022                     u51:
   620  0022  2829               	goto	l755
   621  0023                     u50:
   622  0023                     l751:
   623                           
   624                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   625  0023  0876               	movf	SPI_Init@sTransmitEdge,w
   626  0024  1683               	bsf	3,5	;RP0=1, select bank1
   627  0025  1303               	bcf	3,6	;RP1=0, select bank1
   628  0026  0094               	movwf	20	;volatile
   629  0027                     l753:
   630                           
   631                           ;SPI.c: 16:         TRISC3 = 1;
   632  0027  1587               	bsf	7,3	;volatile
   633                           
   634                           ;SPI.c: 17:     }
   635  0028  282F               	goto	l75
   636  0029                     l755:
   637                           
   638                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   639  0029  0874               	movf	SPI_Init@sDataSample,w
   640  002A  0476               	iorwf	SPI_Init@sTransmitEdge,w
   641  002B  1683               	bsf	3,5	;RP0=1, select bank1
   642  002C  1303               	bcf	3,6	;RP1=0, select bank1
   643  002D  0094               	movwf	20	;volatile
   644  002E                     l757:
   645                           
   646                           ;SPI.c: 21:         TRISC3 = 0;
   647  002E  1187               	bcf	7,3	;volatile
   648  002F                     l75:	
   649                           ;SPI.c: 22:     }
   650                           
   651                           
   652                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   653  002F  1283               	bcf	3,5	;RP0=0, select bank0
   654  0030  1303               	bcf	3,6	;RP1=0, select bank0
   655  0031  0820               	movf	SPI_Init@sType,w
   656  0032  0475               	iorwf	SPI_Init@sClockIdle,w
   657  0033  0094               	movwf	20	;volatile
   658  0034                     l76:
   659  0034  0008               	return
   660  0035                     __end_of_SPI_Init:
   661                           
   662                           	psect	text3
   663  0035                     __ptext3:	
   664 ;; *************** function _ISR *****************
   665 ;; Defined at:
   666 ;;		line 64 in file "S3.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, pclath, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0
   682 ;;      Temps:          3       0       0       0       0
   683 ;;      Totals:         3       0       0       0       0
   684 ;;Total ram usage:        3 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    2
   687 ;; This function calls:
   688 ;;		_SPI_Read
   689 ;;		_SPI_Write
   690 ;; This function is called by:
   691 ;;		Interrupt level 1
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _ISR
   697  0035                     _ISR:
   698  0035                     i1l723:
   699                           
   700                           ;S3.c: 65:     if (SSPIF == 1){
   701  0035  1283               	bcf	3,5	;RP0=0, select bank0
   702  0036  1303               	bcf	3,6	;RP1=0, select bank0
   703  0037  1D8C               	btfss	12,3	;volatile
   704  0038  283A               	goto	u3_21
   705  0039  283B               	goto	u3_20
   706  003A                     u3_21:
   707  003A  284C               	goto	i1l46
   708  003B                     u3_20:
   709  003B                     i1l725:
   710                           
   711                           ;S3.c: 66:         slave = SPI_Read();
   712  003B  120A  118A  207B  120A  118A  	fcall	_SPI_Read
   713  0040  00F1               	movwf	??_ISR
   714  0041  0871               	movf	??_ISR,w
   715  0042  00F7               	movwf	_slave
   716                           
   717                           ;S3.c: 67:         SPI_Write(Data);
   718  0043  0879               	movf	_Data,w
   719  0044  120A  118A  208B  120A  118A  	fcall	_SPI_Write
   720  0049                     i1l727:
   721                           
   722                           ;S3.c: 68:         SSPIF = 0;
   723  0049  1283               	bcf	3,5	;RP0=0, select bank0
   724  004A  1303               	bcf	3,6	;RP1=0, select bank0
   725  004B  118C               	bcf	12,3	;volatile
   726  004C                     i1l46:
   727  004C  0873               	movf	??_ISR+2,w
   728  004D  008A               	movwf	10
   729  004E  0E72               	swapf	??_ISR+1,w
   730  004F  0083               	movwf	3
   731  0050  0EFE               	swapf	btemp,f
   732  0051  0E7E               	swapf	btemp,w
   733  0052  0009               	retfie
   734  0053                     __end_of_ISR:
   735                           
   736                           	psect	intentry
   737  0004                     __pintentry:	
   738                           ;incstack = 0
   739                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   740                           
   741  0004                     interrupt_function:
   742  007E                     saved_w	set	btemp
   743  0004  00FE               	movwf	btemp
   744  0005  0E03               	swapf	3,w
   745  0006  00F2               	movwf	??_ISR+1
   746  0007  080A               	movf	10,w
   747  0008  00F3               	movwf	??_ISR+2
   748  0009  120A  118A  2835   	ljmp	_ISR
   749                           
   750                           	psect	text4
   751  008B                     __ptext4:	
   752 ;; *************** function _SPI_Write *****************
   753 ;; Defined at:
   754 ;;		line 27 in file "SPI.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  a               1    wreg     unsigned char 
   757 ;; Auto vars:     Size  Location     Type
   758 ;;  a               1    0[COMMON] unsigned char 
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         1       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0
   771 ;;      Totals:         1       0       0       0       0
   772 ;;Total ram usage:        1 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_ISR
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _SPI_Write
   783  008B                     _SPI_Write:
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _SPI_Write: [wreg]
   787                           ;SPI_Write@a stored from wreg
   788  008B  00F0               	movwf	SPI_Write@a
   789  008C                     i1l693:
   790                           
   791                           ;SPI.c: 28:     SSPBUF = a;
   792  008C  0870               	movf	SPI_Write@a,w
   793  008D  1283               	bcf	3,5	;RP0=0, select bank0
   794  008E  1303               	bcf	3,6	;RP1=0, select bank0
   795  008F  0093               	movwf	19	;volatile
   796  0090                     i1l79:
   797  0090  0008               	return
   798  0091                     __end_of_SPI_Write:
   799                           
   800                           	psect	text5
   801  007B                     __ptext5:	
   802 ;; *************** function _SPI_Read *****************
   803 ;; Defined at:
   804 ;;		line 43 in file "SPI.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;		None
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      unsigned char 
   811 ;; Registers used:
   812 ;;		wreg, status,2, status,0, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0
   821 ;;      Totals:         0       0       0       0       0
   822 ;;Total ram usage:        0 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    1
   825 ;; This function calls:
   826 ;;		_spiReceiveWait
   827 ;; This function is called by:
   828 ;;		_ISR
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832                           
   833                           ;psect for function _SPI_Read
   834  007B                     _SPI_Read:
   835  007B                     i1l687:	
   836                           ;incstack = 0
   837                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
   838                           
   839                           
   840                           ;SPI.c: 44:     spiReceiveWait();
   841  007B  120A  118A  2084  120A  118A  	fcall	_spiReceiveWait
   842  0080                     i1l689:
   843                           
   844                           ;SPI.c: 45:     return (SSPBUF);
   845  0080  1283               	bcf	3,5	;RP0=0, select bank0
   846  0081  1303               	bcf	3,6	;RP1=0, select bank0
   847  0082  0813               	movf	19,w	;volatile
   848  0083                     i1l93:
   849  0083  0008               	return
   850  0084                     __end_of_SPI_Read:
   851                           
   852                           	psect	text6
   853  0084                     __ptext6:	
   854 ;; *************** function _spiReceiveWait *****************
   855 ;; Defined at:
   856 ;;		line 31 in file "SPI.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		None
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0
   873 ;;      Totals:         0       0       0       0       0
   874 ;;Total ram usage:        0 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_SPI_Read
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _spiReceiveWait
   885  0084                     _spiReceiveWait:
   886  0084                     i1l685:	
   887                           ;incstack = 0
   888                           ; Regs used in _spiReceiveWait: []
   889                           
   890  0084                     i1l82:	
   891                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
   892                           
   893  0084  1683               	bsf	3,5	;RP0=1, select bank1
   894  0085  1303               	bcf	3,6	;RP1=0, select bank1
   895  0086  1C14               	btfss	20,0	;volatile
   896  0087  2889               	goto	u1_21
   897  0088  288A               	goto	u1_20
   898  0089                     u1_21:
   899  0089  2884               	goto	i1l82
   900  008A                     u1_20:
   901  008A                     i1l85:
   902  008A  0008               	return
   903  008B                     __end_of_spiReceiveWait:
   904  007E                     btemp	set	126	;btemp
   905  007E                     wtemp0	set	126
   906                           
   907                           	psect	config
   908                           
   909                           ;Config register CONFIG1 @ 0x2007
   910                           ;	Oscillator Selection bits
   911                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   912                           ;	Watchdog Timer Enable bit
   913                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   914                           ;	Power-up Timer Enable bit
   915                           ;	PWRTE = OFF, PWRT disabled
   916                           ;	RE3/MCLR pin function select bit
   917                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   918                           ;	Code Protection bit
   919                           ;	CP = OFF, Program memory code protection is disabled
   920                           ;	Data Code Protection bit
   921                           ;	CPD = OFF, Data memory code protection is disabled
   922                           ;	Brown Out Reset Selection bits
   923                           ;	BOREN = OFF, BOR disabled
   924                           ;	Internal External Switchover bit
   925                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   926                           ;	Fail-Safe Clock Monitor Enabled bit
   927                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   928                           ;	Low Voltage Programming Enable bit
   929                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   930                           ;	In-Circuit Debugger Mode bit
   931                           ;	DEBUG = 0x1, unprogrammed default
   932  2007                     	org	8199
   933  2007  20D1               	dw	8401
   934                           
   935                           ;Config register CONFIG2 @ 0x2008
   936                           ;	Brown-out Reset Selection bit
   937                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   938                           ;	Flash Program Memory Self Write Enable bits
   939                           ;	WRT = OFF, Write protection off
   940  2008                     	org	8200
   941  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Init

Critical Paths under _ISR in COMMON

    _ISR->_SPI_Write

Critical Paths under _main in BANK0

    _main->_SPI_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                           _SPI_Init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Init
   _setup

 _ISR (ROOT)
   _SPI_Read
     _spiReceiveWait
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 01:44:55 2021

            _SSPSTATbits 0094                       l51 006E                       l57 0068  
                     l75 002F                       l76 0034                       u50 0023  
                     u51 0022                      l701 005E                      l711 0065  
                    l703 0061                      l705 0062                      l707 0063  
                    l709 0064                      l751 0023                      l753 0027  
                    l755 0029                      l757 002E                      l749 0019  
                    l695 0053                      l759 0069                      l697 005B  
                    l699 005D                      _ISR 0035                     ?_ISR 0070  
                   i1l46 004C                     i1l82 0084                     i1l85 008A  
                   i1l93 0083                     i1l79 0090                     _Data 0079  
                   u1_20 008A                     u1_21 0089                     u3_20 003B  
                   u3_21 003A                     _main 0069                     btemp 007E  
     SPI_Init@sClockIdle 0075                     start 000C                    ??_ISR 0071  
    SPI_Init@sDataSample 0074                    ?_main 0070                    _ANSEL 0188  
                  i1l723 0035                    i1l725 003B                    i1l727 0049  
                  i1l685 0084                    i1l693 008C                    i1l687 007B  
                  i1l689 0080                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIF 0063                    _Ready 0078  
  SPI_Init@sTransmitEdge 0076                    _slave 0077                    _setup 0053  
       __end_of_SPI_Init 0035         __end_of_SPI_Read 0084                    pclath 000A  
                  status 0003                    wtemp0 007E       __size_of_SPI_Write 0006  
        __initialization 000F             __end_of_main 007B                   ??_main 0077  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC4 043C                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013        __end_of_SPI_Write 0091                   saved_w 007E  
__end_of__initialization 0012            SPI_Init@sType 0020           __pcstackCOMMON 0070  
          __end_of_setup 0069                ?_SPI_Init 0074                ?_SPI_Read 0070  
                ??_setup 0074               __pmaintext 0069               __pintentry 0004  
__size_of_spiReceiveWait 0007               ??_SPI_Init 0077               ??_SPI_Read 0070  
                _SSPSTAT 0094                  __ptext1 0053                  __ptext2 0016  
                __ptext3 0035                  __ptext4 008B                  __ptext5 007B  
                __ptext6 0084             __size_of_ISR 001E     end_of_initialization 0012  
              _TRISAbits 0085                _SPI_Write 008B           _spiReceiveWait 0084  
      __size_of_SPI_Init 001F        __size_of_SPI_Read 0009      start_initialization 000F  
            __end_of_ISR 0053               ?_SPI_Write 0070   __end_of_spiReceiveWait 008B  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070              ??_SPI_Write 0070           __size_of_setup 0016  
      interrupt_function 0004                 _SPI_Init 0016                 _SPI_Read 007B  
             SPI_Write@a 0070            __size_of_main 0012                 intlevel1 0000  
       ??_spiReceiveWait 0070  
