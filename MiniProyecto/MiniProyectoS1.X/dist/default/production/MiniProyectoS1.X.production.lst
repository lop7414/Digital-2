

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 21:31:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0013                     _SSPBUF	set	19
   365  0014                     _SSPCON	set	20
   366  001E                     _ADRESH	set	30
   367  000C                     _PIR1bits	set	12
   368  001F                     _ADCON0bits	set	31
   369  0009                     _PORTE	set	9
   370  0008                     _PORTD	set	8
   371  0007                     _PORTC	set	7
   372  0006                     _PORTB	set	6
   373  0005                     _PORTA	set	5
   374  0094                     _SSPSTATbits	set	148
   375  0094                     _SSPSTAT	set	148
   376  009F                     _ADCON1bits	set	159
   377  008F                     _OSCCONbits	set	143
   378  0089                     _TRISE	set	137
   379  0087                     _TRISC	set	135
   380  0088                     _TRISD	set	136
   381  0086                     _TRISB	set	134
   382  0085                     _TRISA	set	133
   383  043B                     _TRISC3	set	1083
   384  043C                     _TRISC4	set	1084
   385  043D                     _TRISC5	set	1085
   386  0189                     _ANSELH	set	393
   387  0188                     _ANSEL	set	392
   388                           
   389                           	psect	cinit
   390  07EB                     start_initialization:	
   391                           ; #config settings
   392                           
   393  07EB                     __initialization:
   394                           
   395                           ; Clear objects allocated to COMMON
   396  07EB  3070               	movlw	low __pbssCOMMON
   397  07EC  0084               	movwf	4
   398  07ED  3078               	movlw	low (__pbssCOMMON+8)
   399  07EE  120A  118A  275C  120A  118A  	fcall	clear_ram0
   400                           
   401                           ; Clear objects allocated to BANK0
   402  07F3  1383               	bcf	3,7	;select IRP bank0
   403  07F4  3020               	movlw	low __pbssBANK0
   404  07F5  0084               	movwf	4
   405  07F6  303A               	movlw	low (__pbssBANK0+26)
   406  07F7  120A  118A  275C  120A  118A  	fcall	clear_ram0
   407  07FC                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  07FC                     __end_of__initialization:
   411  07FC  0183               	clrf	3
   412  07FD  120A  118A  2FB9   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssCOMMON
   415  0070                     __pbssCOMMON:
   416  0070                     _POT1B:
   417  0070                     	ds	2
   418  0072                     _POT1A:
   419  0072                     	ds	2
   420  0074                     _V1:
   421  0074                     	ds	2
   422  0076                     _Ready:
   423  0076                     	ds	1
   424  0077                     _adc:
   425  0077                     	ds	1
   426                           
   427                           	psect	bssBANK0
   428  0020                     __pbssBANK0:
   429  0020                     _PUNTO1:
   430  0020                     	ds	5
   431  0025                     _POT1SC:
   432  0025                     	ds	5
   433  002A                     _POT1SB:
   434  002A                     	ds	5
   435  002F                     _POT1SA:
   436  002F                     	ds	5
   437  0034                     _voltaje:
   438  0034                     	ds	4
   439  0038                     _POT1C:
   440  0038                     	ds	2
   441                           
   442                           	psect	clrtext
   443  075C                     clear_ram0:	
   444                           ;	Called with FSR containing the base address, and
   445                           ;	W with the last address+1
   446                           
   447  075C  0064               	clrwdt	;clear the watchdog before getting into this loop
   448  075D                     clrloop0:
   449  075D  0180               	clrf	0	;clear RAM location pointed to by FSR
   450  075E  0A84               	incf	4,f	;increment pointer
   451  075F  0604               	xorwf	4,w	;XOR with final address
   452  0760  1903               	btfsc	3,2	;have we reached the end yet?
   453  0761  3400               	retlw	0	;all done for this memory range, return
   454  0762  0604               	xorwf	4,w	;XOR again to restore value
   455  0763  2F5D               	goto	clrloop0	;do the next byte
   456                           
   457                           	psect	cstackCOMMON
   458  0078                     __pcstackCOMMON:
   459  0078                     ?_setup:
   460  0078                     ??_setup:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0078                     ?_ADC_Init:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0078                     ??_ADC_Init:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0078                     ?_SPI_Init:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0078                     ?_ADC_Read:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0078                     ?_SPI_Write:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0078                     ??_SPI_Write:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0078                     ?_main:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0078                     SPI_Init@sDataSample:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0078                     SPI_Write@a:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0078                     ADC_Read@a:	
   491                           ; 1 bytes @ 0x0
   492                           
   493                           
   494                           ; 2 bytes @ 0x0
   495  0078                     	ds	1
   496  0079                     SPI_Init@sClockIdle:
   497                           
   498                           ; 1 bytes @ 0x1
   499  0079                     	ds	1
   500  007A                     SPI_Init@sTransmitEdge:
   501  007A                     ADC_Read@b:	
   502                           ; 1 bytes @ 0x2
   503                           
   504                           
   505                           ; 2 bytes @ 0x2
   506  007A                     	ds	1
   507  007B                     ??_SPI_Init:
   508  007B                     SPI_Init@sType:	
   509                           ; 1 bytes @ 0x3
   510                           
   511                           
   512                           ; 1 bytes @ 0x3
   513  007B                     	ds	1
   514  007C                     ??_ADC_Read:
   515  007C                     ??_main:	
   516                           ; 1 bytes @ 0x4
   517                           
   518                           
   519                           ; 1 bytes @ 0x4
   520  007C                     	ds	1
   521                           
   522                           	psect	maintext
   523  07B9                     __pmaintext:	
   524 ;;
   525 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   526 ;;
   527 ;; *************** function _main *****************
   528 ;; Defined at:
   529 ;;		line 76 in file "S1.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0, pclath, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : B00/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0
   545 ;;      Temps:          1       0       0       0       0
   546 ;;      Totals:         1       0       0       0       0
   547 ;;Total ram usage:        1 bytes
   548 ;; Hardware stack levels required when called:    1
   549 ;; This function calls:
   550 ;;		_ADC_Init
   551 ;;		_ADC_Read
   552 ;;		_SPI_Init
   553 ;;		_SPI_Write
   554 ;;		_setup
   555 ;; This function is called by:
   556 ;;		Startup code after reset
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _main
   562  07B9                     _main:
   563  07B9                     l820:	
   564                           ;incstack = 0
   565                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   566                           
   567                           
   568                           ;S1.c: 78:     setup();
   569  07B9  120A  118A  2799  120A  118A  	fcall	_setup
   570  07BE                     l822:
   571                           
   572                           ;S1.c: 85:         ADC_Init();
   573  07BE  120A  118A  2764  120A  118A  	fcall	_ADC_Init
   574  07C3                     l824:
   575                           
   576                           ;S1.c: 86:         SPI_Init(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   577  07C3  01F8               	clrf	SPI_Init@sDataSample
   578  07C4  01F9               	clrf	SPI_Init@sClockIdle
   579  07C5  01FA               	clrf	SPI_Init@sTransmitEdge
   580  07C6  3024               	movlw	36
   581  07C7  120A  118A  2782  120A  118A  	fcall	_SPI_Init
   582  07CC                     l826:
   583                           
   584                           ;S1.c: 88:         _delay((unsigned long)((1)*(4000000/4000.0)));
   585  07CC  30C7               	movlw	199
   586  07CD  00FC               	movwf	??_main
   587  07CE                     u47:
   588  07CE  2FCF               	nop2
   589  07CF  0BFC               	decfsz	??_main,f
   590  07D0  2FCE               	goto	u47
   591  07D1  2FD2               	nop2
   592  07D2  2FD3               	nop2
   593  07D3                     l828:
   594                           
   595                           ;S1.c: 89:         adc=ADC_Read(0,0);
   596  07D3  3000               	movlw	0
   597  07D4  00F8               	movwf	ADC_Read@a
   598  07D5  00F9               	movwf	ADC_Read@a+1
   599  07D6  3000               	movlw	0
   600  07D7  00FA               	movwf	ADC_Read@b
   601  07D8  00FB               	movwf	ADC_Read@b+1
   602  07D9  120A  118A  276F  120A  118A  	fcall	_ADC_Read
   603  07DE  00FC               	movwf	??_main
   604  07DF  087C               	movf	??_main,w
   605  07E0  00F7               	movwf	_adc
   606  07E1                     l830:
   607                           
   608                           ;S1.c: 104:         SPI_Write(adc);
   609  07E1  0877               	movf	_adc,w
   610  07E2  120A  118A  2756  120A  118A  	fcall	_SPI_Write
   611  07E7  2FBE               	goto	l822
   612  07E8  120A  118A  2800   	ljmp	start
   613  07EB                     __end_of_main:
   614                           
   615                           	psect	text1
   616  0799                     __ptext1:	
   617 ;; *************** function _setup *****************
   618 ;; Defined at:
   619 ;;		line 113 in file "S1.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           
   647                           ;psect for function _setup
   648  0799                     _setup:
   649  0799                     l710:	
   650                           ;incstack = 0
   651                           ; Regs used in _setup: [wreg+status,2+status,0]
   652                           
   653                           
   654                           ;S1.c: 114:     ANSEL = 0b00001001;
   655  0799  3009               	movlw	9
   656  079A  1683               	bsf	3,5	;RP0=1, select bank3
   657  079B  1703               	bsf	3,6	;RP1=1, select bank3
   658  079C  0088               	movwf	8	;volatile
   659  079D                     l712:
   660                           
   661                           ;S1.c: 115:     ANSELH= 0b00000000;
   662  079D  0189               	clrf	9	;volatile
   663  079E                     l714:
   664                           
   665                           ;S1.c: 116:     TRISA = 0b00001001;
   666  079E  3009               	movlw	9
   667  079F  1683               	bsf	3,5	;RP0=1, select bank1
   668  07A0  1303               	bcf	3,6	;RP1=0, select bank1
   669  07A1  0085               	movwf	5	;volatile
   670                           
   671                           ;S1.c: 117:     TRISB = 0b00000000;
   672  07A2  0186               	clrf	6	;volatile
   673                           
   674                           ;S1.c: 118:     TRISD = 0b00000000;
   675  07A3  0188               	clrf	8	;volatile
   676  07A4                     l716:
   677                           
   678                           ;S1.c: 119:     TRISC = 0b00001000;
   679  07A4  3008               	movlw	8
   680  07A5  0087               	movwf	7	;volatile
   681  07A6                     l718:
   682                           
   683                           ;S1.c: 120:     TRISE = 0;
   684  07A6  0189               	clrf	9	;volatile
   685  07A7                     l720:
   686                           
   687                           ;S1.c: 122:     PORTA = 0;
   688  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   689  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   690  07A9  0185               	clrf	5	;volatile
   691  07AA                     l722:
   692                           
   693                           ;S1.c: 123:     PORTB = 0;
   694  07AA  0186               	clrf	6	;volatile
   695  07AB                     l724:
   696                           
   697                           ;S1.c: 124:     PORTC = 0;
   698  07AB  0187               	clrf	7	;volatile
   699  07AC                     l726:
   700                           
   701                           ;S1.c: 125:     PORTD = 0;
   702  07AC  0188               	clrf	8	;volatile
   703  07AD                     l728:
   704                           
   705                           ;S1.c: 126:     PORTE = 0;
   706  07AD  0189               	clrf	9	;volatile
   707  07AE                     l730:
   708                           
   709                           ;S1.c: 128:     OSCCONbits.IRCF = 0b110;
   710  07AE  1683               	bsf	3,5	;RP0=1, select bank1
   711  07AF  1303               	bcf	3,6	;RP1=0, select bank1
   712  07B0  080F               	movf	15,w	;volatile
   713  07B1  398F               	andlw	-113
   714  07B2  3860               	iorlw	96
   715  07B3  008F               	movwf	15	;volatile
   716  07B4                     l732:
   717                           
   718                           ;S1.c: 129:     OSCCONbits.OSTS= 0;
   719  07B4  118F               	bcf	15,3	;volatile
   720  07B5                     l734:
   721                           
   722                           ;S1.c: 130:     OSCCONbits.HTS = 0;
   723  07B5  110F               	bcf	15,2	;volatile
   724  07B6                     l736:
   725                           
   726                           ;S1.c: 131:     OSCCONbits.LTS = 0;
   727  07B6  108F               	bcf	15,1	;volatile
   728  07B7                     l738:
   729                           
   730                           ;S1.c: 132:     OSCCONbits.SCS = 1;
   731  07B7  140F               	bsf	15,0	;volatile
   732  07B8                     l71:
   733  07B8  0008               	return
   734  07B9                     __end_of_setup:
   735                           
   736                           	psect	text2
   737  0756                     __ptext2:	
   738 ;; *************** function _SPI_Write *****************
   739 ;; Defined at:
   740 ;;		line 27 in file "SPI.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;  a               1    wreg     unsigned char 
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  a               1    0[COMMON] unsigned char 
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       0       0       0       0
   755 ;;      Locals:         1       0       0       0       0
   756 ;;      Temps:          0       0       0       0       0
   757 ;;      Totals:         1       0       0       0       0
   758 ;;Total ram usage:        1 bytes
   759 ;; Hardware stack levels used:    1
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           
   768                           ;psect for function _SPI_Write
   769  0756                     _SPI_Write:
   770                           
   771                           ;incstack = 0
   772                           ; Regs used in _SPI_Write: [wreg]
   773                           ;SPI_Write@a stored from wreg
   774  0756  00F8               	movwf	SPI_Write@a
   775  0757                     l768:
   776                           
   777                           ;SPI.c: 28:     SSPBUF = a;
   778  0757  0878               	movf	SPI_Write@a,w
   779  0758  1283               	bcf	3,5	;RP0=0, select bank0
   780  0759  1303               	bcf	3,6	;RP1=0, select bank0
   781  075A  0093               	movwf	19	;volatile
   782  075B                     l107:
   783  075B  0008               	return
   784  075C                     __end_of_SPI_Write:
   785                           
   786                           	psect	text3
   787  0782                     __ptext3:	
   788 ;; *************** function _SPI_Init *****************
   789 ;; Defined at:
   790 ;;		line 8 in file "SPI.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  sType           1    wreg     enum E1349
   793 ;;  sDataSample     1    0[COMMON] enum E1357
   794 ;;  sClockIdle      1    1[COMMON] enum E1361
   795 ;;  sTransmitEdg    1    2[COMMON] enum E1365
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  sType           1    3[COMMON] enum E1349
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         3       0       0       0       0
   808 ;;      Locals:         1       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0
   810 ;;      Totals:         4       0       0       0       0
   811 ;;Total ram usage:        4 bytes
   812 ;; Hardware stack levels used:    1
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           
   821                           ;psect for function _SPI_Init
   822  0782                     _SPI_Init:
   823                           
   824                           ;incstack = 0
   825                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
   826                           ;SPI_Init@sType stored from wreg
   827  0782  00FB               	movwf	SPI_Init@sType
   828  0783                     l794:
   829                           
   830                           ;SPI.c: 8: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:     TRISC5 = 0;
   831  0783  1683               	bsf	3,5	;RP0=1, select bank1
   832  0784  1303               	bcf	3,6	;RP1=0, select bank1
   833  0785  1287               	bcf	7,5	;volatile
   834                           
   835                           ;SPI.c: 11:     TRISC4 = 1;
   836  0786  1607               	bsf	7,4	;volatile
   837                           
   838                           ;SPI.c: 13:     if(sType & 0b00000100)
   839  0787  1D7B               	btfss	SPI_Init@sType,2
   840  0788  2F8A               	goto	u31
   841  0789  2F8B               	goto	u30
   842  078A                     u31:
   843  078A  2F8F               	goto	l800
   844  078B                     u30:
   845  078B                     l796:
   846                           
   847                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   848  078B  087A               	movf	SPI_Init@sTransmitEdge,w
   849  078C  0094               	movwf	20	;volatile
   850  078D                     l798:
   851                           
   852                           ;SPI.c: 16:         TRISC3 = 1;
   853  078D  1587               	bsf	7,3	;volatile
   854                           
   855                           ;SPI.c: 17:     }
   856  078E  2F93               	goto	l103
   857  078F                     l800:
   858                           
   859                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   860  078F  0878               	movf	SPI_Init@sDataSample,w
   861  0790  047A               	iorwf	SPI_Init@sTransmitEdge,w
   862  0791  0094               	movwf	20	;volatile
   863  0792                     l802:
   864                           
   865                           ;SPI.c: 21:         TRISC3 = 0;
   866  0792  1187               	bcf	7,3	;volatile
   867  0793                     l103:	
   868                           ;SPI.c: 22:     }
   869                           
   870                           
   871                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   872  0793  087B               	movf	SPI_Init@sType,w
   873  0794  0479               	iorwf	SPI_Init@sClockIdle,w
   874  0795  1283               	bcf	3,5	;RP0=0, select bank0
   875  0796  1303               	bcf	3,6	;RP1=0, select bank0
   876  0797  0094               	movwf	20	;volatile
   877  0798                     l104:
   878  0798  0008               	return
   879  0799                     __end_of_SPI_Init:
   880                           
   881                           	psect	text4
   882  076F                     __ptext4:	
   883 ;; *************** function _ADC_Read *****************
   884 ;; Defined at:
   885 ;;		line 17 in file "ADC.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  a               2    0[COMMON] int 
   888 ;;  b               2    2[COMMON] int 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      unsigned char 
   893 ;; Registers used:
   894 ;;		wreg, status,0
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         4       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0
   903 ;;      Totals:         4       0       0       0       0
   904 ;;Total ram usage:        4 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _ADC_Read
   915  076F                     _ADC_Read:
   916  076F                     l804:	
   917                           ;incstack = 0
   918                           ; Regs used in _ADC_Read: [wreg+status,0]
   919                           
   920                           
   921                           ;ADC.c: 18:     ADCON0bits.CHS0 = a;
   922  076F  0C78               	rrf	ADC_Read@a,w
   923  0770  1283               	bcf	3,5	;RP0=0, select bank0
   924  0771  1303               	bcf	3,6	;RP1=0, select bank0
   925  0772  1C03               	skipc
   926  0773  111F               	bcf	31,2	;volatile
   927  0774  1803               	skipnc
   928  0775  151F               	bsf	31,2	;volatile
   929                           
   930                           ;ADC.c: 19:     ADCON0bits.CHS1 = b;
   931  0776  0C7A               	rrf	ADC_Read@b,w
   932  0777  1C03               	skipc
   933  0778  119F               	bcf	31,3	;volatile
   934  0779  1803               	skipnc
   935  077A  159F               	bsf	31,3	;volatile
   936  077B                     l806:
   937                           
   938                           ;ADC.c: 20:     ADCON0bits.CHS2 = 0;
   939  077B  121F               	bcf	31,4	;volatile
   940  077C                     l808:
   941                           
   942                           ;ADC.c: 21:     ADCON0bits.CHS3 = 0;
   943  077C  129F               	bcf	31,5	;volatile
   944  077D                     l810:
   945                           
   946                           ;ADC.c: 22:     ADCON0bits.ADON = 1;
   947  077D  141F               	bsf	31,0	;volatile
   948  077E                     l812:
   949                           
   950                           ;ADC.c: 23:     ADCON0bits.GO = 1;
   951  077E  149F               	bsf	31,1	;volatile
   952  077F                     l814:
   953                           
   954                           ;ADC.c: 24:     PIR1bits.ADIF = 0;
   955  077F  130C               	bcf	12,6	;volatile
   956  0780                     l816:
   957                           
   958                           ;ADC.c: 25:     return(ADRESH);
   959  0780  081E               	movf	30,w	;volatile
   960  0781                     l85:
   961  0781  0008               	return
   962  0782                     __end_of_ADC_Read:
   963                           
   964                           	psect	text5
   965  0764                     __ptext5:	
   966 ;; *************** function _ADC_Init *****************
   967 ;; Defined at:
   968 ;;		line 8 in file "ADC.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		None
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         0       0       0       0       0
   984 ;;      Temps:          0       0       0       0       0
   985 ;;      Totals:         0       0       0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; This function calls:
   989 ;;		Nothing
   990 ;; This function is called by:
   991 ;;		_main
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           
   996                           ;psect for function _ADC_Init
   997  0764                     _ADC_Init:
   998  0764                     l740:	
   999                           ;incstack = 0
  1000                           ; Regs used in _ADC_Init: []
  1001                           
  1002                           
  1003                           ;ADC.c: 9:     ADCON0bits.ADCS0 = 1;
  1004  0764  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0765  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0766  171F               	bsf	31,6	;volatile
  1007                           
  1008                           ;ADC.c: 10:     ADCON0bits.ADCS1 = 0;
  1009  0767  139F               	bcf	31,7	;volatile
  1010                           
  1011                           ;ADC.c: 11:     ADCON0bits.ADON = 1;
  1012  0768  141F               	bsf	31,0	;volatile
  1013                           
  1014                           ;ADC.c: 12:     ADCON1bits.ADFM = 0;
  1015  0769  1683               	bsf	3,5	;RP0=1, select bank1
  1016  076A  1303               	bcf	3,6	;RP1=0, select bank1
  1017  076B  139F               	bcf	31,7	;volatile
  1018                           
  1019                           ;ADC.c: 13:     ADCON1bits.VCFG0 = 0;
  1020  076C  121F               	bcf	31,4	;volatile
  1021                           
  1022                           ;ADC.c: 14:     ADCON1bits.VCFG1 = 0;
  1023  076D  129F               	bcf	31,5	;volatile
  1024  076E                     l82:
  1025  076E  0008               	return
  1026  076F                     __end_of_ADC_Init:
  1027  007E                     btemp	set	126	;btemp
  1028  007E                     wtemp0	set	126
  1029                           
  1030                           	psect	config
  1031                           
  1032                           ;Config register CONFIG1 @ 0x2007
  1033                           ;	Oscillator Selection bits
  1034                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1035                           ;	Watchdog Timer Enable bit
  1036                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1037                           ;	Power-up Timer Enable bit
  1038                           ;	PWRTE = OFF, PWRT disabled
  1039                           ;	RE3/MCLR pin function select bit
  1040                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1041                           ;	Code Protection bit
  1042                           ;	CP = OFF, Program memory code protection is disabled
  1043                           ;	Data Code Protection bit
  1044                           ;	CPD = OFF, Data memory code protection is disabled
  1045                           ;	Brown Out Reset Selection bits
  1046                           ;	BOREN = OFF, BOR disabled
  1047                           ;	Internal External Switchover bit
  1048                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1049                           ;	Fail-Safe Clock Monitor Enabled bit
  1050                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1051                           ;	Low Voltage Programming Enable bit
  1052                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1053                           ;	In-Circuit Debugger Mode bit
  1054                           ;	DEBUG = 0x1, unprogrammed default
  1055  2007                     	org	8199
  1056  2007  20D4               	dw	8404
  1057                           
  1058                           ;Config register CONFIG2 @ 0x2008
  1059                           ;	Brown-out Reset Selection bit
  1060                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1061                           ;	Flash Program Memory Self Write Enable bits
  1062                           ;	WRT = OFF, Write protection off
  1063  2008                     	org	8200
  1064  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read
    _main->_SPI_Init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     571
                                              4 COMMON     1     1      0
                           _ADC_Init
                           _ADC_Read
                           _SPI_Init
                          _SPI_Write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     0      4     196
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _SPI_Init
   _SPI_Write
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 21:31:27 2021

            _SSPSTATbits 0094                       l71 07B8                       l82 076E  
                     l85 0781                       _V1 0074                       u30 078B  
                     u31 078A                       u47 07CE                       fsr 0004  
                    l103 0793                      l104 0798                      l107 075B  
                    l710 0799                      l800 078F                      l720 07A7  
                    l712 079D                      l810 077D                      l802 0792  
                    l730 07AE                      l722 07AA                      l714 079E  
                    l740 0764                      l812 077E                      l804 076F  
                    l732 07B4                      l724 07AB                      l716 07A4  
                    l820 07B9                      l814 077F                      l806 077B  
                    l734 07B5                      l726 07AC                      l718 07A6  
                    l830 07E1                      l822 07BE                      l816 0780  
                    l808 077C                      l736 07B6                      l728 07AD  
                    l824 07C3                      l738 07B7                      l826 07CC  
                    l828 07D3                      l768 0757                      l794 0783  
                    l796 078B                      l798 078D                      _adc 0077  
                    indf 0000                     _main 07B9                     btemp 007E  
     SPI_Init@sClockIdle 0079         __end_of_ADC_Init 076F         __end_of_ADC_Read 0782  
                   start 0000      SPI_Init@sDataSample 0078                    ?_main 0078  
                  _ANSEL 0188                    _POT1A 0072                    _POT1B 0070  
                  _POT1C 0038                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _Ready 0076  
  SPI_Init@sTransmitEdge 007A                    _setup 0799         __end_of_SPI_Init 0799  
                  status 0003                    wtemp0 007E       __size_of_SPI_Write 0006  
        __initialization 07EB             __end_of_main 07EB                   ??_main 007C  
                 _ADRESH 001E                ADC_Read@a 0078                ADC_Read@b 007A  
                 ?_setup 0078                   _ANSELH 0189                   _POT1SA 002F  
                 _POT1SB 002A                   _POT1SC 0025                   _PUNTO1 0020  
                 _TRISC3 043B                   _TRISC4 043C                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013        __end_of_SPI_Write 075C  
              ?_ADC_Init 0078                ?_ADC_Read 0078  __end_of__initialization 07FC  
          SPI_Init@sType 007B           __pcstackCOMMON 0078            __end_of_setup 07B9  
              ?_SPI_Init 0078               ??_ADC_Init 0078               ??_ADC_Read 007C  
                ??_setup 0078               __pbssBANK0 0020               __pmaintext 07B9  
             ??_SPI_Init 007B                  _SSPSTAT 0094                  __ptext1 0799  
                __ptext2 0756                  __ptext3 0782                  __ptext4 076F  
                __ptext5 0764                  clrloop0 075D                  _voltaje 0034  
   end_of_initialization 07FC                _SPI_Write 0756        __size_of_ADC_Init 000B  
      __size_of_ADC_Read 0013        __size_of_SPI_Init 0017      start_initialization 07EB  
             ?_SPI_Write 0078              __pbssCOMMON 0070                ___latbits 0002  
               _ADC_Init 0764                 _ADC_Read 076F              ??_SPI_Write 0078  
         __size_of_setup 0020                clear_ram0 075C                 _PIR1bits 000C  
               _SPI_Init 0782               _ADCON0bits 001F               _ADCON1bits 009F  
             SPI_Write@a 0078            __size_of_main 0032               _OSCCONbits 008F  
