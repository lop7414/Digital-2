

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 20:10:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0013                     _SSPBUF	set	19
   286  0014                     _SSPCON	set	20
   287  0007                     _PORTC	set	7
   288  0006                     _PORTB	set	6
   289  0009                     _PORTE	set	9
   290  0008                     _PORTDbits	set	8
   291  0008                     _PORTD	set	8
   292  0006                     _PORTBbits	set	6
   293  0063                     _SSPIF	set	99
   294  0094                     _SSPSTATbits	set	148
   295  0087                     _TRISCbits	set	135
   296  008F                     _OSCCONbits	set	143
   297  0088                     _TRISD	set	136
   298  0087                     _TRISC	set	135
   299  0086                     _TRISB	set	134
   300  0089                     _TRISE	set	137
   301  0189                     _ANSELH	set	393
   302  0188                     _ANSEL	set	392
   303                           
   304                           	psect	cinit
   305  07F9                     start_initialization:	
   306                           ; #config settings
   307                           
   308  07F9                     __initialization:
   309                           
   310                           ; Clear objects allocated to COMMON
   311  07F9  01F5               	clrf	__pbssCOMMON& (0+127)
   312  07FA  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   313  07FB  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   314  07FC                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  07FC                     __end_of__initialization:
   318  07FC  0183               	clrf	3
   319  07FD  120A  118A  2F61   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  0075                     __pbssCOMMON:
   323  0075                     _Ready:
   324  0075                     	ds	1
   325  0076                     _START:
   326  0076                     	ds	1
   327  0077                     _BBB:
   328  0077                     	ds	1
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_setup:
   333  0070                     ??_setup:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_SPI_Init:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_SPI_Init:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_PLUS:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ??_PLUS:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_MINUS:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_MINUS:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_SPI_Ready:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ??_SPI_Ready:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?_SPI_Write:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ??_SPI_Write:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0070                     ?_main:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0070                     SPI_Write@a:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0070                     SPI_Ready@a:	
   373                           ; 1 bytes @ 0x0
   374                           
   375                           
   376                           ; 1 bytes @ 0x0
   377  0070                     	ds	2
   378  0072                     SPI_Init@a:
   379                           
   380                           ; 1 bytes @ 0x2
   381  0072                     	ds	1
   382  0073                     ??_main:
   383                           
   384                           ; 1 bytes @ 0x3
   385  0073                     	ds	2
   386                           
   387                           	psect	maintext
   388  0761                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 66 in file "S2.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          2       0       0       0       0
   411 ;;      Totals:         2       0       0       0       0
   412 ;;Total ram usage:        2 bytes
   413 ;; Hardware stack levels required when called:    1
   414 ;; This function calls:
   415 ;;		_MINUS
   416 ;;		_PLUS
   417 ;;		_SPI_Init
   418 ;;		_SPI_Ready
   419 ;;		_SPI_Write
   420 ;;		_setup
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _main
   428  0761                     _main:
   429  0761                     l753:	
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   432                           
   433                           
   434                           ;S2.c: 68:     setup();
   435  0761  120A  118A  26F0  120A  118A  	fcall	_setup
   436  0766                     l755:
   437                           
   438                           ;S2.c: 76:         SPI_Init(3);
   439  0766  3003               	movlw	3
   440  0767  120A  118A  2717  120A  118A  	fcall	_SPI_Init
   441  076C                     l757:
   442                           
   443                           ;S2.c: 78:         if (PORTBbits.RB1 == 0){
   444  076C  1283               	bcf	3,5	;RP0=0, select bank0
   445  076D  1303               	bcf	3,6	;RP1=0, select bank0
   446  076E  1886               	btfsc	6,1	;volatile
   447  076F  2F71               	goto	u31
   448  0770  2F72               	goto	u30
   449  0771                     u31:
   450  0771  2F78               	goto	l763
   451  0772                     u30:
   452  0772                     l759:
   453                           
   454                           ;S2.c: 79:             if (PORTBbits.RB2 == 0){
   455  0772  1906               	btfsc	6,2	;volatile
   456  0773  2F75               	goto	u41
   457  0774  2F76               	goto	u40
   458  0775                     u41:
   459  0775  2F78               	goto	l763
   460  0776                     u40:
   461  0776                     l761:
   462                           
   463                           ;S2.c: 80:                 START = 1;
   464  0776  01F6               	clrf	_START
   465  0777  0AF6               	incf	_START,f
   466  0778                     l763:
   467                           
   468                           ;S2.c: 84:         if (START==1){
   469  0778  0376               	decf	_START,w
   470  0779  1D03               	btfss	3,2
   471  077A  2F7C               	goto	u51
   472  077B  2F7D               	goto	u50
   473  077C                     u51:
   474  077C  2FC1               	goto	l781
   475  077D                     u50:
   476  077D                     l765:
   477                           
   478                           ;S2.c: 85:             if (PORTBbits.RB1 == 1){
   479  077D  1C86               	btfss	6,1	;volatile
   480  077E  2F80               	goto	u61
   481  077F  2F81               	goto	u60
   482  0780                     u61:
   483  0780  2F87               	goto	l771
   484  0781                     u60:
   485  0781                     l767:
   486                           
   487                           ;S2.c: 86:                 PLUS();
   488  0781  120A  118A  26E2  120A  118A  	fcall	_PLUS
   489  0786                     l769:
   490                           
   491                           ;S2.c: 87:                 START = 0;
   492  0786  01F6               	clrf	_START
   493  0787                     l771:
   494                           
   495                           ;S2.c: 90:             if (PORTBbits.RB2 == 1){
   496  0787  1283               	bcf	3,5	;RP0=0, select bank0
   497  0788  1303               	bcf	3,6	;RP1=0, select bank0
   498  0789  1D06               	btfss	6,2	;volatile
   499  078A  2F8C               	goto	u71
   500  078B  2F8D               	goto	u70
   501  078C                     u71:
   502  078C  2FC1               	goto	l781
   503  078D                     u70:
   504  078D                     l773:
   505                           
   506                           ;S2.c: 91:                 MINUS();
   507  078D  120A  118A  26CA  120A  118A  	fcall	_MINUS
   508  0792                     l775:
   509                           
   510                           ;S2.c: 92:                 START = 0;
   511  0792  01F6               	clrf	_START
   512  0793  2FC1               	goto	l781
   513  0794                     l777:
   514                           
   515                           ;S2.c: 98:                 PORTD = 0;
   516  0794  1283               	bcf	3,5	;RP0=0, select bank0
   517  0795  1303               	bcf	3,6	;RP1=0, select bank0
   518  0796  0188               	clrf	8	;volatile
   519                           
   520                           ;S2.c: 99:             break;
   521  0797  2FE9               	goto	l783
   522  0798                     l60:	
   523                           ;S2.c: 101:             case 1:
   524                           
   525                           
   526                           ;S2.c: 102:                 PORTDbits.RD1 = 0;
   527  0798  1283               	bcf	3,5	;RP0=0, select bank0
   528  0799  1303               	bcf	3,6	;RP1=0, select bank0
   529  079A  1088               	bcf	8,1	;volatile
   530                           
   531                           ;S2.c: 103:                 PORTDbits.RD0 = 1;
   532  079B  1408               	bsf	8,0	;volatile
   533                           
   534                           ;S2.c: 104:             break;
   535  079C  2FE9               	goto	l783
   536  079D                     l61:	
   537                           ;S2.c: 106:             case 2:
   538                           
   539                           
   540                           ;S2.c: 107:                 PORTDbits.RD2 = 0;
   541  079D  1283               	bcf	3,5	;RP0=0, select bank0
   542  079E  1303               	bcf	3,6	;RP1=0, select bank0
   543  079F  1108               	bcf	8,2	;volatile
   544                           
   545                           ;S2.c: 108:                 PORTDbits.RD1 = 1;
   546  07A0  1488               	bsf	8,1	;volatile
   547                           
   548                           ;S2.c: 109:             break;
   549  07A1  2FE9               	goto	l783
   550  07A2                     l62:	
   551                           ;S2.c: 111:             case 3:
   552                           
   553                           
   554                           ;S2.c: 112:                 PORTDbits.RD3 = 0;
   555  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   556  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   557  07A4  1188               	bcf	8,3	;volatile
   558                           
   559                           ;S2.c: 113:                 PORTDbits.RD2 = 1;
   560  07A5  1508               	bsf	8,2	;volatile
   561                           
   562                           ;S2.c: 114:             break;
   563  07A6  2FE9               	goto	l783
   564  07A7                     l63:	
   565                           ;S2.c: 116:             case 4:
   566                           
   567                           
   568                           ;S2.c: 117:                 PORTDbits.RD4 = 0;
   569  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   570  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   571  07A9  1208               	bcf	8,4	;volatile
   572                           
   573                           ;S2.c: 118:                 PORTDbits.RD3 = 1;
   574  07AA  1588               	bsf	8,3	;volatile
   575                           
   576                           ;S2.c: 119:             break;
   577  07AB  2FE9               	goto	l783
   578  07AC                     l64:	
   579                           ;S2.c: 121:             case 5:
   580                           
   581                           
   582                           ;S2.c: 122:                 PORTDbits.RD5 = 0;
   583  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   584  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   585  07AE  1288               	bcf	8,5	;volatile
   586                           
   587                           ;S2.c: 123:                 PORTDbits.RD4 = 1;
   588  07AF  1608               	bsf	8,4	;volatile
   589                           
   590                           ;S2.c: 124:             break;
   591  07B0  2FE9               	goto	l783
   592  07B1                     l65:	
   593                           ;S2.c: 126:             case 6:
   594                           
   595                           
   596                           ;S2.c: 127:                 PORTDbits.RD6 = 0;
   597  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   598  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   599  07B3  1308               	bcf	8,6	;volatile
   600                           
   601                           ;S2.c: 128:                 PORTDbits.RD5 = 1;
   602  07B4  1688               	bsf	8,5	;volatile
   603                           
   604                           ;S2.c: 129:             break;
   605  07B5  2FE9               	goto	l783
   606  07B6                     l66:	
   607                           ;S2.c: 131:             case 7:
   608                           
   609                           
   610                           ;S2.c: 132:                 PORTDbits.RD7 = 0;
   611  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   612  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   613  07B8  1388               	bcf	8,7	;volatile
   614                           
   615                           ;S2.c: 133:                 PORTDbits.RD6 = 1;
   616  07B9  1708               	bsf	8,6	;volatile
   617                           
   618                           ;S2.c: 134:             break;
   619  07BA  2FE9               	goto	l783
   620  07BB                     l67:	
   621                           ;S2.c: 136:             case 8:
   622                           
   623                           
   624                           ;S2.c: 137:                 PORTDbits.RD7 = 1;
   625  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   626  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   627  07BD  1788               	bsf	8,7	;volatile
   628                           
   629                           ;S2.c: 138:             break;
   630  07BE  2FE9               	goto	l783
   631  07BF                     l779:
   632                           
   633                           ;S2.c: 141:                 BBB = 0;
   634  07BF  01F7               	clrf	_BBB
   635                           
   636                           ;S2.c: 142:         }
   637  07C0  2FE9               	goto	l783
   638  07C1                     l781:
   639  07C1  0877               	movf	_BBB,w
   640  07C2  00F3               	movwf	??_main
   641  07C3  01F4               	clrf	??_main+1
   642                           
   643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   644                           ; Switch size 1, requested type "simple"
   645                           ; Number of cases is 1, Range of values is 0 to 0
   646                           ; switch strategies available:
   647                           ; Name         Instructions Cycles
   648                           ; simple_byte            4     3 (average)
   649                           ; direct_byte           11     8 (fixed)
   650                           ; jumptable            260     6 (fixed)
   651                           ;	Chosen strategy is simple_byte
   652  07C4  0874               	movf	??_main+1,w
   653  07C5  3A00               	xorlw	0	; case 0
   654  07C6  1903               	skipnz
   655  07C7  2FC9               	goto	l833
   656  07C8  2FE9               	goto	l783
   657  07C9                     l833:
   658                           
   659                           ; Switch size 1, requested type "simple"
   660                           ; Number of cases is 10, Range of values is 0 to 9
   661                           ; switch strategies available:
   662                           ; Name         Instructions Cycles
   663                           ; simple_byte           31    16 (average)
   664                           ; direct_byte           38     8 (fixed)
   665                           ; jumptable            260     6 (fixed)
   666                           ;	Chosen strategy is simple_byte
   667  07C9  0873               	movf	??_main,w
   668  07CA  3A00               	xorlw	0	; case 0
   669  07CB  1903               	skipnz
   670  07CC  2F94               	goto	l777
   671  07CD  3A01               	xorlw	1	; case 1
   672  07CE  1903               	skipnz
   673  07CF  2F98               	goto	l60
   674  07D0  3A03               	xorlw	3	; case 2
   675  07D1  1903               	skipnz
   676  07D2  2F9D               	goto	l61
   677  07D3  3A01               	xorlw	1	; case 3
   678  07D4  1903               	skipnz
   679  07D5  2FA2               	goto	l62
   680  07D6  3A07               	xorlw	7	; case 4
   681  07D7  1903               	skipnz
   682  07D8  2FA7               	goto	l63
   683  07D9  3A01               	xorlw	1	; case 5
   684  07DA  1903               	skipnz
   685  07DB  2FAC               	goto	l64
   686  07DC  3A03               	xorlw	3	; case 6
   687  07DD  1903               	skipnz
   688  07DE  2FB1               	goto	l65
   689  07DF  3A01               	xorlw	1	; case 7
   690  07E0  1903               	skipnz
   691  07E1  2FB6               	goto	l66
   692  07E2  3A0F               	xorlw	15	; case 8
   693  07E3  1903               	skipnz
   694  07E4  2FBB               	goto	l67
   695  07E5  3A01               	xorlw	1	; case 9
   696  07E6  1903               	skipnz
   697  07E7  2FBF               	goto	l779
   698  07E8  2FE9               	goto	l783
   699  07E9                     l783:
   700                           
   701                           ;S2.c: 144:         SPI_Ready(Ready);
   702  07E9  3000               	movlw	0
   703  07EA  120A  118A  26D6  120A  118A  	fcall	_SPI_Ready
   704                           
   705                           ;S2.c: 146:         SPI_Write(BBB);
   706  07EF  0877               	movf	_BBB,w
   707  07F0  120A  118A  26C3  120A  118A  	fcall	_SPI_Write
   708  07F5  2F66               	goto	l755
   709  07F6  120A  118A  2800   	ljmp	start
   710  07F9                     __end_of_main:
   711                           
   712                           	psect	text1
   713  06F0                     __ptext1:	
   714 ;; *************** function _setup *****************
   715 ;; Defined at:
   716 ;;		line 156 in file "S2.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0
   733 ;;      Totals:         0       0       0       0       0
   734 ;;Total ram usage:        0 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _setup
   745  06F0                     _setup:
   746  06F0                     l703:	
   747                           ;incstack = 0
   748                           ; Regs used in _setup: [wreg+status,2+status,0]
   749                           
   750                           
   751                           ;S2.c: 157:     TRISE = 0;
   752  06F0  1683               	bsf	3,5	;RP0=1, select bank1
   753  06F1  1303               	bcf	3,6	;RP1=0, select bank1
   754  06F2  0189               	clrf	9	;volatile
   755                           
   756                           ;S2.c: 158:     PORTE = 0;
   757  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   758  06F4  1303               	bcf	3,6	;RP1=0, select bank0
   759  06F5  0189               	clrf	9	;volatile
   760                           
   761                           ;S2.c: 159:     ANSEL = 0;
   762  06F6  1683               	bsf	3,5	;RP0=1, select bank3
   763  06F7  1703               	bsf	3,6	;RP1=1, select bank3
   764  06F8  0188               	clrf	8	;volatile
   765                           
   766                           ;S2.c: 160:     ANSELH = 0;
   767  06F9  0189               	clrf	9	;volatile
   768                           
   769                           ;S2.c: 161:     TRISB = 0;
   770  06FA  1683               	bsf	3,5	;RP0=1, select bank1
   771  06FB  1303               	bcf	3,6	;RP1=0, select bank1
   772  06FC  0186               	clrf	6	;volatile
   773                           
   774                           ;S2.c: 162:     PORTB = 0;
   775  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   776  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   777  06FF  0186               	clrf	6	;volatile
   778                           
   779                           ;S2.c: 163:     TRISC = 0;
   780  0700  1683               	bsf	3,5	;RP0=1, select bank1
   781  0701  1303               	bcf	3,6	;RP1=0, select bank1
   782  0702  0187               	clrf	7	;volatile
   783                           
   784                           ;S2.c: 164:     PORTC = 0;
   785  0703  1283               	bcf	3,5	;RP0=0, select bank0
   786  0704  1303               	bcf	3,6	;RP1=0, select bank0
   787  0705  0187               	clrf	7	;volatile
   788                           
   789                           ;S2.c: 165:     TRISD = 0;
   790  0706  1683               	bsf	3,5	;RP0=1, select bank1
   791  0707  1303               	bcf	3,6	;RP1=0, select bank1
   792  0708  0188               	clrf	8	;volatile
   793                           
   794                           ;S2.c: 166:     PORTD = 0;
   795  0709  1283               	bcf	3,5	;RP0=0, select bank0
   796  070A  1303               	bcf	3,6	;RP1=0, select bank0
   797  070B  0188               	clrf	8	;volatile
   798  070C                     l705:
   799                           
   800                           ;S2.c: 168:     OSCCONbits.IRCF = 0b110;
   801  070C  1683               	bsf	3,5	;RP0=1, select bank1
   802  070D  1303               	bcf	3,6	;RP1=0, select bank1
   803  070E  080F               	movf	15,w	;volatile
   804  070F  398F               	andlw	-113
   805  0710  3860               	iorlw	96
   806  0711  008F               	movwf	15	;volatile
   807  0712                     l707:
   808                           
   809                           ;S2.c: 169:     OSCCONbits.OSTS= 0;
   810  0712  118F               	bcf	15,3	;volatile
   811  0713                     l709:
   812                           
   813                           ;S2.c: 170:     OSCCONbits.HTS = 0;
   814  0713  110F               	bcf	15,2	;volatile
   815  0714                     l711:
   816                           
   817                           ;S2.c: 171:     OSCCONbits.LTS = 0;
   818  0714  108F               	bcf	15,1	;volatile
   819  0715                     l713:
   820                           
   821                           ;S2.c: 172:     OSCCONbits.SCS = 1;
   822  0715  140F               	bsf	15,0	;volatile
   823  0716                     l74:
   824  0716  0008               	return
   825  0717                     __end_of_setup:
   826                           
   827                           	psect	text2
   828  06C3                     __ptext2:	
   829 ;; *************** function _SPI_Write *****************
   830 ;; Defined at:
   831 ;;		line 51 in file "SPI.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  a               1    wreg     unsigned char 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  a               1    0[COMMON] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         1       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0
   848 ;;      Totals:         1       0       0       0       0
   849 ;;Total ram usage:        1 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _SPI_Write
   860  06C3                     _SPI_Write:
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _SPI_Write: [wreg]
   864                           ;SPI_Write@a stored from wreg
   865  06C3  00F0               	movwf	SPI_Write@a
   866  06C4                     l749:
   867                           
   868                           ;SPI.c: 52:     SSPBUF = a;
   869  06C4  0870               	movf	SPI_Write@a,w
   870  06C5  1283               	bcf	3,5	;RP0=0, select bank0
   871  06C6  1303               	bcf	3,6	;RP1=0, select bank0
   872  06C7  0093               	movwf	19	;volatile
   873  06C8                     l751:
   874                           
   875                           ;SPI.c: 53:     SSPIF = 0;
   876  06C8  118C               	bcf	12,3	;volatile
   877  06C9                     l102:
   878  06C9  0008               	return
   879  06CA                     __end_of_SPI_Write:
   880                           
   881                           	psect	text3
   882  06D6                     __ptext3:	
   883 ;; *************** function _SPI_Ready *****************
   884 ;; Defined at:
   885 ;;		line 56 in file "SPI.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  a               1    wreg     unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  a               1    0[COMMON] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   899 ;;      Params:         0       0       0       0       0
   900 ;;      Locals:         0       0       0       0       0
   901 ;;      Temps:          0       0       0       0       0
   902 ;;      Totals:         0       0       0       0       0
   903 ;;Total ram usage:        0 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function _SPI_Ready
   914  06D6                     _SPI_Ready:
   915  06D6                     l743:	
   916                           ;incstack = 0
   917                           ; Regs used in _SPI_Ready: [wreg]
   918                           
   919                           
   920                           ;SPI.c: 57:     if (SSPSTATbits.BF == 1){
   921  06D6  1683               	bsf	3,5	;RP0=1, select bank1
   922  06D7  1303               	bcf	3,6	;RP1=0, select bank1
   923  06D8  1C14               	btfss	20,0	;volatile
   924  06D9  2EDB               	goto	u11
   925  06DA  2EDC               	goto	u10
   926  06DB                     u11:
   927  06DB  2EDD               	goto	l105
   928  06DC                     u10:
   929  06DC                     l745:
   930                           
   931                           ;SPI.c: 59:     }
   932  06DC  2EE1               	goto	l108
   933  06DD                     l105:	
   934                           ;SPI.c: 60:     else if (SSPSTATbits.BF == 0){
   935                           
   936  06DD  1814               	btfsc	20,0	;volatile
   937  06DE  2EE0               	goto	u21
   938  06DF  2EE1               	goto	u20
   939  06E0                     u21:
   940  06E0  2EE1               	goto	l108
   941  06E1                     u20:
   942  06E1                     l747:
   943  06E1                     l108:
   944  06E1  0008               	return
   945  06E2                     __end_of_SPI_Ready:
   946                           
   947                           	psect	text4
   948  0717                     __ptext4:	
   949 ;; *************** function _SPI_Init *****************
   950 ;; Defined at:
   951 ;;		line 8 in file "SPI.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  a               1    wreg     unsigned char 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  a               1    2[COMMON] unsigned char 
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       0       0       0       0
   966 ;;      Locals:         1       0       0       0       0
   967 ;;      Temps:          2       0       0       0       0
   968 ;;      Totals:         3       0       0       0       0
   969 ;;Total ram usage:        3 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           
   979                           ;psect for function _SPI_Init
   980  0717                     _SPI_Init:
   981                           
   982                           ;incstack = 0
   983                           ; Regs used in _SPI_Init: [wreg-fsr0h+status,2+status,0]
   984                           ;SPI_Init@a stored from wreg
   985  0717  00F2               	movwf	SPI_Init@a
   986  0718                     l715:
   987                           
   988                           ;SPI.c: 9:     switch(a){
   989  0718  2F4A               	goto	l725
   990  0719                     l94:	
   991                           ;SPI.c: 10:         case 0:
   992                           
   993                           
   994                           ;SPI.c: 11:             TRISCbits.TRISC5 = 0;
   995  0719  1683               	bsf	3,5	;RP0=1, select bank1
   996  071A  1303               	bcf	3,6	;RP1=0, select bank1
   997  071B  1287               	bcf	7,5	;volatile
   998                           
   999                           ;SPI.c: 12:             TRISCbits.TRISC3 = 0;
  1000  071C  1187               	bcf	7,3	;volatile
  1001                           
  1002                           ;SPI.c: 13:             SSPSTATbits.SMP = 0;
  1003  071D  1394               	bcf	20,7	;volatile
  1004                           
  1005                           ;SPI.c: 14:             SSPSTATbits.CKE = 0;
  1006  071E  1314               	bcf	20,6	;volatile
  1007                           
  1008                           ;SPI.c: 15:             SSPSTATbits.BF = 0;
  1009  071F  1014               	bcf	20,0	;volatile
  1010  0720                     l717:
  1011                           
  1012                           ;SPI.c: 16:             SSPCON = 0b00100000;
  1013  0720  3020               	movlw	32
  1014  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1016  0723  0094               	movwf	20	;volatile
  1017                           
  1018                           ;SPI.c: 19:             break;
  1019  0724  2F60               	goto	l99
  1020  0725                     l96:	
  1021                           ;SPI.c: 20:         case 1:
  1022                           
  1023                           
  1024                           ;SPI.c: 21:             TRISCbits.TRISC5 = 0;
  1025  0725  1683               	bsf	3,5	;RP0=1, select bank1
  1026  0726  1303               	bcf	3,6	;RP1=0, select bank1
  1027  0727  1287               	bcf	7,5	;volatile
  1028                           
  1029                           ;SPI.c: 22:             TRISCbits.TRISC3 = 0;
  1030  0728  1187               	bcf	7,3	;volatile
  1031                           
  1032                           ;SPI.c: 23:             SSPSTATbits.SMP = 0;
  1033  0729  1394               	bcf	20,7	;volatile
  1034                           
  1035                           ;SPI.c: 24:             SSPSTATbits.CKE = 0;
  1036  072A  1314               	bcf	20,6	;volatile
  1037                           
  1038                           ;SPI.c: 25:             SSPSTATbits.BF = 0;
  1039  072B  1014               	bcf	20,0	;volatile
  1040  072C                     l719:
  1041                           
  1042                           ;SPI.c: 26:             SSPCON = 0b00100001;
  1043  072C  3021               	movlw	33
  1044  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1045  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1046  072F  0094               	movwf	20	;volatile
  1047                           
  1048                           ;SPI.c: 29:             break;
  1049  0730  2F60               	goto	l99
  1050  0731                     l97:	
  1051                           ;SPI.c: 30:         case 2:
  1052                           
  1053                           
  1054                           ;SPI.c: 31:             TRISCbits.TRISC5 = 0;
  1055  0731  1683               	bsf	3,5	;RP0=1, select bank1
  1056  0732  1303               	bcf	3,6	;RP1=0, select bank1
  1057  0733  1287               	bcf	7,5	;volatile
  1058                           
  1059                           ;SPI.c: 32:             TRISCbits.TRISC3 = 0;
  1060  0734  1187               	bcf	7,3	;volatile
  1061                           
  1062                           ;SPI.c: 33:             SSPSTATbits.SMP = 0;
  1063  0735  1394               	bcf	20,7	;volatile
  1064                           
  1065                           ;SPI.c: 34:             SSPSTATbits.CKE = 0;
  1066  0736  1314               	bcf	20,6	;volatile
  1067                           
  1068                           ;SPI.c: 35:             SSPSTATbits.BF = 0;
  1069  0737  1014               	bcf	20,0	;volatile
  1070  0738                     l721:
  1071                           
  1072                           ;SPI.c: 36:             SSPCON = 0b00100010;
  1073  0738  3022               	movlw	34
  1074  0739  1283               	bcf	3,5	;RP0=0, select bank0
  1075  073A  1303               	bcf	3,6	;RP1=0, select bank0
  1076  073B  0094               	movwf	20	;volatile
  1077                           
  1078                           ;SPI.c: 39:             break;
  1079  073C  2F60               	goto	l99
  1080  073D                     l98:	
  1081                           ;SPI.c: 40:         case 3:
  1082                           
  1083                           
  1084                           ;SPI.c: 41:             TRISCbits.TRISC5 = 0;
  1085  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1086  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1087  073F  1287               	bcf	7,5	;volatile
  1088                           
  1089                           ;SPI.c: 42:             TRISCbits.TRISC3 = 1;
  1090  0740  1587               	bsf	7,3	;volatile
  1091                           
  1092                           ;SPI.c: 43:             TRISCbits.TRISC4 = 1;
  1093  0741  1607               	bsf	7,4	;volatile
  1094                           
  1095                           ;SPI.c: 44:             SSPSTATbits.SMP = 0;
  1096  0742  1394               	bcf	20,7	;volatile
  1097                           
  1098                           ;SPI.c: 45:             SSPSTATbits.CKE = 0;
  1099  0743  1314               	bcf	20,6	;volatile
  1100                           
  1101                           ;SPI.c: 46:             SSPSTATbits.BF = 0;
  1102  0744  1014               	bcf	20,0	;volatile
  1103  0745                     l723:
  1104                           
  1105                           ;SPI.c: 47:             SSPCON = 0b00100100;
  1106  0745  3024               	movlw	36
  1107  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0748  0094               	movwf	20	;volatile
  1110                           
  1111                           ;SPI.c: 48:     }
  1112  0749  2F60               	goto	l99
  1113  074A                     l725:
  1114  074A  0872               	movf	SPI_Init@a,w
  1115  074B  00F0               	movwf	??_SPI_Init
  1116  074C  01F1               	clrf	??_SPI_Init+1
  1117                           
  1118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1119                           ; Switch size 1, requested type "simple"
  1120                           ; Number of cases is 1, Range of values is 0 to 0
  1121                           ; switch strategies available:
  1122                           ; Name         Instructions Cycles
  1123                           ; simple_byte            4     3 (average)
  1124                           ; direct_byte           11     8 (fixed)
  1125                           ; jumptable            260     6 (fixed)
  1126                           ;	Chosen strategy is simple_byte
  1127  074D  0871               	movf	??_SPI_Init+1,w
  1128  074E  3A00               	xorlw	0	; case 0
  1129  074F  1903               	skipnz
  1130  0750  2F52               	goto	l835
  1131  0751  2F60               	goto	l99
  1132  0752                     l835:
  1133                           
  1134                           ; Switch size 1, requested type "simple"
  1135                           ; Number of cases is 4, Range of values is 0 to 3
  1136                           ; switch strategies available:
  1137                           ; Name         Instructions Cycles
  1138                           ; simple_byte           13     7 (average)
  1139                           ; direct_byte           20     8 (fixed)
  1140                           ; jumptable            260     6 (fixed)
  1141                           ;	Chosen strategy is simple_byte
  1142  0752  0870               	movf	??_SPI_Init,w
  1143  0753  3A00               	xorlw	0	; case 0
  1144  0754  1903               	skipnz
  1145  0755  2F19               	goto	l94
  1146  0756  3A01               	xorlw	1	; case 1
  1147  0757  1903               	skipnz
  1148  0758  2F25               	goto	l96
  1149  0759  3A03               	xorlw	3	; case 2
  1150  075A  1903               	skipnz
  1151  075B  2F31               	goto	l97
  1152  075C  3A01               	xorlw	1	; case 3
  1153  075D  1903               	skipnz
  1154  075E  2F3D               	goto	l98
  1155  075F  2F60               	goto	l99
  1156  0760                     l99:
  1157  0760  0008               	return
  1158  0761                     __end_of_SPI_Init:
  1159                           
  1160                           	psect	text5
  1161  06E2                     __ptext5:	
  1162 ;; *************** function _PLUS *****************
  1163 ;; Defined at:
  1164 ;;		line 178 in file "S2.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1178 ;;      Params:         0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0
  1180 ;;      Temps:          2       0       0       0       0
  1181 ;;      Totals:         2       0       0       0       0
  1182 ;;Total ram usage:        2 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function _PLUS
  1193  06E2                     _PLUS:
  1194  06E2                     l731:	
  1195                           ;incstack = 0
  1196                           ; Regs used in _PLUS: [wreg+status,2+status,0]
  1197                           
  1198                           
  1199                           ;S2.c: 179:     BBB++;
  1200  06E2  3001               	movlw	1
  1201  06E3  00F0               	movwf	??_PLUS
  1202  06E4  0870               	movf	??_PLUS,w
  1203  06E5  07F7               	addwf	_BBB,f
  1204  06E6                     l733:
  1205                           
  1206                           ;S2.c: 180:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1207  06E6  3082               	movlw	130
  1208  06E7  00F1               	movwf	??_PLUS+1
  1209  06E8  30DD               	movlw	221
  1210  06E9  00F0               	movwf	??_PLUS
  1211  06EA                     u87:
  1212  06EA  0BF0               	decfsz	??_PLUS,f
  1213  06EB  2EEA               	goto	u87
  1214  06EC  0BF1               	decfsz	??_PLUS+1,f
  1215  06ED  2EEA               	goto	u87
  1216  06EE  2EEF               	nop2
  1217  06EF                     l77:
  1218  06EF  0008               	return
  1219  06F0                     __end_of_PLUS:
  1220                           
  1221                           	psect	text6
  1222  06CA                     __ptext6:	
  1223 ;; *************** function _MINUS *****************
  1224 ;; Defined at:
  1225 ;;		line 184 in file "S2.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          2       0       0       0       0
  1242 ;;      Totals:         2       0       0       0       0
  1243 ;;Total ram usage:        2 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _MINUS
  1254  06CA                     _MINUS:
  1255  06CA                     l737:	
  1256                           ;incstack = 0
  1257                           ; Regs used in _MINUS: [wreg+status,2+status,0]
  1258                           
  1259                           
  1260                           ;S2.c: 185:     BBB--;
  1261  06CA  3001               	movlw	1
  1262  06CB  02F7               	subwf	_BBB,f
  1263  06CC                     l739:
  1264                           
  1265                           ;S2.c: 186:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1266  06CC  3082               	movlw	130
  1267  06CD  00F1               	movwf	??_MINUS+1
  1268  06CE  30DD               	movlw	221
  1269  06CF  00F0               	movwf	??_MINUS
  1270  06D0                     u97:
  1271  06D0  0BF0               	decfsz	??_MINUS,f
  1272  06D1  2ED0               	goto	u97
  1273  06D2  0BF1               	decfsz	??_MINUS+1,f
  1274  06D3  2ED0               	goto	u97
  1275  06D4  2ED5               	nop2
  1276  06D5                     l80:
  1277  06D5  0008               	return
  1278  06D6                     __end_of_MINUS:
  1279  007E                     btemp	set	126	;btemp
  1280  007E                     wtemp0	set	126
  1281                           
  1282                           	psect	config
  1283                           
  1284                           ;Config register CONFIG1 @ 0x2007
  1285                           ;	Oscillator Selection bits
  1286                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1287                           ;	Watchdog Timer Enable bit
  1288                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1289                           ;	Power-up Timer Enable bit
  1290                           ;	PWRTE = OFF, PWRT disabled
  1291                           ;	RE3/MCLR pin function select bit
  1292                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1293                           ;	Code Protection bit
  1294                           ;	CP = OFF, Program memory code protection is disabled
  1295                           ;	Data Code Protection bit
  1296                           ;	CPD = OFF, Data memory code protection is disabled
  1297                           ;	Brown Out Reset Selection bits
  1298                           ;	BOREN = OFF, BOR disabled
  1299                           ;	Internal External Switchover bit
  1300                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1301                           ;	Fail-Safe Clock Monitor Enabled bit
  1302                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1303                           ;	Low Voltage Programming Enable bit
  1304                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1305                           ;	In-Circuit Debugger Mode bit
  1306                           ;	DEBUG = 0x1, unprogrammed default
  1307  2007                     	org	8199
  1308  2007  20D4               	dw	8404
  1309                           
  1310                           ;Config register CONFIG2 @ 0x2008
  1311                           ;	Brown-out Reset Selection bit
  1312                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1313                           ;	Flash Program Memory Self Write Enable bits
  1314                           ;	WRT = OFF, Write protection off
  1315  2008                     	org	8200
  1316  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              3 COMMON     2     2      0
                              _MINUS
                               _PLUS
                           _SPI_Init
                          _SPI_Ready
                          _SPI_Write
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Ready                                            1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PLUS                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MINUS                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MINUS
   _PLUS
   _SPI_Init
   _SPI_Ready
   _SPI_Write
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       8      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 20:10:54 2021

            _SSPSTATbits 0094                       l60 0798                       l61 079D  
                     l62 07A2                       l63 07A7                       l80 06D5  
                     l64 07AC                       l65 07B1                       l74 0716  
                     l66 07B6                       l67 07BB                       l77 06EF  
                     l94 0719                       l96 0725                       l97 0731  
                     l98 073D                       l99 0760                       u10 06DC  
                     u11 06DB                       u20 06E1                       u21 06E0  
                     u30 0772                       u31 0771                       u40 0776  
                     u41 0775                       u50 077D                       u51 077C  
                     u60 0781                       u61 0780                       u70 078D  
                     u71 078C                       u87 06EA                       u97 06D0  
                    l102 06C9                      l105 06DD                      l108 06E1  
                    _BBB 0077                      l711 0714                      l703 06F0  
                    l721 0738                      l713 0715                      l705 070C  
                    l731 06E2                      l723 0745                      l715 0718  
                    l707 0712                      l733 06E6                      l717 0720  
                    l725 074A                      l709 0713                      l719 072C  
                    l743 06D6                      l751 06C8                      l737 06CA  
                    l745 06DC                      l833 07C9                      l761 0776  
                    l753 0761                      l739 06CC                      l835 0752  
                    l747 06E1                      l771 0787                      l763 0778  
                    l755 0766                      l749 06C4                      l773 078D  
                    l765 077D                      l781 07C1                      l757 076C  
                    l783 07E9                      l775 0792                      l767 0781  
                    l759 0772                      l777 0794                      l769 0786  
                    l779 07BF                     _PLUS 06E2                     _main 0761  
                   btemp 007E                     start 0000                    ?_PLUS 0070  
                  ?_main 0070                    _ANSEL 0188                    _MINUS 06CA  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _START 0076                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _Ready 0075                    _setup 06F0  
       __end_of_SPI_Init 0761       __size_of_SPI_Ready 000C                    status 0003  
                  wtemp0 007E       __size_of_SPI_Write 0007             __end_of_PLUS 06F0  
        __initialization 07F9             __end_of_main 07F9                   ??_PLUS 0070  
                 ??_main 0073                   ?_MINUS 0070                   ?_setup 0070  
                 _ANSELH 0189                   _SSPCON 0014                   _SSPBUF 0013  
      __end_of_SPI_Ready 06E2        __end_of_SPI_Write 06CA  __end_of__initialization 07FC  
          __end_of_MINUS 06D6           __pcstackCOMMON 0070            __end_of_setup 0717  
              ?_SPI_Init 0070                  ??_MINUS 0070                  ??_setup 0070  
             __pmaintext 0761               ??_SPI_Init 0070                SPI_Init@a 0072  
                __ptext1 06F0                  __ptext2 06C3                  __ptext3 06D6  
                __ptext4 0717                  __ptext5 06E2                  __ptext6 06CA  
   end_of_initialization 07FC                _PORTBbits 0006                _PORTDbits 0008  
              _TRISCbits 0087                _SPI_Ready 06D6                _SPI_Write 06C3  
      __size_of_SPI_Init 004A      start_initialization 07F9               ?_SPI_Ready 0070  
             ?_SPI_Write 0070              __pbssCOMMON 0075                ___latbits 0002  
         __size_of_MINUS 000C              ??_SPI_Ready 0070              ??_SPI_Write 0070  
         __size_of_setup 0027                 _SPI_Init 0717               SPI_Ready@a 0070  
             SPI_Write@a 0070            __size_of_PLUS 000E            __size_of_main 0098  
             _OSCCONbits 008F  
