

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 17:15:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0007                     _PORTC	set	7
   283  0006                     _PORTB	set	6
   284  0009                     _PORTE	set	9
   285  0008                     _PORTDbits	set	8
   286  0008                     _PORTD	set	8
   287  0006                     _PORTBbits	set	6
   288  008F                     _OSCCONbits	set	143
   289  0088                     _TRISD	set	136
   290  0087                     _TRISC	set	135
   291  0086                     _TRISB	set	134
   292  0089                     _TRISE	set	137
   293  0189                     _ANSELH	set	393
   294  0188                     _ANSEL	set	392
   295                           
   296                           	psect	cinit
   297  07FA                     start_initialization:	
   298                           ; #config settings
   299                           
   300  07FA                     __initialization:
   301                           
   302                           ; Clear objects allocated to COMMON
   303  07FA  01F4               	clrf	__pbssCOMMON& (0+127)
   304  07FB  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   305  07FC                     end_of_initialization:	
   306                           ;End of C runtime variable initialization code
   307                           
   308  07FC                     __end_of__initialization:
   309  07FC  0183               	clrf	3
   310  07FD  120A  118A  2F75   	ljmp	_main	;jump to C main() function
   311                           
   312                           	psect	bssCOMMON
   313  0074                     __pbssCOMMON:
   314  0074                     _START:
   315  0074                     	ds	1
   316  0075                     _BBB:
   317  0075                     	ds	1
   318                           
   319                           	psect	cstackCOMMON
   320  0070                     __pcstackCOMMON:
   321  0070                     ?_setup:
   322  0070                     ??_setup:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_PLUS:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ??_PLUS:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_MINUS:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_MINUS:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_main:	
   338                           ; 1 bytes @ 0x0
   339                           
   340                           
   341                           ; 1 bytes @ 0x0
   342  0070                     	ds	2
   343  0072                     ??_main:
   344                           
   345                           ; 1 bytes @ 0x2
   346  0072                     	ds	2
   347                           
   348                           	psect	maintext
   349  0775                     __pmaintext:	
   350 ;;
   351 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   352 ;;
   353 ;; *************** function _main *****************
   354 ;; Defined at:
   355 ;;		line 65 in file "S2.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : B00/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0
   371 ;;      Temps:          2       0       0       0       0
   372 ;;      Totals:         2       0       0       0       0
   373 ;;Total ram usage:        2 bytes
   374 ;; Hardware stack levels required when called:    1
   375 ;; This function calls:
   376 ;;		_MINUS
   377 ;;		_PLUS
   378 ;;		_setup
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _main
   386  0775                     _main:
   387  0775                     l688:	
   388                           ;incstack = 0
   389                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   390                           
   391                           
   392                           ;S2.c: 67:     setup();
   393  0775  120A  118A  274E  120A  118A  	fcall	_setup
   394  077A                     l690:
   395                           
   396                           ;S2.c: 74:         if (PORTBbits.RB1 == 0){
   397  077A  1283               	bcf	3,5	;RP0=0, select bank0
   398  077B  1303               	bcf	3,6	;RP1=0, select bank0
   399  077C  1886               	btfsc	6,1	;volatile
   400  077D  2F7F               	goto	u11
   401  077E  2F80               	goto	u10
   402  077F                     u11:
   403  077F  2F86               	goto	l696
   404  0780                     u10:
   405  0780                     l692:
   406                           
   407                           ;S2.c: 75:             if (PORTBbits.RB2 == 0){
   408  0780  1906               	btfsc	6,2	;volatile
   409  0781  2F83               	goto	u21
   410  0782  2F84               	goto	u20
   411  0783                     u21:
   412  0783  2F86               	goto	l696
   413  0784                     u20:
   414  0784                     l694:
   415                           
   416                           ;S2.c: 76:                 START = 1;
   417  0784  01F4               	clrf	_START
   418  0785  0AF4               	incf	_START,f
   419  0786                     l696:
   420                           
   421                           ;S2.c: 80:         if (START==1){
   422  0786  0374               	decf	_START,w
   423  0787  1D03               	btfss	3,2
   424  0788  2F8A               	goto	u31
   425  0789  2F8B               	goto	u30
   426  078A                     u31:
   427  078A  2FCF               	goto	l714
   428  078B                     u30:
   429  078B                     l698:
   430                           
   431                           ;S2.c: 81:             if (PORTBbits.RB1 == 1){
   432  078B  1C86               	btfss	6,1	;volatile
   433  078C  2F8E               	goto	u41
   434  078D  2F8F               	goto	u40
   435  078E                     u41:
   436  078E  2F95               	goto	l704
   437  078F                     u40:
   438  078F                     l700:
   439                           
   440                           ;S2.c: 82:                 PLUS();
   441  078F  120A  118A  2740  120A  118A  	fcall	_PLUS
   442  0794                     l702:
   443                           
   444                           ;S2.c: 83:                 START = 0;
   445  0794  01F4               	clrf	_START
   446  0795                     l704:
   447                           
   448                           ;S2.c: 86:             if (PORTBbits.RB2 == 1){
   449  0795  1283               	bcf	3,5	;RP0=0, select bank0
   450  0796  1303               	bcf	3,6	;RP1=0, select bank0
   451  0797  1D06               	btfss	6,2	;volatile
   452  0798  2F9A               	goto	u51
   453  0799  2F9B               	goto	u50
   454  079A                     u51:
   455  079A  2FCF               	goto	l714
   456  079B                     u50:
   457  079B                     l706:
   458                           
   459                           ;S2.c: 87:                 MINUS();
   460  079B  120A  118A  2734  120A  118A  	fcall	_MINUS
   461  07A0                     l708:
   462                           
   463                           ;S2.c: 88:                 START = 0;
   464  07A0  01F4               	clrf	_START
   465  07A1  2FCF               	goto	l714
   466  07A2                     l710:
   467                           
   468                           ;S2.c: 94:                 PORTD = 0;
   469  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   470  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   471  07A4  0188               	clrf	8	;volatile
   472                           
   473                           ;S2.c: 95:             break;
   474  07A5  2F7A               	goto	l690
   475  07A6                     l52:	
   476                           ;S2.c: 97:             case 1:
   477                           
   478                           
   479                           ;S2.c: 98:                 PORTDbits.RD1 = 0;
   480  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   481  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   482  07A8  1088               	bcf	8,1	;volatile
   483                           
   484                           ;S2.c: 99:                 PORTDbits.RD0 = 1;
   485  07A9  1408               	bsf	8,0	;volatile
   486                           
   487                           ;S2.c: 100:             break;
   488  07AA  2F7A               	goto	l690
   489  07AB                     l53:	
   490                           ;S2.c: 102:             case 2:
   491                           
   492                           
   493                           ;S2.c: 103:                 PORTDbits.RD2 = 0;
   494  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   495  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   496  07AD  1108               	bcf	8,2	;volatile
   497                           
   498                           ;S2.c: 104:                 PORTDbits.RD1 = 1;
   499  07AE  1488               	bsf	8,1	;volatile
   500                           
   501                           ;S2.c: 105:             break;
   502  07AF  2F7A               	goto	l690
   503  07B0                     l54:	
   504                           ;S2.c: 107:             case 3:
   505                           
   506                           
   507                           ;S2.c: 108:                 PORTDbits.RD3 = 0;
   508  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   509  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   510  07B2  1188               	bcf	8,3	;volatile
   511                           
   512                           ;S2.c: 109:                 PORTDbits.RD2 = 1;
   513  07B3  1508               	bsf	8,2	;volatile
   514                           
   515                           ;S2.c: 110:             break;
   516  07B4  2F7A               	goto	l690
   517  07B5                     l55:	
   518                           ;S2.c: 112:             case 4:
   519                           
   520                           
   521                           ;S2.c: 113:                 PORTDbits.RD4 = 0;
   522  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   523  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   524  07B7  1208               	bcf	8,4	;volatile
   525                           
   526                           ;S2.c: 114:                 PORTDbits.RD3 = 1;
   527  07B8  1588               	bsf	8,3	;volatile
   528                           
   529                           ;S2.c: 115:             break;
   530  07B9  2F7A               	goto	l690
   531  07BA                     l56:	
   532                           ;S2.c: 117:             case 5:
   533                           
   534                           
   535                           ;S2.c: 118:                 PORTDbits.RD5 = 0;
   536  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   537  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   538  07BC  1288               	bcf	8,5	;volatile
   539                           
   540                           ;S2.c: 119:                 PORTDbits.RD4 = 1;
   541  07BD  1608               	bsf	8,4	;volatile
   542                           
   543                           ;S2.c: 120:             break;
   544  07BE  2F7A               	goto	l690
   545  07BF                     l57:	
   546                           ;S2.c: 122:             case 6:
   547                           
   548                           
   549                           ;S2.c: 123:                 PORTDbits.RD6 = 0;
   550  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   551  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   552  07C1  1308               	bcf	8,6	;volatile
   553                           
   554                           ;S2.c: 124:                 PORTDbits.RD5 = 1;
   555  07C2  1688               	bsf	8,5	;volatile
   556                           
   557                           ;S2.c: 125:             break;
   558  07C3  2F7A               	goto	l690
   559  07C4                     l58:	
   560                           ;S2.c: 127:             case 7:
   561                           
   562                           
   563                           ;S2.c: 128:                 PORTDbits.RD7 = 0;
   564  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   565  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   566  07C6  1388               	bcf	8,7	;volatile
   567                           
   568                           ;S2.c: 129:                 PORTDbits.RD6 = 1;
   569  07C7  1708               	bsf	8,6	;volatile
   570                           
   571                           ;S2.c: 130:             break;
   572  07C8  2F7A               	goto	l690
   573  07C9                     l59:	
   574                           ;S2.c: 132:             case 8:
   575                           
   576                           
   577                           ;S2.c: 133:                 PORTDbits.RD7 = 1;
   578  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   579  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   580  07CB  1788               	bsf	8,7	;volatile
   581                           
   582                           ;S2.c: 134:             break;
   583  07CC  2F7A               	goto	l690
   584  07CD                     l712:
   585                           
   586                           ;S2.c: 137:                 BBB = 0;
   587  07CD  01F5               	clrf	_BBB
   588                           
   589                           ;S2.c: 138:         }
   590  07CE  2F7A               	goto	l690
   591  07CF                     l714:
   592  07CF  0875               	movf	_BBB,w
   593  07D0  00F2               	movwf	??_main
   594  07D1  01F3               	clrf	??_main+1
   595                           
   596                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   597                           ; Switch size 1, requested type "simple"
   598                           ; Number of cases is 1, Range of values is 0 to 0
   599                           ; switch strategies available:
   600                           ; Name         Instructions Cycles
   601                           ; simple_byte            4     3 (average)
   602                           ; direct_byte           11     8 (fixed)
   603                           ; jumptable            260     6 (fixed)
   604                           ;	Chosen strategy is simple_byte
   605  07D2  0873               	movf	??_main+1,w
   606  07D3  3A00               	xorlw	0	; case 0
   607  07D4  1903               	skipnz
   608  07D5  2FD7               	goto	l740
   609  07D6  2F7A               	goto	l690
   610  07D7                     l740:
   611                           
   612                           ; Switch size 1, requested type "simple"
   613                           ; Number of cases is 10, Range of values is 0 to 9
   614                           ; switch strategies available:
   615                           ; Name         Instructions Cycles
   616                           ; simple_byte           31    16 (average)
   617                           ; direct_byte           38     8 (fixed)
   618                           ; jumptable            260     6 (fixed)
   619                           ;	Chosen strategy is simple_byte
   620  07D7  0872               	movf	??_main,w
   621  07D8  3A00               	xorlw	0	; case 0
   622  07D9  1903               	skipnz
   623  07DA  2FA2               	goto	l710
   624  07DB  3A01               	xorlw	1	; case 1
   625  07DC  1903               	skipnz
   626  07DD  2FA6               	goto	l52
   627  07DE  3A03               	xorlw	3	; case 2
   628  07DF  1903               	skipnz
   629  07E0  2FAB               	goto	l53
   630  07E1  3A01               	xorlw	1	; case 3
   631  07E2  1903               	skipnz
   632  07E3  2FB0               	goto	l54
   633  07E4  3A07               	xorlw	7	; case 4
   634  07E5  1903               	skipnz
   635  07E6  2FB5               	goto	l55
   636  07E7  3A01               	xorlw	1	; case 5
   637  07E8  1903               	skipnz
   638  07E9  2FBA               	goto	l56
   639  07EA  3A03               	xorlw	3	; case 6
   640  07EB  1903               	skipnz
   641  07EC  2FBF               	goto	l57
   642  07ED  3A01               	xorlw	1	; case 7
   643  07EE  1903               	skipnz
   644  07EF  2FC4               	goto	l58
   645  07F0  3A0F               	xorlw	15	; case 8
   646  07F1  1903               	skipnz
   647  07F2  2FC9               	goto	l59
   648  07F3  3A01               	xorlw	1	; case 9
   649  07F4  1903               	skipnz
   650  07F5  2FCD               	goto	l712
   651  07F6  2F7A               	goto	l690
   652  07F7  120A  118A  2800   	ljmp	start
   653  07FA                     __end_of_main:
   654                           
   655                           	psect	text1
   656  074E                     __ptext1:	
   657 ;; *************** function _setup *****************
   658 ;; Defined at:
   659 ;;		line 147 in file "S2.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2, status,0
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          0       0       0       0       0
   676 ;;      Totals:         0       0       0       0       0
   677 ;;Total ram usage:        0 bytes
   678 ;; Hardware stack levels used:    1
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _setup
   688  074E                     _setup:
   689  074E                     l664:	
   690                           ;incstack = 0
   691                           ; Regs used in _setup: [wreg+status,2+status,0]
   692                           
   693                           
   694                           ;S2.c: 148:     TRISE = 0;
   695  074E  1683               	bsf	3,5	;RP0=1, select bank1
   696  074F  1303               	bcf	3,6	;RP1=0, select bank1
   697  0750  0189               	clrf	9	;volatile
   698                           
   699                           ;S2.c: 149:     PORTE = 0;
   700  0751  1283               	bcf	3,5	;RP0=0, select bank0
   701  0752  1303               	bcf	3,6	;RP1=0, select bank0
   702  0753  0189               	clrf	9	;volatile
   703                           
   704                           ;S2.c: 150:     ANSEL = 0;
   705  0754  1683               	bsf	3,5	;RP0=1, select bank3
   706  0755  1703               	bsf	3,6	;RP1=1, select bank3
   707  0756  0188               	clrf	8	;volatile
   708                           
   709                           ;S2.c: 151:     ANSELH = 0;
   710  0757  0189               	clrf	9	;volatile
   711                           
   712                           ;S2.c: 152:     TRISB = 0;
   713  0758  1683               	bsf	3,5	;RP0=1, select bank1
   714  0759  1303               	bcf	3,6	;RP1=0, select bank1
   715  075A  0186               	clrf	6	;volatile
   716                           
   717                           ;S2.c: 153:     PORTB = 0;
   718  075B  1283               	bcf	3,5	;RP0=0, select bank0
   719  075C  1303               	bcf	3,6	;RP1=0, select bank0
   720  075D  0186               	clrf	6	;volatile
   721                           
   722                           ;S2.c: 154:     TRISC = 0;
   723  075E  1683               	bsf	3,5	;RP0=1, select bank1
   724  075F  1303               	bcf	3,6	;RP1=0, select bank1
   725  0760  0187               	clrf	7	;volatile
   726                           
   727                           ;S2.c: 155:     PORTC = 0;
   728  0761  1283               	bcf	3,5	;RP0=0, select bank0
   729  0762  1303               	bcf	3,6	;RP1=0, select bank0
   730  0763  0187               	clrf	7	;volatile
   731                           
   732                           ;S2.c: 156:     TRISD = 0;
   733  0764  1683               	bsf	3,5	;RP0=1, select bank1
   734  0765  1303               	bcf	3,6	;RP1=0, select bank1
   735  0766  0188               	clrf	8	;volatile
   736                           
   737                           ;S2.c: 157:     PORTD = 0;
   738  0767  1283               	bcf	3,5	;RP0=0, select bank0
   739  0768  1303               	bcf	3,6	;RP1=0, select bank0
   740  0769  0188               	clrf	8	;volatile
   741  076A                     l666:
   742                           
   743                           ;S2.c: 159:     OSCCONbits.IRCF = 0b110;
   744  076A  1683               	bsf	3,5	;RP0=1, select bank1
   745  076B  1303               	bcf	3,6	;RP1=0, select bank1
   746  076C  080F               	movf	15,w	;volatile
   747  076D  398F               	andlw	-113
   748  076E  3860               	iorlw	96
   749  076F  008F               	movwf	15	;volatile
   750  0770                     l668:
   751                           
   752                           ;S2.c: 160:     OSCCONbits.OSTS= 0;
   753  0770  118F               	bcf	15,3	;volatile
   754  0771                     l670:
   755                           
   756                           ;S2.c: 161:     OSCCONbits.HTS = 0;
   757  0771  110F               	bcf	15,2	;volatile
   758  0772                     l672:
   759                           
   760                           ;S2.c: 162:     OSCCONbits.LTS = 0;
   761  0772  108F               	bcf	15,1	;volatile
   762  0773                     l674:
   763                           
   764                           ;S2.c: 163:     OSCCONbits.SCS = 1;
   765  0773  140F               	bsf	15,0	;volatile
   766  0774                     l66:
   767  0774  0008               	return
   768  0775                     __end_of_setup:
   769                           
   770                           	psect	text2
   771  0740                     __ptext2:	
   772 ;; *************** function _PLUS *****************
   773 ;; Defined at:
   774 ;;		line 169 in file "S2.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0
   790 ;;      Temps:          2       0       0       0       0
   791 ;;      Totals:         2       0       0       0       0
   792 ;;Total ram usage:        2 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _PLUS
   803  0740                     _PLUS:
   804  0740                     l676:	
   805                           ;incstack = 0
   806                           ; Regs used in _PLUS: [wreg+status,2+status,0]
   807                           
   808                           
   809                           ;S2.c: 170:     BBB++;
   810  0740  3001               	movlw	1
   811  0741  00F0               	movwf	??_PLUS
   812  0742  0870               	movf	??_PLUS,w
   813  0743  07F5               	addwf	_BBB,f
   814  0744                     l678:
   815                           
   816                           ;S2.c: 171:     _delay((unsigned long)((100)*(4000000/4000.0)));
   817  0744  3082               	movlw	130
   818  0745  00F1               	movwf	??_PLUS+1
   819  0746  30DD               	movlw	221
   820  0747  00F0               	movwf	??_PLUS
   821  0748                     u67:
   822  0748  0BF0               	decfsz	??_PLUS,f
   823  0749  2F48               	goto	u67
   824  074A  0BF1               	decfsz	??_PLUS+1,f
   825  074B  2F48               	goto	u67
   826  074C  2F4D               	nop2
   827  074D                     l69:
   828  074D  0008               	return
   829  074E                     __end_of_PLUS:
   830                           
   831                           	psect	text3
   832  0734                     __ptext3:	
   833 ;; *************** function _MINUS *****************
   834 ;; Defined at:
   835 ;;		line 175 in file "S2.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          2       0       0       0       0
   852 ;;      Totals:         2       0       0       0       0
   853 ;;Total ram usage:        2 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_main
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           
   863                           ;psect for function _MINUS
   864  0734                     _MINUS:
   865  0734                     l682:	
   866                           ;incstack = 0
   867                           ; Regs used in _MINUS: [wreg+status,2+status,0]
   868                           
   869                           
   870                           ;S2.c: 176:     BBB--;
   871  0734  3001               	movlw	1
   872  0735  02F5               	subwf	_BBB,f
   873  0736                     l684:
   874                           
   875                           ;S2.c: 177:     _delay((unsigned long)((100)*(4000000/4000.0)));
   876  0736  3082               	movlw	130
   877  0737  00F1               	movwf	??_MINUS+1
   878  0738  30DD               	movlw	221
   879  0739  00F0               	movwf	??_MINUS
   880  073A                     u77:
   881  073A  0BF0               	decfsz	??_MINUS,f
   882  073B  2F3A               	goto	u77
   883  073C  0BF1               	decfsz	??_MINUS+1,f
   884  073D  2F3A               	goto	u77
   885  073E  2F3F               	nop2
   886  073F                     l72:
   887  073F  0008               	return
   888  0740                     __end_of_MINUS:
   889  007E                     btemp	set	126	;btemp
   890  007E                     wtemp0	set	126
   891                           
   892                           	psect	config
   893                           
   894                           ;Config register CONFIG1 @ 0x2007
   895                           ;	Oscillator Selection bits
   896                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   897                           ;	Watchdog Timer Enable bit
   898                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   899                           ;	Power-up Timer Enable bit
   900                           ;	PWRTE = OFF, PWRT disabled
   901                           ;	RE3/MCLR pin function select bit
   902                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   903                           ;	Code Protection bit
   904                           ;	CP = OFF, Program memory code protection is disabled
   905                           ;	Data Code Protection bit
   906                           ;	CPD = OFF, Data memory code protection is disabled
   907                           ;	Brown Out Reset Selection bits
   908                           ;	BOREN = OFF, BOR disabled
   909                           ;	Internal External Switchover bit
   910                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   911                           ;	Fail-Safe Clock Monitor Enabled bit
   912                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   913                           ;	Low Voltage Programming Enable bit
   914                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   915                           ;	In-Circuit Debugger Mode bit
   916                           ;	DEBUG = 0x1, unprogrammed default
   917  2007                     	org	8199
   918  2007  20D4               	dw	8404
   919                           
   920                           ;Config register CONFIG2 @ 0x2008
   921                           ;	Brown-out Reset Selection bit
   922                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   923                           ;	Flash Program Memory Self Write Enable bits
   924                           ;	WRT = OFF, Write protection off
   925  2008                     	org	8200
   926  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MINUS
    _main->_PLUS

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
                              _MINUS
                               _PLUS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PLUS                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MINUS                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MINUS
   _PLUS
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 17:15:47 2021

                     l52 07A6                       l53 07AB                       l54 07B0  
                     l55 07B5                       l72 073F                       l56 07BA  
                     l57 07BF                       l66 0774                       l58 07C4  
                     l59 07C9                       l69 074D                       u10 0780  
                     u11 077F                       u20 0784                       u21 0783  
                     u30 078B                       u31 078A                       u40 078F  
                     u41 078E                       u50 079B                       u51 079A  
                     u67 0748                       u77 073A                      _BBB 0075  
                    l700 078F                      l710 07A2                      l702 0794  
                    l712 07CD                      l704 0795                      l706 079B  
                    l714 07CF                      l740 07D7                      l708 07A0  
                    l670 0771                      l672 0772                      l664 074E  
                    l682 0734                      l674 0773                      l666 076A  
                    l690 077A                      l684 0736                      l676 0740  
                    l668 0770                      l692 0780                      l678 0744  
                    l694 0784                      l696 0786                      l688 0775  
                    l698 078B                     _PLUS 0740                     _main 0775  
                   btemp 007E                     start 0000                    ?_PLUS 0070  
                  ?_main 0070                    _ANSEL 0188                    _MINUS 0734  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _START 0074                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _setup 074E                    status 0003                    wtemp0 007E  
           __end_of_PLUS 074E          __initialization 07FA             __end_of_main 07FA  
                 ??_PLUS 0070                   ??_main 0072                   ?_MINUS 0070  
                 ?_setup 0070                   _ANSELH 0189  __end_of__initialization 07FC  
          __end_of_MINUS 0740           __pcstackCOMMON 0070            __end_of_setup 0775  
                ??_MINUS 0070                  ??_setup 0070               __pmaintext 0775  
                __ptext1 074E                  __ptext2 0740                  __ptext3 0734  
   end_of_initialization 07FC                _PORTBbits 0006                _PORTDbits 0008  
    start_initialization 07FA              __pbssCOMMON 0074                ___latbits 0002  
         __size_of_MINUS 000C           __size_of_setup 0027            __size_of_PLUS 000E  
          __size_of_main 0085               _OSCCONbits 008F  
