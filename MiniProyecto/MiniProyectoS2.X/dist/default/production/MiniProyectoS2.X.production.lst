

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 01:44:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0013                     _SSPBUF	set	19
   290  0014                     _SSPCON	set	20
   291  0009                     _PORTE	set	9
   292  0007                     _PORTC	set	7
   293  0006                     _PORTB	set	6
   294  0005                     _PORTA	set	5
   295  0008                     _PORTDbits	set	8
   296  0008                     _PORTD	set	8
   297  0006                     _PORTBbits	set	6
   298  0063                     _SSPIF	set	99
   299  0094                     _SSPSTATbits	set	148
   300  0094                     _SSPSTAT	set	148
   301  0085                     _TRISAbits	set	133
   302  0088                     _TRISD	set	136
   303  0087                     _TRISC	set	135
   304  0086                     _TRISB	set	134
   305  0085                     _TRISA	set	133
   306  043B                     _TRISC3	set	1083
   307  043C                     _TRISC4	set	1084
   308  043D                     _TRISC5	set	1085
   309  0189                     _ANSELH	set	393
   310  0188                     _ANSEL	set	392
   311                           
   312                           	psect	cinit
   313  000F                     start_initialization:	
   314                           ; #config settings
   315                           
   316  000F                     __initialization:
   317                           
   318                           ; Clear objects allocated to COMMON
   319  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   320  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   321  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   322  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   323  0013                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  0013                     __end_of__initialization:
   327  0013  0183               	clrf	3
   328  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0075                     __pbssCOMMON:
   332  0075                     _slave:
   333  0075                     	ds	1
   334  0076                     _Ready:
   335  0076                     	ds	1
   336  0077                     _START:
   337  0077                     	ds	1
   338  0078                     _BBB:
   339  0078                     	ds	1
   340                           
   341                           	psect	cstackCOMMON
   342  0070                     __pcstackCOMMON:
   343  0070                     ?_SPI_Read:
   344  0070                     ??_SPI_Read:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_SPI_Write:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ??_SPI_Write:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_setup:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_PLUS:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_MINUS:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_ISR:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_spiReceiveWait:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ??_spiReceiveWait:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     SPI_Write@a:	
   375                           ; 1 bytes @ 0x0
   376                           
   377                           
   378                           ; 1 bytes @ 0x0
   379  0070                     	ds	1
   380  0071                     ??_ISR:
   381                           
   382                           ; 1 bytes @ 0x1
   383  0071                     	ds	3
   384  0074                     ??_setup:
   385  0074                     ??_SPI_Init:	
   386                           ; 1 bytes @ 0x4
   387                           
   388  0074                     SPI_Init@sType:	
   389                           ; 1 bytes @ 0x4
   390                           
   391                           
   392                           ; 1 bytes @ 0x4
   393  0074                     	ds	1
   394                           
   395                           	psect	cstackBANK0
   396  0020                     __pcstackBANK0:
   397  0020                     ?_SPI_Init:
   398  0020                     ??_PLUS:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0020                     ??_MINUS:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0020                     SPI_Init@sDataSample:	
   405                           ; 1 bytes @ 0x0
   406                           
   407                           
   408                           ; 1 bytes @ 0x0
   409  0020                     	ds	1
   410  0021                     SPI_Init@sClockIdle:
   411                           
   412                           ; 1 bytes @ 0x1
   413  0021                     	ds	1
   414  0022                     SPI_Init@sTransmitEdge:
   415                           
   416                           ; 1 bytes @ 0x2
   417  0022                     	ds	1
   418  0023                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x3
   421  0023                     	ds	2
   422                           
   423                           	psect	maintext
   424  0017                     __pmaintext:	
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 75 in file "S2.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       2       0       0       0
   447 ;;      Totals:         0       2       0       0       0
   448 ;;Total ram usage:        2 bytes
   449 ;; Hardware stack levels required when called:    4
   450 ;; This function calls:
   451 ;;		_MINUS
   452 ;;		_PLUS
   453 ;;		_SPI_Init
   454 ;;		_setup
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _main
   462  0017                     _main:
   463  0017                     l918:	
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   466                           
   467                           
   468                           ;S2.c: 77:     setup();
   469  0017  120A  118A  20D4  120A  118A  	fcall	_setup
   470  001C                     l63:	
   471                           ;S2.c: 83:     while (1) {
   472                           
   473                           
   474                           ;S2.c: 85:         SPI_Init(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   475  001C  1283               	bcf	3,5	;RP0=0, select bank0
   476  001D  1303               	bcf	3,6	;RP1=0, select bank0
   477  001E  01A0               	clrf	SPI_Init@sDataSample
   478  001F  01A1               	clrf	SPI_Init@sClockIdle
   479  0020  01A2               	clrf	SPI_Init@sTransmitEdge
   480  0021  3024               	movlw	36
   481  0022  120A  118A  2097  120A  118A  	fcall	_SPI_Init
   482  0027                     l920:
   483                           
   484                           ;S2.c: 87:         if (PORTBbits.RB1 == 0){
   485  0027  1283               	bcf	3,5	;RP0=0, select bank0
   486  0028  1303               	bcf	3,6	;RP1=0, select bank0
   487  0029  1886               	btfsc	6,1	;volatile
   488  002A  282C               	goto	u161
   489  002B  282D               	goto	u160
   490  002C                     u161:
   491  002C  2833               	goto	l926
   492  002D                     u160:
   493  002D                     l922:
   494                           
   495                           ;S2.c: 88:             if (PORTBbits.RB2 == 0){
   496  002D  1906               	btfsc	6,2	;volatile
   497  002E  2830               	goto	u171
   498  002F  2831               	goto	u170
   499  0030                     u171:
   500  0030  2833               	goto	l926
   501  0031                     u170:
   502  0031                     l924:
   503                           
   504                           ;S2.c: 89:                 START = 1;
   505  0031  01F7               	clrf	_START
   506  0032  0AF7               	incf	_START,f
   507  0033                     l926:
   508                           
   509                           ;S2.c: 93:         if (START==1){
   510  0033  0377               	decf	_START,w
   511  0034  1D03               	btfss	3,2
   512  0035  2837               	goto	u181
   513  0036  2838               	goto	u180
   514  0037                     u181:
   515  0037  286A               	goto	l944
   516  0038                     u180:
   517  0038                     l928:
   518                           
   519                           ;S2.c: 94:             if (PORTBbits.RB1 == 1){
   520  0038  1C86               	btfss	6,1	;volatile
   521  0039  283B               	goto	u191
   522  003A  283C               	goto	u190
   523  003B                     u191:
   524  003B  2842               	goto	l934
   525  003C                     u190:
   526  003C                     l930:
   527                           
   528                           ;S2.c: 95:                 PLUS();
   529  003C  120A  118A  20EA  120A  118A  	fcall	_PLUS
   530  0041                     l932:
   531                           
   532                           ;S2.c: 96:                 START = 0;
   533  0041  01F7               	clrf	_START
   534  0042                     l934:
   535                           
   536                           ;S2.c: 99:             if (PORTBbits.RB2 == 1){
   537  0042  1283               	bcf	3,5	;RP0=0, select bank0
   538  0043  1303               	bcf	3,6	;RP1=0, select bank0
   539  0044  1D06               	btfss	6,2	;volatile
   540  0045  2847               	goto	u201
   541  0046  2848               	goto	u200
   542  0047                     u201:
   543  0047  286A               	goto	l944
   544  0048                     u200:
   545  0048                     l936:
   546                           
   547                           ;S2.c: 100:                 MINUS();
   548  0048  120A  118A  2100  120A  118A  	fcall	_MINUS
   549  004D                     l938:
   550                           
   551                           ;S2.c: 101:                 START = 0;
   552  004D  01F7               	clrf	_START
   553  004E  286A               	goto	l944
   554  004F                     l940:
   555                           
   556                           ;S2.c: 107:                 PORTD = 0;
   557  004F  0188               	clrf	8	;volatile
   558                           
   559                           ;S2.c: 108:             break;
   560  0050  281C               	goto	l63
   561  0051                     l72:	
   562                           ;S2.c: 110:             case 1:
   563                           
   564                           
   565                           ;S2.c: 111:                 PORTDbits.RD1 = 0;
   566  0051  1088               	bcf	8,1	;volatile
   567                           
   568                           ;S2.c: 112:                 PORTDbits.RD0 = 1;
   569  0052  1408               	bsf	8,0	;volatile
   570                           
   571                           ;S2.c: 113:             break;
   572  0053  281C               	goto	l63
   573  0054                     l73:	
   574                           ;S2.c: 115:             case 2:
   575                           
   576                           
   577                           ;S2.c: 116:                 PORTDbits.RD2 = 0;
   578  0054  1108               	bcf	8,2	;volatile
   579                           
   580                           ;S2.c: 117:                 PORTDbits.RD1 = 1;
   581  0055  1488               	bsf	8,1	;volatile
   582                           
   583                           ;S2.c: 118:             break;
   584  0056  281C               	goto	l63
   585  0057                     l74:	
   586                           ;S2.c: 120:             case 3:
   587                           
   588                           
   589                           ;S2.c: 121:                 PORTDbits.RD3 = 0;
   590  0057  1188               	bcf	8,3	;volatile
   591                           
   592                           ;S2.c: 122:                 PORTDbits.RD2 = 1;
   593  0058  1508               	bsf	8,2	;volatile
   594                           
   595                           ;S2.c: 123:             break;
   596  0059  281C               	goto	l63
   597  005A                     l75:	
   598                           ;S2.c: 125:             case 4:
   599                           
   600                           
   601                           ;S2.c: 126:                 PORTDbits.RD4 = 0;
   602  005A  1208               	bcf	8,4	;volatile
   603                           
   604                           ;S2.c: 127:                 PORTDbits.RD3 = 1;
   605  005B  1588               	bsf	8,3	;volatile
   606                           
   607                           ;S2.c: 128:             break;
   608  005C  281C               	goto	l63
   609  005D                     l76:	
   610                           ;S2.c: 130:             case 5:
   611                           
   612                           
   613                           ;S2.c: 131:                 PORTDbits.RD5 = 0;
   614  005D  1288               	bcf	8,5	;volatile
   615                           
   616                           ;S2.c: 132:                 PORTDbits.RD4 = 1;
   617  005E  1608               	bsf	8,4	;volatile
   618                           
   619                           ;S2.c: 133:             break;
   620  005F  281C               	goto	l63
   621  0060                     l77:	
   622                           ;S2.c: 135:             case 6:
   623                           
   624                           
   625                           ;S2.c: 136:                 PORTDbits.RD6 = 0;
   626  0060  1308               	bcf	8,6	;volatile
   627                           
   628                           ;S2.c: 137:                 PORTDbits.RD5 = 1;
   629  0061  1688               	bsf	8,5	;volatile
   630                           
   631                           ;S2.c: 138:             break;
   632  0062  281C               	goto	l63
   633  0063                     l78:	
   634                           ;S2.c: 140:             case 7:
   635                           
   636                           
   637                           ;S2.c: 141:                 PORTDbits.RD7 = 0;
   638  0063  1388               	bcf	8,7	;volatile
   639                           
   640                           ;S2.c: 142:                 PORTDbits.RD6 = 1;
   641  0064  1708               	bsf	8,6	;volatile
   642                           
   643                           ;S2.c: 143:             break;
   644  0065  281C               	goto	l63
   645  0066                     l79:	
   646                           ;S2.c: 145:             case 8:
   647                           
   648                           
   649                           ;S2.c: 146:                 PORTDbits.RD7 = 1;
   650  0066  1788               	bsf	8,7	;volatile
   651                           
   652                           ;S2.c: 147:             break;
   653  0067  281C               	goto	l63
   654  0068                     l942:
   655                           
   656                           ;S2.c: 150:                 BBB = 0;
   657  0068  01F8               	clrf	_BBB
   658                           
   659                           ;S2.c: 151:         }
   660  0069  281C               	goto	l63
   661  006A                     l944:
   662  006A  0878               	movf	_BBB,w
   663  006B  1283               	bcf	3,5	;RP0=0, select bank0
   664  006C  1303               	bcf	3,6	;RP1=0, select bank0
   665  006D  00A3               	movwf	??_main
   666  006E  01A4               	clrf	??_main+1
   667                           
   668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   669                           ; Switch size 1, requested type "simple"
   670                           ; Number of cases is 1, Range of values is 0 to 0
   671                           ; switch strategies available:
   672                           ; Name         Instructions Cycles
   673                           ; simple_byte            4     3 (average)
   674                           ; direct_byte           11     8 (fixed)
   675                           ; jumptable            260     6 (fixed)
   676                           ;	Chosen strategy is simple_byte
   677  006F  0824               	movf	??_main+1,w
   678  0070  3A00               	xorlw	0	; case 0
   679  0071  1903               	skipnz
   680  0072  2874               	goto	l982
   681  0073  281C               	goto	l63
   682  0074                     l982:
   683                           
   684                           ; Switch size 1, requested type "simple"
   685                           ; Number of cases is 10, Range of values is 0 to 9
   686                           ; switch strategies available:
   687                           ; Name         Instructions Cycles
   688                           ; simple_byte           31    16 (average)
   689                           ; direct_byte           38     8 (fixed)
   690                           ; jumptable            260     6 (fixed)
   691                           ;	Chosen strategy is simple_byte
   692  0074  0823               	movf	??_main,w
   693  0075  3A00               	xorlw	0	; case 0
   694  0076  1903               	skipnz
   695  0077  284F               	goto	l940
   696  0078  3A01               	xorlw	1	; case 1
   697  0079  1903               	skipnz
   698  007A  2851               	goto	l72
   699  007B  3A03               	xorlw	3	; case 2
   700  007C  1903               	skipnz
   701  007D  2854               	goto	l73
   702  007E  3A01               	xorlw	1	; case 3
   703  007F  1903               	skipnz
   704  0080  2857               	goto	l74
   705  0081  3A07               	xorlw	7	; case 4
   706  0082  1903               	skipnz
   707  0083  285A               	goto	l75
   708  0084  3A01               	xorlw	1	; case 5
   709  0085  1903               	skipnz
   710  0086  285D               	goto	l76
   711  0087  3A03               	xorlw	3	; case 6
   712  0088  1903               	skipnz
   713  0089  2860               	goto	l77
   714  008A  3A01               	xorlw	1	; case 7
   715  008B  1903               	skipnz
   716  008C  2863               	goto	l78
   717  008D  3A0F               	xorlw	15	; case 8
   718  008E  1903               	skipnz
   719  008F  2866               	goto	l79
   720  0090  3A01               	xorlw	1	; case 9
   721  0091  1903               	skipnz
   722  0092  2868               	goto	l942
   723  0093  281C               	goto	l63
   724  0094  120A  118A  280C   	ljmp	start
   725  0097                     __end_of_main:
   726                           
   727                           	psect	text1
   728  00D4                     __ptext1:	
   729 ;; *************** function _setup *****************
   730 ;; Defined at:
   731 ;;		line 159 in file "S2.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0
   748 ;;      Totals:         0       0       0       0       0
   749 ;;Total ram usage:        0 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    3
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_main
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _setup
   761  00D4                     _setup:
   762  00D4                     l730:	
   763                           ;incstack = 0
   764                           ; Regs used in _setup: [wreg+status,2]
   765                           
   766                           
   767                           ;S2.c: 161:     ANSEL = 0;
   768  00D4  1683               	bsf	3,5	;RP0=1, select bank3
   769  00D5  1703               	bsf	3,6	;RP1=1, select bank3
   770  00D6  0188               	clrf	8	;volatile
   771                           
   772                           ;S2.c: 162:     ANSELH= 0;
   773  00D7  0189               	clrf	9	;volatile
   774                           
   775                           ;S2.c: 163:     TRISA = 0;
   776  00D8  1683               	bsf	3,5	;RP0=1, select bank1
   777  00D9  1303               	bcf	3,6	;RP1=0, select bank1
   778  00DA  0185               	clrf	5	;volatile
   779                           
   780                           ;S2.c: 164:     TRISB = 0;
   781  00DB  0186               	clrf	6	;volatile
   782  00DC                     l732:
   783                           
   784                           ;S2.c: 165:     TRISC = 0b00010000;
   785  00DC  3010               	movlw	16
   786  00DD  0087               	movwf	7	;volatile
   787  00DE                     l734:
   788                           
   789                           ;S2.c: 166:     TRISD = 0;
   790  00DE  0188               	clrf	8	;volatile
   791  00DF                     l736:
   792                           
   793                           ;S2.c: 168:     PORTA = 0;
   794  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   795  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   796  00E1  0185               	clrf	5	;volatile
   797  00E2                     l738:
   798                           
   799                           ;S2.c: 169:     PORTB = 0;
   800  00E2  0186               	clrf	6	;volatile
   801  00E3                     l740:
   802                           
   803                           ;S2.c: 170:     PORTC = 0;
   804  00E3  0187               	clrf	7	;volatile
   805  00E4                     l742:
   806                           
   807                           ;S2.c: 171:     PORTD = 0;
   808  00E4  0188               	clrf	8	;volatile
   809  00E5                     l744:
   810                           
   811                           ;S2.c: 172:     PORTE = 0;
   812  00E5  0189               	clrf	9	;volatile
   813  00E6                     l746:
   814                           
   815                           ;S2.c: 174:     TRISAbits.TRISA5 = 1;
   816  00E6  1683               	bsf	3,5	;RP0=1, select bank1
   817  00E7  1303               	bcf	3,6	;RP1=0, select bank1
   818  00E8  1685               	bsf	5,5	;volatile
   819  00E9                     l86:
   820  00E9  0008               	return
   821  00EA                     __end_of_setup:
   822                           
   823                           	psect	text2
   824  0097                     __ptext2:	
   825 ;; *************** function _SPI_Init *****************
   826 ;; Defined at:
   827 ;;		line 8 in file "SPI.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  sType           1    wreg     enum E1349
   830 ;;  sDataSample     1    0[BANK0 ] enum E1357
   831 ;;  sClockIdle      1    1[BANK0 ] enum E1361
   832 ;;  sTransmitEdg    1    2[BANK0 ] enum E1365
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  sType           1    4[COMMON] enum E1349
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   844 ;;      Params:         0       3       0       0       0
   845 ;;      Locals:         1       0       0       0       0
   846 ;;      Temps:          0       0       0       0       0
   847 ;;      Totals:         1       3       0       0       0
   848 ;;Total ram usage:        4 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; Hardware stack levels required when called:    3
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_main
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _SPI_Init
   860  0097                     _SPI_Init:
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
   864                           ;SPI_Init@sType stored from wreg
   865  0097  00F4               	movwf	SPI_Init@sType
   866  0098                     l896:
   867                           
   868                           ;SPI.c: 8: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:     TRISC5 = 0;
   869  0098  1683               	bsf	3,5	;RP0=1, select bank1
   870  0099  1303               	bcf	3,6	;RP1=0, select bank1
   871  009A  1287               	bcf	7,5	;volatile
   872                           
   873                           ;SPI.c: 11:     TRISC4 = 1;
   874  009B  1607               	bsf	7,4	;volatile
   875                           
   876                           ;SPI.c: 13:     if(sType & 0b00000100)
   877  009C  1D74               	btfss	SPI_Init@sType,2
   878  009D  289F               	goto	u151
   879  009E  28A0               	goto	u150
   880  009F                     u151:
   881  009F  28A8               	goto	l902
   882  00A0                     u150:
   883  00A0                     l898:
   884                           
   885                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   886  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   887  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   888  00A2  0822               	movf	SPI_Init@sTransmitEdge,w
   889  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   890  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   891  00A5  0094               	movwf	20	;volatile
   892  00A6                     l900:
   893                           
   894                           ;SPI.c: 16:         TRISC3 = 1;
   895  00A6  1587               	bsf	7,3	;volatile
   896                           
   897                           ;SPI.c: 17:     }
   898  00A7  28B0               	goto	l110
   899  00A8                     l902:
   900                           
   901                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   902  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   903  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   904  00AA  0820               	movf	SPI_Init@sDataSample,w
   905  00AB  0422               	iorwf	SPI_Init@sTransmitEdge,w
   906  00AC  1683               	bsf	3,5	;RP0=1, select bank1
   907  00AD  1303               	bcf	3,6	;RP1=0, select bank1
   908  00AE  0094               	movwf	20	;volatile
   909  00AF                     l904:
   910                           
   911                           ;SPI.c: 21:         TRISC3 = 0;
   912  00AF  1187               	bcf	7,3	;volatile
   913  00B0                     l110:	
   914                           ;SPI.c: 22:     }
   915                           
   916                           
   917                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   918  00B0  0874               	movf	SPI_Init@sType,w
   919  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   920  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   921  00B3  0421               	iorwf	SPI_Init@sClockIdle,w
   922  00B4  0094               	movwf	20	;volatile
   923  00B5                     l111:
   924  00B5  0008               	return
   925  00B6                     __end_of_SPI_Init:
   926                           
   927                           	psect	text3
   928  00EA                     __ptext3:	
   929 ;; *************** function _PLUS *****************
   930 ;; Defined at:
   931 ;;		line 180 in file "S2.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   945 ;;      Params:         0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0
   947 ;;      Temps:          0       3       0       0       0
   948 ;;      Totals:         0       3       0       0       0
   949 ;;Total ram usage:        3 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    3
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           
   960                           ;psect for function _PLUS
   961  00EA                     _PLUS:
   962  00EA                     l906:	
   963                           ;incstack = 0
   964                           ; Regs used in _PLUS: [wreg+status,2+status,0]
   965                           
   966                           
   967                           ;S2.c: 181:     BBB++;
   968  00EA  3001               	movlw	1
   969  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   970  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   971  00ED  00A0               	movwf	??_PLUS
   972  00EE  0820               	movf	??_PLUS,w
   973  00EF  07F8               	addwf	_BBB,f
   974  00F0                     l908:
   975                           
   976                           ;S2.c: 182:     _delay((unsigned long)((100)*(8000000/4000.0)));
   977  00F0  3002               	movlw	2
   978  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   979  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   980  00F3  00A2               	movwf	??_PLUS+2
   981  00F4  3004               	movlw	4
   982  00F5  00A1               	movwf	??_PLUS+1
   983  00F6  30B9               	movlw	185
   984  00F7  00A0               	movwf	??_PLUS
   985  00F8                     u217:
   986  00F8  0BA0               	decfsz	??_PLUS,f
   987  00F9  28F8               	goto	u217
   988  00FA  0BA1               	decfsz	??_PLUS+1,f
   989  00FB  28F8               	goto	u217
   990  00FC  0BA2               	decfsz	??_PLUS+2,f
   991  00FD  28F8               	goto	u217
   992  00FE  28FF               	nop2
   993  00FF                     l89:
   994  00FF  0008               	return
   995  0100                     __end_of_PLUS:
   996                           
   997                           	psect	text4
   998  0100                     __ptext4:	
   999 ;; *************** function _MINUS *****************
  1000 ;; Defined at:
  1001 ;;		line 186 in file "S2.c"
  1002 ;; Parameters:    Size  Location     Type
  1003 ;;		None
  1004 ;; Auto vars:     Size  Location     Type
  1005 ;;		None
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         0       0       0       0       0
  1017 ;;      Temps:          0       3       0       0       0
  1018 ;;      Totals:         0       3       0       0       0
  1019 ;;Total ram usage:        3 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    3
  1022 ;; This function calls:
  1023 ;;		Nothing
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;; This function uses a non-reentrant model
  1027 ;;
  1028                           
  1029                           
  1030                           ;psect for function _MINUS
  1031  0100                     _MINUS:
  1032  0100                     l912:	
  1033                           ;incstack = 0
  1034                           ; Regs used in _MINUS: [wreg+status,2+status,0]
  1035                           
  1036                           
  1037                           ;S2.c: 187:     BBB--;
  1038  0100  3001               	movlw	1
  1039  0101  02F8               	subwf	_BBB,f
  1040  0102                     l914:
  1041                           
  1042                           ;S2.c: 188:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1043  0102  3002               	movlw	2
  1044  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0105  00A2               	movwf	??_MINUS+2
  1047  0106  3004               	movlw	4
  1048  0107  00A1               	movwf	??_MINUS+1
  1049  0108  30B9               	movlw	185
  1050  0109  00A0               	movwf	??_MINUS
  1051  010A                     u227:
  1052  010A  0BA0               	decfsz	??_MINUS,f
  1053  010B  290A               	goto	u227
  1054  010C  0BA1               	decfsz	??_MINUS+1,f
  1055  010D  290A               	goto	u227
  1056  010E  0BA2               	decfsz	??_MINUS+2,f
  1057  010F  290A               	goto	u227
  1058  0110  2911               	nop2
  1059  0111                     l92:
  1060  0111  0008               	return
  1061  0112                     __end_of_MINUS:
  1062                           
  1063                           	psect	text5
  1064  00B6                     __ptext5:	
  1065 ;; *************** function _ISR *****************
  1066 ;; Defined at:
  1067 ;;		line 66 in file "S2.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0, pclath, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1081 ;;      Params:         0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0
  1083 ;;      Temps:          3       0       0       0       0
  1084 ;;      Totals:         3       0       0       0       0
  1085 ;;Total ram usage:        3 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; Hardware stack levels required when called:    2
  1088 ;; This function calls:
  1089 ;;		_SPI_Read
  1090 ;;		_SPI_Write
  1091 ;; This function is called by:
  1092 ;;		Interrupt level 1
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _ISR
  1098  00B6                     _ISR:
  1099  00B6                     i1l770:
  1100                           
  1101                           ;S2.c: 67:     if (SSPIF == 1){
  1102  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1103  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1104  00B8  1D8C               	btfss	12,3	;volatile
  1105  00B9  28BB               	goto	u3_21
  1106  00BA  28BC               	goto	u3_20
  1107  00BB                     u3_21:
  1108  00BB  28CD               	goto	i1l58
  1109  00BC                     u3_20:
  1110  00BC                     i1l772:
  1111                           
  1112                           ;S2.c: 68:         slave = SPI_Read();
  1113  00BC  120A  118A  2112  120A  118A  	fcall	_SPI_Read
  1114  00C1  00F1               	movwf	??_ISR
  1115  00C2  0871               	movf	??_ISR,w
  1116  00C3  00F5               	movwf	_slave
  1117                           
  1118                           ;S2.c: 69:         SPI_Write(BBB);
  1119  00C4  0878               	movf	_BBB,w
  1120  00C5  120A  118A  2122  120A  118A  	fcall	_SPI_Write
  1121  00CA                     i1l774:
  1122                           
  1123                           ;S2.c: 70:         SSPIF = 0;
  1124  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1125  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1126  00CC  118C               	bcf	12,3	;volatile
  1127  00CD                     i1l58:
  1128  00CD  0873               	movf	??_ISR+2,w
  1129  00CE  008A               	movwf	10
  1130  00CF  0E72               	swapf	??_ISR+1,w
  1131  00D0  0083               	movwf	3
  1132  00D1  0EFE               	swapf	btemp,f
  1133  00D2  0E7E               	swapf	btemp,w
  1134  00D3  0009               	retfie
  1135  00D4                     __end_of_ISR:
  1136                           
  1137                           	psect	intentry
  1138  0004                     __pintentry:	
  1139                           ;incstack = 0
  1140                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1141                           
  1142  0004                     interrupt_function:
  1143  007E                     saved_w	set	btemp
  1144  0004  00FE               	movwf	btemp
  1145  0005  0E03               	swapf	3,w
  1146  0006  00F2               	movwf	??_ISR+1
  1147  0007  080A               	movf	10,w
  1148  0008  00F3               	movwf	??_ISR+2
  1149  0009  120A  118A  28B6   	ljmp	_ISR
  1150                           
  1151                           	psect	text6
  1152  0122                     __ptext6:	
  1153 ;; *************** function _SPI_Write *****************
  1154 ;; Defined at:
  1155 ;;		line 27 in file "SPI.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  a               1    wreg     unsigned char 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;  a               1    0[COMMON] unsigned char 
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1169 ;;      Params:         0       0       0       0       0
  1170 ;;      Locals:         1       0       0       0       0
  1171 ;;      Temps:          0       0       0       0       0
  1172 ;;      Totals:         1       0       0       0       0
  1173 ;;Total ram usage:        1 bytes
  1174 ;; Hardware stack levels used:    1
  1175 ;; This function calls:
  1176 ;;		Nothing
  1177 ;; This function is called by:
  1178 ;;		_ISR
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _SPI_Write
  1184  0122                     _SPI_Write:
  1185                           
  1186                           ;incstack = 0
  1187                           ; Regs used in _SPI_Write: [wreg]
  1188                           ;SPI_Write@a stored from wreg
  1189  0122  00F0               	movwf	SPI_Write@a
  1190  0123                     i1l728:
  1191                           
  1192                           ;SPI.c: 28:     SSPBUF = a;
  1193  0123  0870               	movf	SPI_Write@a,w
  1194  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0126  0093               	movwf	19	;volatile
  1197  0127                     i1l114:
  1198  0127  0008               	return
  1199  0128                     __end_of_SPI_Write:
  1200                           
  1201                           	psect	text7
  1202  0112                     __ptext7:	
  1203 ;; *************** function _SPI_Read *****************
  1204 ;; Defined at:
  1205 ;;		line 43 in file "SPI.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      unsigned char 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0, pclath, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0
  1222 ;;      Totals:         0       0       0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    1
  1226 ;; This function calls:
  1227 ;;		_spiReceiveWait
  1228 ;; This function is called by:
  1229 ;;		_ISR
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           
  1234                           ;psect for function _SPI_Read
  1235  0112                     _SPI_Read:
  1236  0112                     i1l722:	
  1237                           ;incstack = 0
  1238                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
  1239                           
  1240                           
  1241                           ;SPI.c: 44:     spiReceiveWait();
  1242  0112  120A  118A  211B  120A  118A  	fcall	_spiReceiveWait
  1243  0117                     i1l724:
  1244                           
  1245                           ;SPI.c: 45:     return (SSPBUF);
  1246  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0119  0813               	movf	19,w	;volatile
  1249  011A                     i1l128:
  1250  011A  0008               	return
  1251  011B                     __end_of_SPI_Read:
  1252                           
  1253                           	psect	text8
  1254  011B                     __ptext8:	
  1255 ;; *************** function _spiReceiveWait *****************
  1256 ;; Defined at:
  1257 ;;		line 31 in file "SPI.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		None
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_SPI_Read
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _spiReceiveWait
  1286  011B                     _spiReceiveWait:
  1287  011B                     i1l720:	
  1288                           ;incstack = 0
  1289                           ; Regs used in _spiReceiveWait: []
  1290                           
  1291  011B                     i1l117:	
  1292                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1293                           
  1294  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1295  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1296  011D  1C14               	btfss	20,0	;volatile
  1297  011E  2920               	goto	u1_21
  1298  011F  2921               	goto	u1_20
  1299  0120                     u1_21:
  1300  0120  291B               	goto	i1l117
  1301  0121                     u1_20:
  1302  0121                     i1l120:
  1303  0121  0008               	return
  1304  0122                     __end_of_spiReceiveWait:
  1305  007E                     btemp	set	126	;btemp
  1306  007E                     wtemp0	set	126
  1307                           
  1308                           	psect	config
  1309                           
  1310                           ;Config register CONFIG1 @ 0x2007
  1311                           ;	Oscillator Selection bits
  1312                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1313                           ;	Watchdog Timer Enable bit
  1314                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1315                           ;	Power-up Timer Enable bit
  1316                           ;	PWRTE = OFF, PWRT disabled
  1317                           ;	RE3/MCLR pin function select bit
  1318                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1319                           ;	Code Protection bit
  1320                           ;	CP = OFF, Program memory code protection is disabled
  1321                           ;	Data Code Protection bit
  1322                           ;	CPD = OFF, Data memory code protection is disabled
  1323                           ;	Brown Out Reset Selection bits
  1324                           ;	BOREN = OFF, BOR disabled
  1325                           ;	Internal External Switchover bit
  1326                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1327                           ;	Fail-Safe Clock Monitor Enabled bit
  1328                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1329                           ;	Low Voltage Programming Enable bit
  1330                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1331                           ;	In-Circuit Debugger Mode bit
  1332                           ;	DEBUG = 0x1, unprogrammed default
  1333  2007                     	org	8199
  1334  2007  20D1               	dw	8401
  1335                           
  1336                           ;Config register CONFIG2 @ 0x2008
  1337                           ;	Brown-out Reset Selection bit
  1338                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1339                           ;	Flash Program Memory Self Write Enable bits
  1340                           ;	WRT = OFF, Write protection off
  1341  2008                     	org	8200
  1342  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Init

Critical Paths under _ISR in COMMON

    _ISR->_SPI_Write

Critical Paths under _main in BANK0

    _main->_MINUS
    _main->_PLUS
    _main->_SPI_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     456
                                              3 BANK0      2     2      0
                              _MINUS
                               _PLUS
                           _SPI_Init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _PLUS                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _MINUS                                                3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MINUS
   _PLUS
   _SPI_Init
   _setup

 _ISR (ROOT)
   _SPI_Read
     _spiReceiveWait
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 01:44:49 2021

            _SSPSTATbits 0094                       l63 001C                       l72 0051  
                     l73 0054                       l74 0057                       l75 005A  
                     l92 0111                       l76 005D                       l77 0060  
                     l86 00E9                       l78 0063                       l79 0066  
                     l89 00FF                      l110 00B0                      l111 00B5  
                    _BBB 0078                      l730 00D4                      l900 00A6  
                    l740 00E3                      l732 00DC                      l902 00A8  
                    l742 00E4                      l734 00DE                      l912 0100  
                    l904 00AF                      l744 00E5                      l736 00DF  
                    l920 0027                      l914 0102                      l906 00EA  
                    l746 00E6                      l738 00E2                      l930 003C  
                    l922 002D                      l908 00F0                      l940 004F  
                    l932 0041                      l924 0031                      l942 0068  
                    l934 0042                      l926 0033                      l918 0017  
                    l936 0048                      l928 0038                      l944 006A  
                    l938 004D                      l982 0074                      l896 0098  
                    l898 00A0                      u200 0048                      u201 0047  
                    u150 00A0                      u151 009F                      u160 002D  
                    u217 00F8                      u161 002C                      u170 0031  
                    u227 010A                      u171 0030                      u180 0038  
                    u181 0037                      u190 003C                      u191 003B  
                    _ISR 00B6                     ?_ISR 0070                     i1l58 00CD  
                   _PLUS 00EA                     u1_20 0121                     u1_21 0120  
                   u3_20 00BC                     u3_21 00BB                     _main 0017  
                   btemp 007E       SPI_Init@sClockIdle 0021                     start 000C  
                  ??_ISR 0071      SPI_Init@sDataSample 0020                    ?_PLUS 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l120 0121  
                  i1l114 0127                    i1l117 011B                    i1l128 011A  
                  i1l720 011B                    i1l722 0112                    i1l724 0117  
                  i1l728 0123                    i1l770 00B6                    i1l772 00BC  
                  i1l774 00CA                    _MINUS 0100                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _START 0077                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _SSPIF 0063                    _Ready 0076    SPI_Init@sTransmitEdge 0022  
                  _slave 0075                    _setup 00D4         __end_of_SPI_Init 00B6  
       __end_of_SPI_Read 011B                    pclath 000A                    status 0003  
                  wtemp0 007E       __size_of_SPI_Write 0006             __end_of_PLUS 0100  
        __initialization 000F             __end_of_main 0097                   ??_PLUS 0020  
                 ??_main 0023                   ?_MINUS 0070                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
      __end_of_SPI_Write 0128                   saved_w 007E  __end_of__initialization 0013  
          SPI_Init@sType 0074            __end_of_MINUS 0112           __pcstackCOMMON 0070  
          __end_of_setup 00EA                ?_SPI_Init 0020                ?_SPI_Read 0070  
                ??_MINUS 0020                  ??_setup 0074               __pmaintext 0017  
             __pintentry 0004  __size_of_spiReceiveWait 0007               ??_SPI_Init 0074  
             ??_SPI_Read 0070                  _SSPSTAT 0094                  __ptext1 00D4  
                __ptext2 0097                  __ptext3 00EA                  __ptext4 0100  
                __ptext5 00B6                  __ptext6 0122                  __ptext7 0112  
                __ptext8 011B             __size_of_ISR 001E     end_of_initialization 0013  
              _PORTBbits 0006                _PORTDbits 0008                _TRISAbits 0085  
              _SPI_Write 0122           _spiReceiveWait 011B        __size_of_SPI_Init 001F  
      __size_of_SPI_Read 0009      start_initialization 000F              __end_of_ISR 00D4  
             ?_SPI_Write 0070   __end_of_spiReceiveWait 0122              __pbssCOMMON 0075  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
         __size_of_MINUS 0012              ??_SPI_Write 0070           __size_of_setup 0016  
      interrupt_function 0004                 _SPI_Init 0097                 _SPI_Read 0112  
             SPI_Write@a 0070            __size_of_PLUS 0016            __size_of_main 0080  
               intlevel1 0000         ??_spiReceiveWait 0070  
