

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 15:03:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0008                     _PORTD	set	8
   205  0006                     _PORTB	set	6
   206  0009                     _PORTE	set	9
   207  0007                     _PORTCbits	set	7
   208  0007                     _PORTC	set	7
   209  0006                     _PORTBbits	set	6
   210  008F                     _OSCCONbits	set	143
   211  0088                     _TRISD	set	136
   212  0087                     _TRISC	set	135
   213  0086                     _TRISB	set	134
   214  0089                     _TRISE	set	137
   215  0189                     _ANSELH	set	393
   216  0188                     _ANSEL	set	392
   217                           
   218                           	psect	cinit
   219  07FA                     start_initialization:	
   220                           ; #config settings
   221                           
   222  07FA                     __initialization:
   223                           
   224                           ; Clear objects allocated to COMMON
   225  07FA  01F4               	clrf	__pbssCOMMON& (0+127)
   226  07FB  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   227  07FC                     end_of_initialization:	
   228                           ;End of C runtime variable initialization code
   229                           
   230  07FC                     __end_of__initialization:
   231  07FC  0183               	clrf	3
   232  07FD  120A  118A  2F75   	ljmp	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMMON
   235  0074                     __pbssCOMMON:
   236  0074                     _START:
   237  0074                     	ds	1
   238  0075                     _BBB:
   239  0075                     	ds	1
   240                           
   241                           	psect	cstackCOMMON
   242  0070                     __pcstackCOMMON:
   243  0070                     ?_setup:
   244  0070                     ??_setup:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_PLUS:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_PLUS:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?_MINUS:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??_MINUS:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_main:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 1 bytes @ 0x0
   264  0070                     	ds	2
   265  0072                     ??_main:
   266                           
   267                           ; 1 bytes @ 0x2
   268  0072                     	ds	2
   269                           
   270                           	psect	maintext
   271  0775                     __pmaintext:	
   272 ;;
   273 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   274 ;;
   275 ;; *************** function _main *****************
   276 ;; Defined at:
   277 ;;		line 65 in file "S2.c"
   278 ;; Parameters:    Size  Location     Type
   279 ;;		None
   280 ;; Auto vars:     Size  Location     Type
   281 ;;		None
   282 ;; Return value:  Size  Location     Type
   283 ;;                  1    wreg      void 
   284 ;; Registers used:
   285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   286 ;; Tracked objects:
   287 ;;		On entry : B00/0
   288 ;;		On exit  : 0/0
   289 ;;		Unchanged: 0/0
   290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   291 ;;      Params:         0       0       0       0       0
   292 ;;      Locals:         0       0       0       0       0
   293 ;;      Temps:          2       0       0       0       0
   294 ;;      Totals:         2       0       0       0       0
   295 ;;Total ram usage:        2 bytes
   296 ;; Hardware stack levels required when called:    1
   297 ;; This function calls:
   298 ;;		_MINUS
   299 ;;		_PLUS
   300 ;;		_setup
   301 ;; This function is called by:
   302 ;;		Startup code after reset
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           
   307                           ;psect for function _main
   308  0775                     _main:
   309  0775                     l688:	
   310                           ;incstack = 0
   311                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   312                           
   313                           
   314                           ;S2.c: 67:     setup();
   315  0775  120A  118A  274E  120A  118A  	fcall	_setup
   316  077A                     l690:
   317                           
   318                           ;S2.c: 74:         if (PORTBbits.RB1 == 0){
   319  077A  1283               	bcf	3,5	;RP0=0, select bank0
   320  077B  1303               	bcf	3,6	;RP1=0, select bank0
   321  077C  1886               	btfsc	6,1	;volatile
   322  077D  2F7F               	goto	u11
   323  077E  2F80               	goto	u10
   324  077F                     u11:
   325  077F  2F86               	goto	l696
   326  0780                     u10:
   327  0780                     l692:
   328                           
   329                           ;S2.c: 75:             if (PORTBbits.RB2 == 0){
   330  0780  1906               	btfsc	6,2	;volatile
   331  0781  2F83               	goto	u21
   332  0782  2F84               	goto	u20
   333  0783                     u21:
   334  0783  2F86               	goto	l696
   335  0784                     u20:
   336  0784                     l694:
   337                           
   338                           ;S2.c: 76:                 START = 1;
   339  0784  01F4               	clrf	_START
   340  0785  0AF4               	incf	_START,f
   341  0786                     l696:
   342                           
   343                           ;S2.c: 80:         if (START==1){
   344  0786  0374               	decf	_START,w
   345  0787  1D03               	btfss	3,2
   346  0788  2F8A               	goto	u31
   347  0789  2F8B               	goto	u30
   348  078A                     u31:
   349  078A  2FCF               	goto	l714
   350  078B                     u30:
   351  078B                     l698:
   352                           
   353                           ;S2.c: 81:             if (PORTBbits.RB1 == 1){
   354  078B  1C86               	btfss	6,1	;volatile
   355  078C  2F8E               	goto	u41
   356  078D  2F8F               	goto	u40
   357  078E                     u41:
   358  078E  2F95               	goto	l704
   359  078F                     u40:
   360  078F                     l700:
   361                           
   362                           ;S2.c: 82:                 PLUS();
   363  078F  120A  118A  2740  120A  118A  	fcall	_PLUS
   364  0794                     l702:
   365                           
   366                           ;S2.c: 83:                 START = 0;
   367  0794  01F4               	clrf	_START
   368  0795                     l704:
   369                           
   370                           ;S2.c: 86:             if (PORTBbits.RB2 == 1){
   371  0795  1283               	bcf	3,5	;RP0=0, select bank0
   372  0796  1303               	bcf	3,6	;RP1=0, select bank0
   373  0797  1D06               	btfss	6,2	;volatile
   374  0798  2F9A               	goto	u51
   375  0799  2F9B               	goto	u50
   376  079A                     u51:
   377  079A  2FCF               	goto	l714
   378  079B                     u50:
   379  079B                     l706:
   380                           
   381                           ;S2.c: 87:                 MINUS();
   382  079B  120A  118A  2734  120A  118A  	fcall	_MINUS
   383  07A0                     l708:
   384                           
   385                           ;S2.c: 88:                 START = 0;
   386  07A0  01F4               	clrf	_START
   387  07A1  2FCF               	goto	l714
   388  07A2                     l710:
   389                           
   390                           ;S2.c: 94:                 PORTC = 0;
   391  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   392  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   393  07A4  0187               	clrf	7	;volatile
   394                           
   395                           ;S2.c: 95:             break;
   396  07A5  2F7A               	goto	l690
   397  07A6                     l52:	
   398                           ;S2.c: 97:             case 1:
   399                           
   400                           
   401                           ;S2.c: 98:                 PORTCbits.RC0 = 1;
   402  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   403  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   404  07A8  1407               	bsf	7,0	;volatile
   405                           
   406                           ;S2.c: 99:             break;
   407  07A9  2F7A               	goto	l690
   408  07AA                     l53:	
   409                           ;S2.c: 101:             case 2:
   410                           
   411                           
   412                           ;S2.c: 102:                 PORTCbits.RC0 = 0;
   413  07AA  1283               	bcf	3,5	;RP0=0, select bank0
   414  07AB  1303               	bcf	3,6	;RP1=0, select bank0
   415  07AC  1007               	bcf	7,0	;volatile
   416                           
   417                           ;S2.c: 103:                 PORTCbits.RC1 = 1;
   418  07AD  1487               	bsf	7,1	;volatile
   419                           
   420                           ;S2.c: 104:             break;
   421  07AE  2F7A               	goto	l690
   422  07AF                     l54:	
   423                           ;S2.c: 106:             case 3:
   424                           
   425                           
   426                           ;S2.c: 107:                 PORTCbits.RC1 = 0;
   427  07AF  1283               	bcf	3,5	;RP0=0, select bank0
   428  07B0  1303               	bcf	3,6	;RP1=0, select bank0
   429  07B1  1087               	bcf	7,1	;volatile
   430                           
   431                           ;S2.c: 108:                 PORTCbits.RC2 = 1;
   432  07B2  1507               	bsf	7,2	;volatile
   433                           
   434                           ;S2.c: 109:             break;
   435  07B3  2F7A               	goto	l690
   436  07B4                     l55:	
   437                           ;S2.c: 111:             case 4:
   438                           
   439                           
   440                           ;S2.c: 112:                 PORTCbits.RC2 = 0;
   441  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   442  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   443  07B6  1107               	bcf	7,2	;volatile
   444                           
   445                           ;S2.c: 113:                 PORTCbits.RC3 = 1;
   446  07B7  1587               	bsf	7,3	;volatile
   447                           
   448                           ;S2.c: 114:             break;
   449  07B8  2F7A               	goto	l690
   450  07B9                     l56:	
   451                           ;S2.c: 116:             case 5:
   452                           
   453                           
   454                           ;S2.c: 117:                 PORTCbits.RC3 = 0;
   455  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   456  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   457  07BB  1187               	bcf	7,3	;volatile
   458                           
   459                           ;S2.c: 118:                 PORTCbits.RC4 = 1;
   460  07BC  1607               	bsf	7,4	;volatile
   461                           
   462                           ;S2.c: 119:             break;
   463  07BD  2F7A               	goto	l690
   464  07BE                     l57:	
   465                           ;S2.c: 121:             case 6:
   466                           
   467                           
   468                           ;S2.c: 122:                 PORTCbits.RC4 = 0;
   469  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   470  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   471  07C0  1207               	bcf	7,4	;volatile
   472                           
   473                           ;S2.c: 123:                 PORTCbits.RC5 = 1;
   474  07C1  1687               	bsf	7,5	;volatile
   475                           
   476                           ;S2.c: 124:             break;
   477  07C2  2F7A               	goto	l690
   478  07C3                     l58:	
   479                           ;S2.c: 126:             case 7:
   480                           
   481                           
   482                           ;S2.c: 127:                 PORTCbits.RC5 = 0;
   483  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   484  07C4  1303               	bcf	3,6	;RP1=0, select bank0
   485  07C5  1287               	bcf	7,5	;volatile
   486                           
   487                           ;S2.c: 128:                 PORTCbits.RC6 = 1;
   488  07C6  1707               	bsf	7,6	;volatile
   489                           
   490                           ;S2.c: 129:             break;
   491  07C7  2F7A               	goto	l690
   492  07C8                     l59:	
   493                           ;S2.c: 131:             case 8:
   494                           
   495                           
   496                           ;S2.c: 132:                 PORTCbits.RC6 = 0;
   497  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   498  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   499  07CA  1307               	bcf	7,6	;volatile
   500                           
   501                           ;S2.c: 133:                 PORTCbits.RC7 = 1;
   502  07CB  1787               	bsf	7,7	;volatile
   503                           
   504                           ;S2.c: 134:             break;
   505  07CC  2F7A               	goto	l690
   506  07CD                     l712:
   507                           
   508                           ;S2.c: 137:                 BBB = 0;
   509  07CD  01F5               	clrf	_BBB
   510                           
   511                           ;S2.c: 138:         }
   512  07CE  2F7A               	goto	l690
   513  07CF                     l714:
   514  07CF  0875               	movf	_BBB,w
   515  07D0  00F2               	movwf	??_main
   516  07D1  01F3               	clrf	??_main+1
   517                           
   518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   519                           ; Switch size 1, requested type "simple"
   520                           ; Number of cases is 1, Range of values is 0 to 0
   521                           ; switch strategies available:
   522                           ; Name         Instructions Cycles
   523                           ; simple_byte            4     3 (average)
   524                           ; direct_byte           11     8 (fixed)
   525                           ; jumptable            260     6 (fixed)
   526                           ;	Chosen strategy is simple_byte
   527  07D2  0873               	movf	??_main+1,w
   528  07D3  3A00               	xorlw	0	; case 0
   529  07D4  1903               	skipnz
   530  07D5  2FD7               	goto	l740
   531  07D6  2F7A               	goto	l690
   532  07D7                     l740:
   533                           
   534                           ; Switch size 1, requested type "simple"
   535                           ; Number of cases is 10, Range of values is 0 to 9
   536                           ; switch strategies available:
   537                           ; Name         Instructions Cycles
   538                           ; simple_byte           31    16 (average)
   539                           ; direct_byte           38     8 (fixed)
   540                           ; jumptable            260     6 (fixed)
   541                           ;	Chosen strategy is simple_byte
   542  07D7  0872               	movf	??_main,w
   543  07D8  3A00               	xorlw	0	; case 0
   544  07D9  1903               	skipnz
   545  07DA  2FA2               	goto	l710
   546  07DB  3A01               	xorlw	1	; case 1
   547  07DC  1903               	skipnz
   548  07DD  2FA6               	goto	l52
   549  07DE  3A03               	xorlw	3	; case 2
   550  07DF  1903               	skipnz
   551  07E0  2FAA               	goto	l53
   552  07E1  3A01               	xorlw	1	; case 3
   553  07E2  1903               	skipnz
   554  07E3  2FAF               	goto	l54
   555  07E4  3A07               	xorlw	7	; case 4
   556  07E5  1903               	skipnz
   557  07E6  2FB4               	goto	l55
   558  07E7  3A01               	xorlw	1	; case 5
   559  07E8  1903               	skipnz
   560  07E9  2FB9               	goto	l56
   561  07EA  3A03               	xorlw	3	; case 6
   562  07EB  1903               	skipnz
   563  07EC  2FBE               	goto	l57
   564  07ED  3A01               	xorlw	1	; case 7
   565  07EE  1903               	skipnz
   566  07EF  2FC3               	goto	l58
   567  07F0  3A0F               	xorlw	15	; case 8
   568  07F1  1903               	skipnz
   569  07F2  2FC8               	goto	l59
   570  07F3  3A01               	xorlw	1	; case 9
   571  07F4  1903               	skipnz
   572  07F5  2FCD               	goto	l712
   573  07F6  2F7A               	goto	l690
   574  07F7  120A  118A  2800   	ljmp	start
   575  07FA                     __end_of_main:
   576                           
   577                           	psect	text1
   578  074E                     __ptext1:	
   579 ;; *************** function _setup *****************
   580 ;; Defined at:
   581 ;;		line 147 in file "S2.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           
   609                           ;psect for function _setup
   610  074E                     _setup:
   611  074E                     l664:	
   612                           ;incstack = 0
   613                           ; Regs used in _setup: [wreg+status,2+status,0]
   614                           
   615                           
   616                           ;S2.c: 148:     TRISE = 0;
   617  074E  1683               	bsf	3,5	;RP0=1, select bank1
   618  074F  1303               	bcf	3,6	;RP1=0, select bank1
   619  0750  0189               	clrf	9	;volatile
   620                           
   621                           ;S2.c: 149:     PORTE = 0;
   622  0751  1283               	bcf	3,5	;RP0=0, select bank0
   623  0752  1303               	bcf	3,6	;RP1=0, select bank0
   624  0753  0189               	clrf	9	;volatile
   625                           
   626                           ;S2.c: 150:     ANSEL = 0;
   627  0754  1683               	bsf	3,5	;RP0=1, select bank3
   628  0755  1703               	bsf	3,6	;RP1=1, select bank3
   629  0756  0188               	clrf	8	;volatile
   630                           
   631                           ;S2.c: 151:     ANSELH = 0;
   632  0757  0189               	clrf	9	;volatile
   633                           
   634                           ;S2.c: 152:     TRISB = 0;
   635  0758  1683               	bsf	3,5	;RP0=1, select bank1
   636  0759  1303               	bcf	3,6	;RP1=0, select bank1
   637  075A  0186               	clrf	6	;volatile
   638                           
   639                           ;S2.c: 153:     PORTB = 0;
   640  075B  1283               	bcf	3,5	;RP0=0, select bank0
   641  075C  1303               	bcf	3,6	;RP1=0, select bank0
   642  075D  0186               	clrf	6	;volatile
   643                           
   644                           ;S2.c: 154:     TRISC = 0;
   645  075E  1683               	bsf	3,5	;RP0=1, select bank1
   646  075F  1303               	bcf	3,6	;RP1=0, select bank1
   647  0760  0187               	clrf	7	;volatile
   648                           
   649                           ;S2.c: 155:     PORTC = 0;
   650  0761  1283               	bcf	3,5	;RP0=0, select bank0
   651  0762  1303               	bcf	3,6	;RP1=0, select bank0
   652  0763  0187               	clrf	7	;volatile
   653                           
   654                           ;S2.c: 156:     TRISD = 0;
   655  0764  1683               	bsf	3,5	;RP0=1, select bank1
   656  0765  1303               	bcf	3,6	;RP1=0, select bank1
   657  0766  0188               	clrf	8	;volatile
   658                           
   659                           ;S2.c: 157:     PORTD = 0;
   660  0767  1283               	bcf	3,5	;RP0=0, select bank0
   661  0768  1303               	bcf	3,6	;RP1=0, select bank0
   662  0769  0188               	clrf	8	;volatile
   663  076A                     l666:
   664                           
   665                           ;S2.c: 159:     OSCCONbits.IRCF = 0b110;
   666  076A  1683               	bsf	3,5	;RP0=1, select bank1
   667  076B  1303               	bcf	3,6	;RP1=0, select bank1
   668  076C  080F               	movf	15,w	;volatile
   669  076D  398F               	andlw	-113
   670  076E  3860               	iorlw	96
   671  076F  008F               	movwf	15	;volatile
   672  0770                     l668:
   673                           
   674                           ;S2.c: 160:     OSCCONbits.OSTS= 0;
   675  0770  118F               	bcf	15,3	;volatile
   676  0771                     l670:
   677                           
   678                           ;S2.c: 161:     OSCCONbits.HTS = 0;
   679  0771  110F               	bcf	15,2	;volatile
   680  0772                     l672:
   681                           
   682                           ;S2.c: 162:     OSCCONbits.LTS = 0;
   683  0772  108F               	bcf	15,1	;volatile
   684  0773                     l674:
   685                           
   686                           ;S2.c: 163:     OSCCONbits.SCS = 1;
   687  0773  140F               	bsf	15,0	;volatile
   688  0774                     l66:
   689  0774  0008               	return
   690  0775                     __end_of_setup:
   691                           
   692                           	psect	text2
   693  0740                     __ptext2:	
   694 ;; *************** function _PLUS *****************
   695 ;; Defined at:
   696 ;;		line 169 in file "S2.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg, status,2, status,0
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          2       0       0       0       0
   713 ;;      Totals:         2       0       0       0       0
   714 ;;Total ram usage:        2 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_main
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _PLUS
   725  0740                     _PLUS:
   726  0740                     l676:	
   727                           ;incstack = 0
   728                           ; Regs used in _PLUS: [wreg+status,2+status,0]
   729                           
   730                           
   731                           ;S2.c: 170:     BBB++;
   732  0740  3001               	movlw	1
   733  0741  00F0               	movwf	??_PLUS
   734  0742  0870               	movf	??_PLUS,w
   735  0743  07F5               	addwf	_BBB,f
   736  0744                     l678:
   737                           
   738                           ;S2.c: 171:     _delay((unsigned long)((100)*(4000000/4000.0)));
   739  0744  3082               	movlw	130
   740  0745  00F1               	movwf	??_PLUS+1
   741  0746  30DD               	movlw	221
   742  0747  00F0               	movwf	??_PLUS
   743  0748                     u67:
   744  0748  0BF0               	decfsz	??_PLUS,f
   745  0749  2F48               	goto	u67
   746  074A  0BF1               	decfsz	??_PLUS+1,f
   747  074B  2F48               	goto	u67
   748  074C  2F4D               	nop2
   749  074D                     l69:
   750  074D  0008               	return
   751  074E                     __end_of_PLUS:
   752                           
   753                           	psect	text3
   754  0734                     __ptext3:	
   755 ;; *************** function _MINUS *****************
   756 ;; Defined at:
   757 ;;		line 175 in file "S2.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2, status,0
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0
   773 ;;      Temps:          2       0       0       0       0
   774 ;;      Totals:         2       0       0       0       0
   775 ;;Total ram usage:        2 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_main
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           
   785                           ;psect for function _MINUS
   786  0734                     _MINUS:
   787  0734                     l682:	
   788                           ;incstack = 0
   789                           ; Regs used in _MINUS: [wreg+status,2+status,0]
   790                           
   791                           
   792                           ;S2.c: 176:     BBB--;
   793  0734  3001               	movlw	1
   794  0735  02F5               	subwf	_BBB,f
   795  0736                     l684:
   796                           
   797                           ;S2.c: 177:     _delay((unsigned long)((100)*(4000000/4000.0)));
   798  0736  3082               	movlw	130
   799  0737  00F1               	movwf	??_MINUS+1
   800  0738  30DD               	movlw	221
   801  0739  00F0               	movwf	??_MINUS
   802  073A                     u77:
   803  073A  0BF0               	decfsz	??_MINUS,f
   804  073B  2F3A               	goto	u77
   805  073C  0BF1               	decfsz	??_MINUS+1,f
   806  073D  2F3A               	goto	u77
   807  073E  2F3F               	nop2
   808  073F                     l72:
   809  073F  0008               	return
   810  0740                     __end_of_MINUS:
   811  007E                     btemp	set	126	;btemp
   812  007E                     wtemp0	set	126
   813                           
   814                           	psect	config
   815                           
   816                           ;Config register CONFIG1 @ 0x2007
   817                           ;	Oscillator Selection bits
   818                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   819                           ;	Watchdog Timer Enable bit
   820                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   821                           ;	Power-up Timer Enable bit
   822                           ;	PWRTE = OFF, PWRT disabled
   823                           ;	RE3/MCLR pin function select bit
   824                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   825                           ;	Code Protection bit
   826                           ;	CP = OFF, Program memory code protection is disabled
   827                           ;	Data Code Protection bit
   828                           ;	CPD = OFF, Data memory code protection is disabled
   829                           ;	Brown Out Reset Selection bits
   830                           ;	BOREN = OFF, BOR disabled
   831                           ;	Internal External Switchover bit
   832                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   833                           ;	Fail-Safe Clock Monitor Enabled bit
   834                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   835                           ;	Low Voltage Programming Enable bit
   836                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   837                           ;	In-Circuit Debugger Mode bit
   838                           ;	DEBUG = 0x1, unprogrammed default
   839  2007                     	org	8199
   840  2007  20D4               	dw	8404
   841                           
   842                           ;Config register CONFIG2 @ 0x2008
   843                           ;	Brown-out Reset Selection bit
   844                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   845                           ;	Flash Program Memory Self Write Enable bits
   846                           ;	WRT = OFF, Write protection off
   847  2008                     	org	8200
   848  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_MINUS
    _main->_PLUS

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              2 COMMON     2     2      0
                              _MINUS
                               _PLUS
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PLUS                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MINUS                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MINUS
   _PLUS
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 15:03:16 2021

                     l52 07A6                       l53 07AA                       l54 07AF  
                     l55 07B4                       l72 073F                       l56 07B9  
                     l57 07BE                       l66 0774                       l58 07C3  
                     l59 07C8                       l69 074D                       u10 0780  
                     u11 077F                       u20 0784                       u21 0783  
                     u30 078B                       u31 078A                       u40 078F  
                     u41 078E                       u50 079B                       u51 079A  
                     u67 0748                       u77 073A                      _BBB 0075  
                    l700 078F                      l710 07A2                      l702 0794  
                    l712 07CD                      l704 0795                      l706 079B  
                    l714 07CF                      l740 07D7                      l708 07A0  
                    l670 0771                      l672 0772                      l664 074E  
                    l682 0734                      l674 0773                      l666 076A  
                    l690 077A                      l684 0736                      l676 0740  
                    l668 0770                      l692 0780                      l678 0744  
                    l694 0784                      l696 0786                      l688 0775  
                    l698 078B                     _PLUS 0740                     _main 0775  
                   btemp 007E                     start 0000                    ?_PLUS 0070  
                  ?_main 0070                    _ANSEL 0188                    _MINUS 0734  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _START 0074                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _setup 074E                    status 0003                    wtemp0 007E  
           __end_of_PLUS 074E          __initialization 07FA             __end_of_main 07FA  
                 ??_PLUS 0070                   ??_main 0072                   ?_MINUS 0070  
                 ?_setup 0070                   _ANSELH 0189  __end_of__initialization 07FC  
          __end_of_MINUS 0740           __pcstackCOMMON 0070            __end_of_setup 0775  
                ??_MINUS 0070                  ??_setup 0070               __pmaintext 0775  
                __ptext1 074E                  __ptext2 0740                  __ptext3 0734  
   end_of_initialization 07FC                _PORTBbits 0006                _PORTCbits 0007  
    start_initialization 07FA              __pbssCOMMON 0074                ___latbits 0002  
         __size_of_MINUS 000C           __size_of_setup 0027            __size_of_PLUS 000E  
          __size_of_main 0085               _OSCCONbits 008F  
