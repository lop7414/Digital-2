

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 01:40:48 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0013                     _SSPBUF	set	19
   290  0014                     _SSPCON	set	20
   291  0009                     _PORTE	set	9
   292  0007                     _PORTC	set	7
   293  0006                     _PORTB	set	6
   294  0005                     _PORTA	set	5
   295  0008                     _PORTDbits	set	8
   296  0008                     _PORTD	set	8
   297  0006                     _PORTBbits	set	6
   298  0063                     _SSPIF	set	99
   299  0094                     _SSPSTATbits	set	148
   300  0094                     _SSPSTAT	set	148
   301  0088                     _TRISD	set	136
   302  0087                     _TRISC	set	135
   303  0086                     _TRISB	set	134
   304  0085                     _TRISA	set	133
   305  0085                     _TRISAbits	set	133
   306  043B                     _TRISC3	set	1083
   307  043C                     _TRISC4	set	1084
   308  043D                     _TRISC5	set	1085
   309  0189                     _ANSELH	set	393
   310  0188                     _ANSEL	set	392
   311                           
   312                           	psect	cinit
   313  000F                     start_initialization:	
   314                           ; #config settings
   315                           
   316  000F                     __initialization:
   317                           
   318                           ; Clear objects allocated to COMMON
   319  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   320  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   321  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   322  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   323  0013                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  0013                     __end_of__initialization:
   327  0013  0183               	clrf	3
   328  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0075                     __pbssCOMMON:
   332  0075                     _slave:
   333  0075                     	ds	1
   334  0076                     _Ready:
   335  0076                     	ds	1
   336  0077                     _START:
   337  0077                     	ds	1
   338  0078                     _BBB:
   339  0078                     	ds	1
   340                           
   341                           	psect	cstackCOMMON
   342  0070                     __pcstackCOMMON:
   343  0070                     ?_SPI_Read:
   344  0070                     ??_SPI_Read:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_SPI_Write:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ??_SPI_Write:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_setup:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_PLUS:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_MINUS:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_ISR:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_spiReceiveWait:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ??_spiReceiveWait:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     SPI_Write@a:	
   375                           ; 1 bytes @ 0x0
   376                           
   377                           
   378                           ; 1 bytes @ 0x0
   379  0070                     	ds	1
   380  0071                     ??_ISR:
   381                           
   382                           ; 1 bytes @ 0x1
   383  0071                     	ds	3
   384  0074                     ??_setup:
   385  0074                     ??_SPI_Init:	
   386                           ; 1 bytes @ 0x4
   387                           
   388  0074                     SPI_Init@sType:	
   389                           ; 1 bytes @ 0x4
   390                           
   391                           
   392                           ; 1 bytes @ 0x4
   393  0074                     	ds	1
   394                           
   395                           	psect	cstackBANK0
   396  0020                     __pcstackBANK0:
   397  0020                     ?_SPI_Init:
   398  0020                     ??_PLUS:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0020                     ??_MINUS:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0020                     SPI_Init@sDataSample:	
   405                           ; 1 bytes @ 0x0
   406                           
   407                           
   408                           ; 1 bytes @ 0x0
   409  0020                     	ds	1
   410  0021                     SPI_Init@sClockIdle:
   411                           
   412                           ; 1 bytes @ 0x1
   413  0021                     	ds	1
   414  0022                     SPI_Init@sTransmitEdge:
   415                           
   416                           ; 1 bytes @ 0x2
   417  0022                     	ds	1
   418  0023                     ??_main:
   419                           
   420                           ; 1 bytes @ 0x3
   421  0023                     	ds	2
   422                           
   423                           	psect	maintext
   424  0017                     __pmaintext:	
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 75 in file "S2.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       2       0       0       0
   447 ;;      Totals:         0       2       0       0       0
   448 ;;Total ram usage:        2 bytes
   449 ;; Hardware stack levels required when called:    4
   450 ;; This function calls:
   451 ;;		_MINUS
   452 ;;		_PLUS
   453 ;;		_SPI_Init
   454 ;;		_setup
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _main
   462  0017                     _main:
   463  0017                     l920:	
   464                           ;incstack = 0
   465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   466                           
   467                           
   468                           ;S2.c: 77:     setup();
   469  0017  120A  118A  20ED  120A  118A  	fcall	_setup
   470  001C                     l922:
   471                           
   472                           ;S2.c: 85:         TRISAbits.TRISA5 = 1;
   473  001C  1683               	bsf	3,5	;RP0=1, select bank1
   474  001D  1303               	bcf	3,6	;RP1=0, select bank1
   475  001E  1685               	bsf	5,5	;volatile
   476                           
   477                           ;S2.c: 87:         SPI_Init(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   478  001F  1283               	bcf	3,5	;RP0=0, select bank0
   479  0020  1303               	bcf	3,6	;RP1=0, select bank0
   480  0021  01A0               	clrf	SPI_Init@sDataSample
   481  0022  01A1               	clrf	SPI_Init@sClockIdle
   482  0023  01A2               	clrf	SPI_Init@sTransmitEdge
   483  0024  3024               	movlw	36
   484  0025  120A  118A  209A  120A  118A  	fcall	_SPI_Init
   485  002A                     l924:
   486                           
   487                           ;S2.c: 89:         if (PORTBbits.RB1 == 0){
   488  002A  1283               	bcf	3,5	;RP0=0, select bank0
   489  002B  1303               	bcf	3,6	;RP1=0, select bank0
   490  002C  1886               	btfsc	6,1	;volatile
   491  002D  282F               	goto	u161
   492  002E  2830               	goto	u160
   493  002F                     u161:
   494  002F  2836               	goto	l930
   495  0030                     u160:
   496  0030                     l926:
   497                           
   498                           ;S2.c: 90:             if (PORTBbits.RB2 == 0){
   499  0030  1906               	btfsc	6,2	;volatile
   500  0031  2833               	goto	u171
   501  0032  2834               	goto	u170
   502  0033                     u171:
   503  0033  2836               	goto	l930
   504  0034                     u170:
   505  0034                     l928:
   506                           
   507                           ;S2.c: 91:                 START = 1;
   508  0034  01F7               	clrf	_START
   509  0035  0AF7               	incf	_START,f
   510  0036                     l930:
   511                           
   512                           ;S2.c: 95:         if (START==1){
   513  0036  0377               	decf	_START,w
   514  0037  1D03               	btfss	3,2
   515  0038  283A               	goto	u181
   516  0039  283B               	goto	u180
   517  003A                     u181:
   518  003A  286D               	goto	l948
   519  003B                     u180:
   520  003B                     l932:
   521                           
   522                           ;S2.c: 96:             if (PORTBbits.RB1 == 1){
   523  003B  1C86               	btfss	6,1	;volatile
   524  003C  283E               	goto	u191
   525  003D  283F               	goto	u190
   526  003E                     u191:
   527  003E  2845               	goto	l938
   528  003F                     u190:
   529  003F                     l934:
   530                           
   531                           ;S2.c: 97:                 PLUS();
   532  003F  120A  118A  20D7  120A  118A  	fcall	_PLUS
   533  0044                     l936:
   534                           
   535                           ;S2.c: 98:                 START = 0;
   536  0044  01F7               	clrf	_START
   537  0045                     l938:
   538                           
   539                           ;S2.c: 101:             if (PORTBbits.RB2 == 1){
   540  0045  1283               	bcf	3,5	;RP0=0, select bank0
   541  0046  1303               	bcf	3,6	;RP1=0, select bank0
   542  0047  1D06               	btfss	6,2	;volatile
   543  0048  284A               	goto	u201
   544  0049  284B               	goto	u200
   545  004A                     u201:
   546  004A  286D               	goto	l948
   547  004B                     u200:
   548  004B                     l940:
   549                           
   550                           ;S2.c: 102:                 MINUS();
   551  004B  120A  118A  2100  120A  118A  	fcall	_MINUS
   552  0050                     l942:
   553                           
   554                           ;S2.c: 103:                 START = 0;
   555  0050  01F7               	clrf	_START
   556  0051  286D               	goto	l948
   557  0052                     l944:
   558                           
   559                           ;S2.c: 109:                 PORTD = 0;
   560  0052  0188               	clrf	8	;volatile
   561                           
   562                           ;S2.c: 110:             break;
   563  0053  281C               	goto	l922
   564  0054                     l72:	
   565                           ;S2.c: 112:             case 1:
   566                           
   567                           
   568                           ;S2.c: 113:                 PORTDbits.RD1 = 0;
   569  0054  1088               	bcf	8,1	;volatile
   570                           
   571                           ;S2.c: 114:                 PORTDbits.RD0 = 1;
   572  0055  1408               	bsf	8,0	;volatile
   573                           
   574                           ;S2.c: 115:             break;
   575  0056  281C               	goto	l922
   576  0057                     l73:	
   577                           ;S2.c: 117:             case 2:
   578                           
   579                           
   580                           ;S2.c: 118:                 PORTDbits.RD2 = 0;
   581  0057  1108               	bcf	8,2	;volatile
   582                           
   583                           ;S2.c: 119:                 PORTDbits.RD1 = 1;
   584  0058  1488               	bsf	8,1	;volatile
   585                           
   586                           ;S2.c: 120:             break;
   587  0059  281C               	goto	l922
   588  005A                     l74:	
   589                           ;S2.c: 122:             case 3:
   590                           
   591                           
   592                           ;S2.c: 123:                 PORTDbits.RD3 = 0;
   593  005A  1188               	bcf	8,3	;volatile
   594                           
   595                           ;S2.c: 124:                 PORTDbits.RD2 = 1;
   596  005B  1508               	bsf	8,2	;volatile
   597                           
   598                           ;S2.c: 125:             break;
   599  005C  281C               	goto	l922
   600  005D                     l75:	
   601                           ;S2.c: 127:             case 4:
   602                           
   603                           
   604                           ;S2.c: 128:                 PORTDbits.RD4 = 0;
   605  005D  1208               	bcf	8,4	;volatile
   606                           
   607                           ;S2.c: 129:                 PORTDbits.RD3 = 1;
   608  005E  1588               	bsf	8,3	;volatile
   609                           
   610                           ;S2.c: 130:             break;
   611  005F  281C               	goto	l922
   612  0060                     l76:	
   613                           ;S2.c: 132:             case 5:
   614                           
   615                           
   616                           ;S2.c: 133:                 PORTDbits.RD5 = 0;
   617  0060  1288               	bcf	8,5	;volatile
   618                           
   619                           ;S2.c: 134:                 PORTDbits.RD4 = 1;
   620  0061  1608               	bsf	8,4	;volatile
   621                           
   622                           ;S2.c: 135:             break;
   623  0062  281C               	goto	l922
   624  0063                     l77:	
   625                           ;S2.c: 137:             case 6:
   626                           
   627                           
   628                           ;S2.c: 138:                 PORTDbits.RD6 = 0;
   629  0063  1308               	bcf	8,6	;volatile
   630                           
   631                           ;S2.c: 139:                 PORTDbits.RD5 = 1;
   632  0064  1688               	bsf	8,5	;volatile
   633                           
   634                           ;S2.c: 140:             break;
   635  0065  281C               	goto	l922
   636  0066                     l78:	
   637                           ;S2.c: 142:             case 7:
   638                           
   639                           
   640                           ;S2.c: 143:                 PORTDbits.RD7 = 0;
   641  0066  1388               	bcf	8,7	;volatile
   642                           
   643                           ;S2.c: 144:                 PORTDbits.RD6 = 1;
   644  0067  1708               	bsf	8,6	;volatile
   645                           
   646                           ;S2.c: 145:             break;
   647  0068  281C               	goto	l922
   648  0069                     l79:	
   649                           ;S2.c: 147:             case 8:
   650                           
   651                           
   652                           ;S2.c: 148:                 PORTDbits.RD7 = 1;
   653  0069  1788               	bsf	8,7	;volatile
   654                           
   655                           ;S2.c: 149:             break;
   656  006A  281C               	goto	l922
   657  006B                     l946:
   658                           
   659                           ;S2.c: 152:                 BBB = 0;
   660  006B  01F8               	clrf	_BBB
   661                           
   662                           ;S2.c: 153:         }
   663  006C  281C               	goto	l922
   664  006D                     l948:
   665  006D  0878               	movf	_BBB,w
   666  006E  1283               	bcf	3,5	;RP0=0, select bank0
   667  006F  1303               	bcf	3,6	;RP1=0, select bank0
   668  0070  00A3               	movwf	??_main
   669  0071  01A4               	clrf	??_main+1
   670                           
   671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   672                           ; Switch size 1, requested type "simple"
   673                           ; Number of cases is 1, Range of values is 0 to 0
   674                           ; switch strategies available:
   675                           ; Name         Instructions Cycles
   676                           ; simple_byte            4     3 (average)
   677                           ; direct_byte           11     8 (fixed)
   678                           ; jumptable            260     6 (fixed)
   679                           ;	Chosen strategy is simple_byte
   680  0072  0824               	movf	??_main+1,w
   681  0073  3A00               	xorlw	0	; case 0
   682  0074  1903               	skipnz
   683  0075  2877               	goto	l986
   684  0076  281C               	goto	l922
   685  0077                     l986:
   686                           
   687                           ; Switch size 1, requested type "simple"
   688                           ; Number of cases is 10, Range of values is 0 to 9
   689                           ; switch strategies available:
   690                           ; Name         Instructions Cycles
   691                           ; simple_byte           31    16 (average)
   692                           ; direct_byte           38     8 (fixed)
   693                           ; jumptable            260     6 (fixed)
   694                           ;	Chosen strategy is simple_byte
   695  0077  0823               	movf	??_main,w
   696  0078  3A00               	xorlw	0	; case 0
   697  0079  1903               	skipnz
   698  007A  2852               	goto	l944
   699  007B  3A01               	xorlw	1	; case 1
   700  007C  1903               	skipnz
   701  007D  2854               	goto	l72
   702  007E  3A03               	xorlw	3	; case 2
   703  007F  1903               	skipnz
   704  0080  2857               	goto	l73
   705  0081  3A01               	xorlw	1	; case 3
   706  0082  1903               	skipnz
   707  0083  285A               	goto	l74
   708  0084  3A07               	xorlw	7	; case 4
   709  0085  1903               	skipnz
   710  0086  285D               	goto	l75
   711  0087  3A01               	xorlw	1	; case 5
   712  0088  1903               	skipnz
   713  0089  2860               	goto	l76
   714  008A  3A03               	xorlw	3	; case 6
   715  008B  1903               	skipnz
   716  008C  2863               	goto	l77
   717  008D  3A01               	xorlw	1	; case 7
   718  008E  1903               	skipnz
   719  008F  2866               	goto	l78
   720  0090  3A0F               	xorlw	15	; case 8
   721  0091  1903               	skipnz
   722  0092  2869               	goto	l79
   723  0093  3A01               	xorlw	1	; case 9
   724  0094  1903               	skipnz
   725  0095  286B               	goto	l946
   726  0096  281C               	goto	l922
   727  0097  120A  118A  280C   	ljmp	start
   728  009A                     __end_of_main:
   729                           
   730                           	psect	text1
   731  00ED                     __ptext1:	
   732 ;; *************** function _setup *****************
   733 ;; Defined at:
   734 ;;		line 161 in file "S2.c"
   735 ;; Parameters:    Size  Location     Type
   736 ;;		None
   737 ;; Auto vars:     Size  Location     Type
   738 ;;		None
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, status,2
   743 ;; Tracked objects:
   744 ;;		On entry : 0/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   748 ;;      Params:         0       0       0       0       0
   749 ;;      Locals:         0       0       0       0       0
   750 ;;      Temps:          0       0       0       0       0
   751 ;;      Totals:         0       0       0       0       0
   752 ;;Total ram usage:        0 bytes
   753 ;; Hardware stack levels used:    1
   754 ;; Hardware stack levels required when called:    3
   755 ;; This function calls:
   756 ;;		Nothing
   757 ;; This function is called by:
   758 ;;		_main
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           
   763                           ;psect for function _setup
   764  00ED                     _setup:
   765  00ED                     l730:	
   766                           ;incstack = 0
   767                           ; Regs used in _setup: [wreg+status,2]
   768                           
   769                           
   770                           ;S2.c: 163:     ANSEL = 0;
   771  00ED  1683               	bsf	3,5	;RP0=1, select bank3
   772  00EE  1703               	bsf	3,6	;RP1=1, select bank3
   773  00EF  0188               	clrf	8	;volatile
   774                           
   775                           ;S2.c: 164:     ANSELH= 0;
   776  00F0  0189               	clrf	9	;volatile
   777                           
   778                           ;S2.c: 165:     TRISA = 0;
   779  00F1  1683               	bsf	3,5	;RP0=1, select bank1
   780  00F2  1303               	bcf	3,6	;RP1=0, select bank1
   781  00F3  0185               	clrf	5	;volatile
   782                           
   783                           ;S2.c: 166:     TRISB = 0;
   784  00F4  0186               	clrf	6	;volatile
   785  00F5                     l732:
   786                           
   787                           ;S2.c: 167:     TRISC = 0b00010000;
   788  00F5  3010               	movlw	16
   789  00F6  0087               	movwf	7	;volatile
   790  00F7                     l734:
   791                           
   792                           ;S2.c: 168:     TRISD = 0;
   793  00F7  0188               	clrf	8	;volatile
   794  00F8                     l736:
   795                           
   796                           ;S2.c: 170:     PORTA = 0;
   797  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   798  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   799  00FA  0185               	clrf	5	;volatile
   800  00FB                     l738:
   801                           
   802                           ;S2.c: 171:     PORTB = 0;
   803  00FB  0186               	clrf	6	;volatile
   804  00FC                     l740:
   805                           
   806                           ;S2.c: 172:     PORTC = 0;
   807  00FC  0187               	clrf	7	;volatile
   808  00FD                     l742:
   809                           
   810                           ;S2.c: 173:     PORTD = 0;
   811  00FD  0188               	clrf	8	;volatile
   812  00FE                     l744:
   813                           
   814                           ;S2.c: 174:     PORTE = 0;
   815  00FE  0189               	clrf	9	;volatile
   816  00FF                     l86:
   817  00FF  0008               	return
   818  0100                     __end_of_setup:
   819                           
   820                           	psect	text2
   821  009A                     __ptext2:	
   822 ;; *************** function _SPI_Init *****************
   823 ;; Defined at:
   824 ;;		line 8 in file "SPI.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  sType           1    wreg     enum E1349
   827 ;;  sDataSample     1    0[BANK0 ] enum E1357
   828 ;;  sClockIdle      1    1[BANK0 ] enum E1361
   829 ;;  sTransmitEdg    1    2[BANK0 ] enum E1365
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  sType           1    4[COMMON] enum E1349
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       3       0       0       0
   842 ;;      Locals:         1       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0
   844 ;;      Totals:         1       3       0       0       0
   845 ;;Total ram usage:        4 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    3
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _SPI_Init
   857  009A                     _SPI_Init:
   858                           
   859                           ;incstack = 0
   860                           ; Regs used in _SPI_Init: [wreg+status,2+status,0]
   861                           ;SPI_Init@sType stored from wreg
   862  009A  00F4               	movwf	SPI_Init@sType
   863  009B                     l898:
   864                           
   865                           ;SPI.c: 8: void SPI_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 9: {;SPI.c: 10:     TRISC5 = 0;
   866  009B  1683               	bsf	3,5	;RP0=1, select bank1
   867  009C  1303               	bcf	3,6	;RP1=0, select bank1
   868  009D  1287               	bcf	7,5	;volatile
   869                           
   870                           ;SPI.c: 11:     TRISC4 = 1;
   871  009E  1607               	bsf	7,4	;volatile
   872                           
   873                           ;SPI.c: 13:     if(sType & 0b00000100)
   874  009F  1D74               	btfss	SPI_Init@sType,2
   875  00A0  28A2               	goto	u151
   876  00A1  28A3               	goto	u150
   877  00A2                     u151:
   878  00A2  28AB               	goto	l904
   879  00A3                     u150:
   880  00A3                     l900:
   881                           
   882                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   883  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   884  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   885  00A5  0822               	movf	SPI_Init@sTransmitEdge,w
   886  00A6  1683               	bsf	3,5	;RP0=1, select bank1
   887  00A7  1303               	bcf	3,6	;RP1=0, select bank1
   888  00A8  0094               	movwf	20	;volatile
   889  00A9                     l902:
   890                           
   891                           ;SPI.c: 16:         TRISC3 = 1;
   892  00A9  1587               	bsf	7,3	;volatile
   893                           
   894                           ;SPI.c: 17:     }
   895  00AA  28B3               	goto	l110
   896  00AB                     l904:
   897                           
   898                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   899  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   900  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   901  00AD  0820               	movf	SPI_Init@sDataSample,w
   902  00AE  0422               	iorwf	SPI_Init@sTransmitEdge,w
   903  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   904  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   905  00B1  0094               	movwf	20	;volatile
   906  00B2                     l906:
   907                           
   908                           ;SPI.c: 21:         TRISC3 = 0;
   909  00B2  1187               	bcf	7,3	;volatile
   910  00B3                     l110:	
   911                           ;SPI.c: 22:     }
   912                           
   913                           
   914                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   915  00B3  0874               	movf	SPI_Init@sType,w
   916  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   917  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   918  00B6  0421               	iorwf	SPI_Init@sClockIdle,w
   919  00B7  0094               	movwf	20	;volatile
   920  00B8                     l111:
   921  00B8  0008               	return
   922  00B9                     __end_of_SPI_Init:
   923                           
   924                           	psect	text3
   925  00D7                     __ptext3:	
   926 ;; *************** function _PLUS *****************
   927 ;; Defined at:
   928 ;;		line 180 in file "S2.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   942 ;;      Params:         0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0
   944 ;;      Temps:          0       3       0       0       0
   945 ;;      Totals:         0       3       0       0       0
   946 ;;Total ram usage:        3 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    3
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _PLUS
   958  00D7                     _PLUS:
   959  00D7                     l908:	
   960                           ;incstack = 0
   961                           ; Regs used in _PLUS: [wreg+status,2+status,0]
   962                           
   963                           
   964                           ;S2.c: 181:     BBB++;
   965  00D7  3001               	movlw	1
   966  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   967  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   968  00DA  00A0               	movwf	??_PLUS
   969  00DB  0820               	movf	??_PLUS,w
   970  00DC  07F8               	addwf	_BBB,f
   971  00DD                     l910:
   972                           
   973                           ;S2.c: 182:     _delay((unsigned long)((100)*(8000000/4000.0)));
   974  00DD  3002               	movlw	2
   975  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   976  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   977  00E0  00A2               	movwf	??_PLUS+2
   978  00E1  3004               	movlw	4
   979  00E2  00A1               	movwf	??_PLUS+1
   980  00E3  30B9               	movlw	185
   981  00E4  00A0               	movwf	??_PLUS
   982  00E5                     u217:
   983  00E5  0BA0               	decfsz	??_PLUS,f
   984  00E6  28E5               	goto	u217
   985  00E7  0BA1               	decfsz	??_PLUS+1,f
   986  00E8  28E5               	goto	u217
   987  00E9  0BA2               	decfsz	??_PLUS+2,f
   988  00EA  28E5               	goto	u217
   989  00EB  28EC               	nop2
   990  00EC                     l89:
   991  00EC  0008               	return
   992  00ED                     __end_of_PLUS:
   993                           
   994                           	psect	text4
   995  0100                     __ptext4:	
   996 ;; *************** function _MINUS *****************
   997 ;; Defined at:
   998 ;;		line 186 in file "S2.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;		None
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  1    wreg      void 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1012 ;;      Params:         0       0       0       0       0
  1013 ;;      Locals:         0       0       0       0       0
  1014 ;;      Temps:          0       3       0       0       0
  1015 ;;      Totals:         0       3       0       0       0
  1016 ;;Total ram usage:        3 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    3
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_main
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function _MINUS
  1028  0100                     _MINUS:
  1029  0100                     l914:	
  1030                           ;incstack = 0
  1031                           ; Regs used in _MINUS: [wreg+status,2+status,0]
  1032                           
  1033                           
  1034                           ;S2.c: 187:     BBB--;
  1035  0100  3001               	movlw	1
  1036  0101  02F8               	subwf	_BBB,f
  1037  0102                     l916:
  1038                           
  1039                           ;S2.c: 188:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1040  0102  3002               	movlw	2
  1041  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0105  00A2               	movwf	??_MINUS+2
  1044  0106  3004               	movlw	4
  1045  0107  00A1               	movwf	??_MINUS+1
  1046  0108  30B9               	movlw	185
  1047  0109  00A0               	movwf	??_MINUS
  1048  010A                     u227:
  1049  010A  0BA0               	decfsz	??_MINUS,f
  1050  010B  290A               	goto	u227
  1051  010C  0BA1               	decfsz	??_MINUS+1,f
  1052  010D  290A               	goto	u227
  1053  010E  0BA2               	decfsz	??_MINUS+2,f
  1054  010F  290A               	goto	u227
  1055  0110  2911               	nop2
  1056  0111                     l92:
  1057  0111  0008               	return
  1058  0112                     __end_of_MINUS:
  1059                           
  1060                           	psect	text5
  1061  00B9                     __ptext5:	
  1062 ;; *************** function _ISR *****************
  1063 ;; Defined at:
  1064 ;;		line 66 in file "S2.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  1    wreg      void 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, pclath, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0
  1080 ;;      Temps:          3       0       0       0       0
  1081 ;;      Totals:         3       0       0       0       0
  1082 ;;Total ram usage:        3 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    2
  1085 ;; This function calls:
  1086 ;;		_SPI_Read
  1087 ;;		_SPI_Write
  1088 ;; This function is called by:
  1089 ;;		Interrupt level 1
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _ISR
  1095  00B9                     _ISR:
  1096  00B9                     i1l768:
  1097                           
  1098                           ;S2.c: 67:     if (SSPIF == 1){
  1099  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1100  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1101  00BB  1D8C               	btfss	12,3	;volatile
  1102  00BC  28BE               	goto	u3_21
  1103  00BD  28BF               	goto	u3_20
  1104  00BE                     u3_21:
  1105  00BE  28D0               	goto	i1l58
  1106  00BF                     u3_20:
  1107  00BF                     i1l770:
  1108                           
  1109                           ;S2.c: 68:         slave = SPI_Read();
  1110  00BF  120A  118A  2112  120A  118A  	fcall	_SPI_Read
  1111  00C4  00F1               	movwf	??_ISR
  1112  00C5  0871               	movf	??_ISR,w
  1113  00C6  00F5               	movwf	_slave
  1114                           
  1115                           ;S2.c: 69:         SPI_Write(BBB);
  1116  00C7  0878               	movf	_BBB,w
  1117  00C8  120A  118A  2122  120A  118A  	fcall	_SPI_Write
  1118  00CD                     i1l772:
  1119                           
  1120                           ;S2.c: 70:         SSPIF = 0;
  1121  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1122  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1123  00CF  118C               	bcf	12,3	;volatile
  1124  00D0                     i1l58:
  1125  00D0  0873               	movf	??_ISR+2,w
  1126  00D1  008A               	movwf	10
  1127  00D2  0E72               	swapf	??_ISR+1,w
  1128  00D3  0083               	movwf	3
  1129  00D4  0EFE               	swapf	btemp,f
  1130  00D5  0E7E               	swapf	btemp,w
  1131  00D6  0009               	retfie
  1132  00D7                     __end_of_ISR:
  1133                           
  1134                           	psect	intentry
  1135  0004                     __pintentry:	
  1136                           ;incstack = 0
  1137                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1138                           
  1139  0004                     interrupt_function:
  1140  007E                     saved_w	set	btemp
  1141  0004  00FE               	movwf	btemp
  1142  0005  0E03               	swapf	3,w
  1143  0006  00F2               	movwf	??_ISR+1
  1144  0007  080A               	movf	10,w
  1145  0008  00F3               	movwf	??_ISR+2
  1146  0009  120A  118A  28B9   	ljmp	_ISR
  1147                           
  1148                           	psect	text6
  1149  0122                     __ptext6:	
  1150 ;; *************** function _SPI_Write *****************
  1151 ;; Defined at:
  1152 ;;		line 27 in file "SPI.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  a               1    wreg     unsigned char 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  a               1    0[COMMON] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         1       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0
  1169 ;;      Totals:         1       0       0       0       0
  1170 ;;Total ram usage:        1 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_ISR
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _SPI_Write
  1181  0122                     _SPI_Write:
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _SPI_Write: [wreg]
  1185                           ;SPI_Write@a stored from wreg
  1186  0122  00F0               	movwf	SPI_Write@a
  1187  0123                     i1l728:
  1188                           
  1189                           ;SPI.c: 28:     SSPBUF = a;
  1190  0123  0870               	movf	SPI_Write@a,w
  1191  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0126  0093               	movwf	19	;volatile
  1194  0127                     i1l114:
  1195  0127  0008               	return
  1196  0128                     __end_of_SPI_Write:
  1197                           
  1198                           	psect	text7
  1199  0112                     __ptext7:	
  1200 ;; *************** function _SPI_Read *****************
  1201 ;; Defined at:
  1202 ;;		line 43 in file "SPI.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      unsigned char 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    1
  1223 ;; This function calls:
  1224 ;;		_spiReceiveWait
  1225 ;; This function is called by:
  1226 ;;		_ISR
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _SPI_Read
  1232  0112                     _SPI_Read:
  1233  0112                     i1l722:	
  1234                           ;incstack = 0
  1235                           ; Regs used in _SPI_Read: [wreg+status,2+status,0+pclath+cstack]
  1236                           
  1237                           
  1238                           ;SPI.c: 44:     spiReceiveWait();
  1239  0112  120A  118A  211B  120A  118A  	fcall	_spiReceiveWait
  1240  0117                     i1l724:
  1241                           
  1242                           ;SPI.c: 45:     return (SSPBUF);
  1243  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1245  0119  0813               	movf	19,w	;volatile
  1246  011A                     i1l128:
  1247  011A  0008               	return
  1248  011B                     __end_of_SPI_Read:
  1249                           
  1250                           	psect	text8
  1251  011B                     __ptext8:	
  1252 ;; *************** function _spiReceiveWait *****************
  1253 ;; Defined at:
  1254 ;;		line 31 in file "SPI.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		None
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       0       0       0       0
  1269 ;;      Locals:         0       0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0
  1271 ;;      Totals:         0       0       0       0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_SPI_Read
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _spiReceiveWait
  1283  011B                     _spiReceiveWait:
  1284  011B                     i1l720:	
  1285                           ;incstack = 0
  1286                           ; Regs used in _spiReceiveWait: []
  1287                           
  1288  011B                     i1l117:	
  1289                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1290                           
  1291  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1292  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1293  011D  1C14               	btfss	20,0	;volatile
  1294  011E  2920               	goto	u1_21
  1295  011F  2921               	goto	u1_20
  1296  0120                     u1_21:
  1297  0120  291B               	goto	i1l117
  1298  0121                     u1_20:
  1299  0121                     i1l120:
  1300  0121  0008               	return
  1301  0122                     __end_of_spiReceiveWait:
  1302  007E                     btemp	set	126	;btemp
  1303  007E                     wtemp0	set	126
  1304                           
  1305                           	psect	config
  1306                           
  1307                           ;Config register CONFIG1 @ 0x2007
  1308                           ;	Oscillator Selection bits
  1309                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1310                           ;	Watchdog Timer Enable bit
  1311                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1312                           ;	Power-up Timer Enable bit
  1313                           ;	PWRTE = OFF, PWRT disabled
  1314                           ;	RE3/MCLR pin function select bit
  1315                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1316                           ;	Code Protection bit
  1317                           ;	CP = OFF, Program memory code protection is disabled
  1318                           ;	Data Code Protection bit
  1319                           ;	CPD = OFF, Data memory code protection is disabled
  1320                           ;	Brown Out Reset Selection bits
  1321                           ;	BOREN = OFF, BOR disabled
  1322                           ;	Internal External Switchover bit
  1323                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1324                           ;	Fail-Safe Clock Monitor Enabled bit
  1325                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1326                           ;	Low Voltage Programming Enable bit
  1327                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1328                           ;	In-Circuit Debugger Mode bit
  1329                           ;	DEBUG = 0x1, unprogrammed default
  1330  2007                     	org	8199
  1331  2007  20D1               	dw	8401
  1332                           
  1333                           ;Config register CONFIG2 @ 0x2008
  1334                           ;	Brown-out Reset Selection bit
  1335                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1336                           ;	Flash Program Memory Self Write Enable bits
  1337                           ;	WRT = OFF, Write protection off
  1338  2008                     	org	8200
  1339  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Init

Critical Paths under _ISR in COMMON

    _ISR->_SPI_Write

Critical Paths under _main in BANK0

    _main->_MINUS
    _main->_PLUS
    _main->_SPI_Init

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     456
                                              3 BANK0      2     2      0
                              _MINUS
                               _PLUS
                           _SPI_Init
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _PLUS                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _MINUS                                                3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                           _SPI_Read
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (3) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SPI_Read                                             0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MINUS
   _PLUS
   _SPI_Init
   _setup

 _ISR (ROOT)
   _SPI_Read
     _spiReceiveWait
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 01:40:48 2021

            _SSPSTATbits 0094                       l72 0054                       l73 0057  
                     l74 005A                       l75 005D                       l92 0111  
                     l76 0060                       l77 0063                       l86 00FF  
                     l78 0066                       l79 0069                       l89 00EC  
                    l110 00B3                      l111 00B8                      _BBB 0078  
                    l730 00ED                      l900 00A3                      l740 00FC  
                    l732 00F5                      l910 00DD                      l902 00A9  
                    l742 00FD                      l734 00F7                      l904 00AB  
                    l744 00FE                      l736 00F8                      l920 0017  
                    l914 0100                      l906 00B2                      l738 00FB  
                    l930 0036                      l922 001C                      l916 0102  
                    l908 00D7                      l940 004B                      l932 003B  
                    l924 002A                      l942 0050                      l934 003F  
                    l926 0030                      l944 0052                      l936 0044  
                    l928 0034                      l946 006B                      l938 0045  
                    l948 006D                      l898 009B                      l986 0077  
                    u200 004B                      u201 004A                      u150 00A3  
                    u151 00A2                      u160 0030                      u217 00E5  
                    u161 002F                      u170 0034                      u227 010A  
                    u171 0033                      u180 003B                      u181 003A  
                    u190 003F                      u191 003E                      _ISR 00B9  
                   ?_ISR 0070                     i1l58 00D0                     _PLUS 00D7  
                   u1_20 0121                     u1_21 0120                     u3_20 00BF  
                   u3_21 00BE                     _main 0017                     btemp 007E  
     SPI_Init@sClockIdle 0021                     start 000C                    ??_ISR 0071  
    SPI_Init@sDataSample 0020                    ?_PLUS 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l120 0121                    i1l114 0127  
                  i1l117 011B                    i1l128 011A                    i1l720 011B  
                  i1l722 0112                    i1l724 0117                    i1l728 0123  
                  i1l770 00BF                    i1l772 00CD                    i1l768 00B9  
                  _MINUS 0100                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _START 0077                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _SSPIF 0063  
                  _Ready 0076    SPI_Init@sTransmitEdge 0022                    _slave 0075  
                  _setup 00ED         __end_of_SPI_Init 00B9         __end_of_SPI_Read 011B  
                  pclath 000A                    status 0003                    wtemp0 007E  
     __size_of_SPI_Write 0006             __end_of_PLUS 00ED          __initialization 000F  
           __end_of_main 009A                   ??_PLUS 0020                   ??_main 0023  
                 ?_MINUS 0070                   ?_setup 0070                   _ANSELH 0189  
                 _TRISC3 043B                   _TRISC4 043C                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013        __end_of_SPI_Write 0128  
                 saved_w 007E  __end_of__initialization 0013            SPI_Init@sType 0074  
          __end_of_MINUS 0112           __pcstackCOMMON 0070            __end_of_setup 0100  
              ?_SPI_Init 0020                ?_SPI_Read 0070                  ??_MINUS 0020  
                ??_setup 0074               __pmaintext 0017               __pintentry 0004  
__size_of_spiReceiveWait 0007               ??_SPI_Init 0074               ??_SPI_Read 0070  
                _SSPSTAT 0094                  __ptext1 00ED                  __ptext2 009A  
                __ptext3 00D7                  __ptext4 0100                  __ptext5 00B9  
                __ptext6 0122                  __ptext7 0112                  __ptext8 011B  
           __size_of_ISR 001E     end_of_initialization 0013                _PORTBbits 0006  
              _PORTDbits 0008                _TRISAbits 0085                _SPI_Write 0122  
         _spiReceiveWait 011B        __size_of_SPI_Init 001F        __size_of_SPI_Read 0009  
    start_initialization 000F              __end_of_ISR 00D7               ?_SPI_Write 0070  
 __end_of_spiReceiveWait 0122              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070           __size_of_MINUS 0012  
            ??_SPI_Write 0070           __size_of_setup 0013        interrupt_function 0004  
               _SPI_Init 009A                 _SPI_Read 0112               SPI_Write@a 0070  
          __size_of_PLUS 0016            __size_of_main 0083                 intlevel1 0000  
       ??_spiReceiveWait 0070  
