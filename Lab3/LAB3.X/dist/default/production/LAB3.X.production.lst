

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 21:51:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0008                     _PORTDbits	set	8
   290  0008                     _PORTD	set	8
   291  0007                     _PORTC	set	7
   292  0006                     _PORTB	set	6
   293  0009                     _PORTE	set	9
   294  0043                     _RD3	set	67
   295  0047                     _RD7	set	71
   296  0046                     _RD6	set	70
   297  0045                     _RD5	set	69
   298  0044                     _RD4	set	68
   299  0087                     _TRISC	set	135
   300  0086                     _TRISB	set	134
   301  0089                     _TRISE	set	137
   302  0088                     _TRISD	set	136
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	strings
   307  0003                     __pstrings:
   308  0003                     stringtab:
   309  0003                     __stringtab:
   310  0003                     stringcode:	
   311                           ;	String table - string pointers are 1 byte each
   312                           
   313  0003                     stringdir:
   314  0003  3000               	movlw	high stringdir
   315  0004  008A               	movwf	10
   316  0005  0804               	movf	4,w
   317  0006  0A84               	incf	4,f
   318  0007  0782               	addwf	2,f
   319  0008                     __stringbase:
   320  0008  3400               	retlw	0
   321  0009                     __end_of__stringtab:
   322  0009                     STR_5:
   323  0009  3477               	retlw	119	;'w'
   324  000A  3477               	retlw	119	;'w'
   325  000B  3477               	retlw	119	;'w'
   326  000C  342E               	retlw	46	;'.'
   327  000D  3465               	retlw	101	;'e'
   328  000E  346C               	retlw	108	;'l'
   329  000F  3465               	retlw	101	;'e'
   330  0010  3463               	retlw	99	;'c'
   331  0011  3474               	retlw	116	;'t'
   332  0012  3472               	retlw	114	;'r'
   333  0013  346F               	retlw	111	;'o'
   334  0014  3453               	retlw	83	;'S'
   335  0015  346F               	retlw	111	;'o'
   336  0016  346D               	retlw	109	;'m'
   337  0017  3465               	retlw	101	;'e'
   338  0018  342E               	retlw	46	;'.'
   339  0019  3463               	retlw	99	;'c'
   340  001A  346F               	retlw	111	;'o'
   341  001B  346D               	retlw	109	;'m'
   342  001C  3400               	retlw	0
   343  001D                     STR_1:
   344  001D  344C               	retlw	76	;'L'
   345  001E  3443               	retlw	67	;'C'
   346  001F  3444               	retlw	68	;'D'
   347  0020  3420               	retlw	32	;' '
   348  0021  344C               	retlw	76	;'L'
   349  0022  3469               	retlw	105	;'i'
   350  0023  3462               	retlw	98	;'b'
   351  0024  3472               	retlw	114	;'r'
   352  0025  3461               	retlw	97	;'a'
   353  0026  3472               	retlw	114	;'r'
   354  0027  3479               	retlw	121	;'y'
   355  0028  3420               	retlw	32	;' '
   356  0029  3466               	retlw	102	;'f'
   357  002A  346F               	retlw	111	;'o'
   358  002B  3472               	retlw	114	;'r'
   359  002C  3400               	retlw	0
   360  002D                     STR_3:
   361  002D  3444               	retlw	68	;'D'
   362  002E  3465               	retlw	101	;'e'
   363  002F  3476               	retlw	118	;'v'
   364  0030  3465               	retlw	101	;'e'
   365  0031  346C               	retlw	108	;'l'
   366  0032  346F               	retlw	111	;'o'
   367  0033  3470               	retlw	112	;'p'
   368  0034  3465               	retlw	101	;'e'
   369  0035  3464               	retlw	100	;'d'
   370  0036  3420               	retlw	32	;' '
   371  0037  3442               	retlw	66	;'B'
   372  0038  3479               	retlw	121	;'y'
   373  0039  3400               	retlw	0
   374  003A                     STR_4:
   375  003A  3465               	retlw	101	;'e'
   376  003B  346C               	retlw	108	;'l'
   377  003C  3465               	retlw	101	;'e'
   378  003D  3463               	retlw	99	;'c'
   379  003E  3474               	retlw	116	;'t'
   380  003F  3472               	retlw	114	;'r'
   381  0040  346F               	retlw	111	;'o'
   382  0041  3453               	retlw	83	;'S'
   383  0042  346F               	retlw	111	;'o'
   384  0043  346D               	retlw	109	;'m'
   385  0044  3465               	retlw	101	;'e'
   386  0045  3400               	retlw	0
   387  0046                     STR_2:
   388  0046  344D               	retlw	77	;'M'
   389  0047  3450               	retlw	80	;'P'
   390  0048  344C               	retlw	76	;'L'
   391  0049  3441               	retlw	65	;'A'
   392  004A  3442               	retlw	66	;'B'
   393  004B  3420               	retlw	32	;' '
   394  004C  3458               	retlw	88	;'X'
   395  004D  3443               	retlw	67	;'C'
   396  004E  3438               	retlw	56	;'8'
   397  004F  3400               	retlw	0
   398                           
   399                           	psect	cinit
   400  07FC                     start_initialization:	
   401                           ; #config settings
   402                           
   403  07FC                     __initialization:
   404  07FC                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  07FC                     __end_of__initialization:
   408  07FC  0183               	clrf	3
   409  07FD  120A  118A  2F0F   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	cstackCOMMON
   412  0070                     __pcstackCOMMON:
   413  0070                     ?_Lcd_Init:
   414  0070                     ?_Lcd_Clear:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_Lcd_Write_String:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_Lcd_Shift_Left:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_Lcd_Shift_Right:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_Lcd_Write_Char:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_main:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_Lcd_Port:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ??_Lcd_Port:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_Lcd_Cmd:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     Lcd_Port@a:	
   442                           ; 1 bytes @ 0x0
   443                           
   444                           
   445                           ; 1 bytes @ 0x0
   446  0070                     	ds	1
   447  0071                     ??_Lcd_Write_Char:
   448  0071                     ??_Lcd_Cmd:	
   449                           ; 1 bytes @ 0x1
   450                           
   451                           
   452                           ; 1 bytes @ 0x1
   453  0071                     	ds	1
   454  0072                     Lcd_Write_Char@temp:
   455                           
   456                           ; 1 bytes @ 0x2
   457  0072                     	ds	1
   458  0073                     Lcd_Cmd@a:
   459  0073                     Lcd_Write_Char@y:	
   460                           ; 1 bytes @ 0x3
   461                           
   462                           
   463                           ; 1 bytes @ 0x3
   464  0073                     	ds	1
   465  0074                     ??_Lcd_Init:
   466  0074                     ??_Lcd_Clear:	
   467                           ; 1 bytes @ 0x4
   468                           
   469  0074                     ?_Lcd_Set_Cursor:	
   470                           ; 1 bytes @ 0x4
   471                           
   472  0074                     ??_Lcd_Shift_Left:	
   473                           ; 1 bytes @ 0x4
   474                           
   475  0074                     ??_Lcd_Shift_Right:	
   476                           ; 1 bytes @ 0x4
   477                           
   478  0074                     Lcd_Set_Cursor@b:	
   479                           ; 1 bytes @ 0x4
   480                           
   481  0074                     Lcd_Write_Char@a:	
   482                           ; 1 bytes @ 0x4
   483                           
   484                           
   485                           ; 1 bytes @ 0x4
   486  0074                     	ds	1
   487  0075                     ??_Lcd_Set_Cursor:
   488  0075                     ??_Lcd_Write_String:	
   489                           ; 1 bytes @ 0x5
   490                           
   491  0075                     Lcd_Write_String@i:	
   492                           ; 1 bytes @ 0x5
   493                           
   494                           
   495                           ; 2 bytes @ 0x5
   496  0075                     	ds	2
   497  0077                     Lcd_Set_Cursor@a:
   498  0077                     Lcd_Write_String@a:	
   499                           ; 1 bytes @ 0x7
   500                           
   501                           
   502                           ; 1 bytes @ 0x7
   503  0077                     	ds	1
   504  0078                     Lcd_Set_Cursor@z:
   505                           
   506                           ; 1 bytes @ 0x8
   507  0078                     	ds	1
   508  0079                     Lcd_Set_Cursor@y:
   509                           
   510                           ; 1 bytes @ 0x9
   511  0079                     	ds	1
   512  007A                     Lcd_Set_Cursor@temp:
   513                           
   514                           ; 1 bytes @ 0xA
   515  007A                     	ds	1
   516  007B                     ??_main:
   517                           
   518                           ; 1 bytes @ 0xB
   519  007B                     	ds	3
   520                           
   521                           	psect	cstackBANK0
   522  0020                     __pcstackBANK0:
   523  0020                     main@a:
   524                           
   525                           ; 2 bytes @ 0x0
   526  0020                     	ds	2
   527                           
   528                           	psect	maintext
   529  070F                     __pmaintext:	
   530 ;;
   531 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   532 ;;
   533 ;; *************** function _main *****************
   534 ;; Defined at:
   535 ;;		line 67 in file "LAB3.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  a               2    0[BANK0 ] unsigned int 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : B00/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   549 ;;      Params:         0       0       0       0       0
   550 ;;      Locals:         0       2       0       0       0
   551 ;;      Temps:          3       0       0       0       0
   552 ;;      Totals:         3       2       0       0       0
   553 ;;Total ram usage:        5 bytes
   554 ;; Hardware stack levels required when called:    3
   555 ;; This function calls:
   556 ;;		_Lcd_Clear
   557 ;;		_Lcd_Init
   558 ;;		_Lcd_Set_Cursor
   559 ;;		_Lcd_Shift_Left
   560 ;;		_Lcd_Shift_Right
   561 ;;		_Lcd_Write_Char
   562 ;;		_Lcd_Write_String
   563 ;; This function is called by:
   564 ;;		Startup code after reset
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _main
   570  070F                     _main:
   571  070F                     l934:	
   572                           ;incstack = 0
   573                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   574                           
   575                           
   576                           ;LAB3.c: 69:     unsigned int a;;LAB3.c: 70:   TRISD = 0x00;
   577  070F  1683               	bsf	3,5	;RP0=1, select bank1
   578  0710  1303               	bcf	3,6	;RP1=0, select bank1
   579  0711  0188               	clrf	8	;volatile
   580  0712                     l936:
   581                           
   582                           ;LAB3.c: 71:   Lcd_Init();
   583  0712  120A  118A  26B2  120A  118A  	fcall	_Lcd_Init
   584  0717                     l938:
   585                           
   586                           ;LAB3.c: 78:         Lcd_Clear();
   587  0717  120A  118A  259F  120A  118A  	fcall	_Lcd_Clear
   588  071C                     l940:
   589                           
   590                           ;LAB3.c: 79:     Lcd_Set_Cursor(1,1);
   591  071C  01F4               	clrf	Lcd_Set_Cursor@b
   592  071D  0AF4               	incf	Lcd_Set_Cursor@b,f
   593  071E  3001               	movlw	1
   594  071F  120A  118A  2660  120A  118A  	fcall	_Lcd_Set_Cursor
   595  0724                     l942:
   596                           
   597                           ;LAB3.c: 80:     Lcd_Write_String("LCD Library for");
   598  0724  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   599  0725  120A  118A  2602  120A  118A  	fcall	_Lcd_Write_String
   600  072A                     l944:
   601                           
   602                           ;LAB3.c: 81:     Lcd_Set_Cursor(2,1);
   603  072A  01F4               	clrf	Lcd_Set_Cursor@b
   604  072B  0AF4               	incf	Lcd_Set_Cursor@b,f
   605  072C  3002               	movlw	2
   606  072D  120A  118A  2660  120A  118A  	fcall	_Lcd_Set_Cursor
   607  0732                     l946:
   608                           
   609                           ;LAB3.c: 82:     Lcd_Write_String("MPLAB XC8");
   610  0732  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   611  0733  120A  118A  2602  120A  118A  	fcall	_Lcd_Write_String
   612  0738                     l948:
   613                           
   614                           ;LAB3.c: 83:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   615  0738  3015               	movlw	21
   616  0739  00FD               	movwf	??_main+2
   617  073A  304B               	movlw	75
   618  073B  00FC               	movwf	??_main+1
   619  073C  30BE               	movlw	190
   620  073D  00FB               	movwf	??_main
   621  073E                     u257:
   622  073E  0BFB               	decfsz	??_main,f
   623  073F  2F3E               	goto	u257
   624  0740  0BFC               	decfsz	??_main+1,f
   625  0741  2F3E               	goto	u257
   626  0742  0BFD               	decfsz	??_main+2,f
   627  0743  2F3E               	goto	u257
   628  0744  0000               	nop
   629  0745                     l950:
   630                           
   631                           ;LAB3.c: 84:     Lcd_Clear();
   632  0745  120A  118A  259F  120A  118A  	fcall	_Lcd_Clear
   633  074A                     l952:
   634                           
   635                           ;LAB3.c: 85:     Lcd_Set_Cursor(1,1);
   636  074A  01F4               	clrf	Lcd_Set_Cursor@b
   637  074B  0AF4               	incf	Lcd_Set_Cursor@b,f
   638  074C  3001               	movlw	1
   639  074D  120A  118A  2660  120A  118A  	fcall	_Lcd_Set_Cursor
   640  0752                     l954:
   641                           
   642                           ;LAB3.c: 86:     Lcd_Write_String("Developed By");
   643  0752  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   644  0753  120A  118A  2602  120A  118A  	fcall	_Lcd_Write_String
   645  0758                     l956:
   646                           
   647                           ;LAB3.c: 87:     Lcd_Set_Cursor(2,1);
   648  0758  01F4               	clrf	Lcd_Set_Cursor@b
   649  0759  0AF4               	incf	Lcd_Set_Cursor@b,f
   650  075A  3002               	movlw	2
   651  075B  120A  118A  2660  120A  118A  	fcall	_Lcd_Set_Cursor
   652  0760                     l958:
   653                           
   654                           ;LAB3.c: 88:     Lcd_Write_String("electroSome");
   655  0760  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   656  0761  120A  118A  2602  120A  118A  	fcall	_Lcd_Write_String
   657  0766                     l960:
   658                           
   659                           ;LAB3.c: 89:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   660  0766  3015               	movlw	21
   661  0767  00FD               	movwf	??_main+2
   662  0768  304B               	movlw	75
   663  0769  00FC               	movwf	??_main+1
   664  076A  30BE               	movlw	190
   665  076B  00FB               	movwf	??_main
   666  076C                     u267:
   667  076C  0BFB               	decfsz	??_main,f
   668  076D  2F6C               	goto	u267
   669  076E  0BFC               	decfsz	??_main+1,f
   670  076F  2F6C               	goto	u267
   671  0770  0BFD               	decfsz	??_main+2,f
   672  0771  2F6C               	goto	u267
   673  0772  0000               	nop
   674  0773                     l962:
   675                           
   676                           ;LAB3.c: 90:     Lcd_Clear();
   677  0773  120A  118A  259F  120A  118A  	fcall	_Lcd_Clear
   678  0778                     l964:
   679                           
   680                           ;LAB3.c: 91:     Lcd_Set_Cursor(1,1);
   681  0778  01F4               	clrf	Lcd_Set_Cursor@b
   682  0779  0AF4               	incf	Lcd_Set_Cursor@b,f
   683  077A  3001               	movlw	1
   684  077B  120A  118A  2660  120A  118A  	fcall	_Lcd_Set_Cursor
   685  0780                     l966:
   686                           
   687                           ;LAB3.c: 92:     Lcd_Write_String("www.electroSome.com");
   688  0780  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   689  0781  120A  118A  2602  120A  118A  	fcall	_Lcd_Write_String
   690  0786                     l968:
   691                           
   692                           ;LAB3.c: 94:     for(a=0;a<15;a++)
   693  0786  1283               	bcf	3,5	;RP0=0, select bank0
   694  0787  1303               	bcf	3,6	;RP1=0, select bank0
   695  0788  01A0               	clrf	main@a
   696  0789  01A1               	clrf	main@a+1
   697  078A                     l974:
   698                           
   699                           ;LAB3.c: 95:     {;LAB3.c: 96:         _delay((unsigned long)((300)*(8000000/4000.0)));
   700  078A  3004               	movlw	4
   701  078B  00FD               	movwf	??_main+2
   702  078C  300C               	movlw	12
   703  078D  00FC               	movwf	??_main+1
   704  078E  3033               	movlw	51
   705  078F  00FB               	movwf	??_main
   706  0790                     u277:
   707  0790  0BFB               	decfsz	??_main,f
   708  0791  2F90               	goto	u277
   709  0792  0BFC               	decfsz	??_main+1,f
   710  0793  2F90               	goto	u277
   711  0794  0BFD               	decfsz	??_main+2,f
   712  0795  2F90               	goto	u277
   713  0796  2F97               	nop2
   714  0797                     l976:
   715                           
   716                           ;LAB3.c: 97:         Lcd_Shift_Left();
   717  0797  120A  118A  25AC  120A  118A  	fcall	_Lcd_Shift_Left
   718  079C                     l978:
   719                           
   720                           ;LAB3.c: 98:     }
   721  079C  3001               	movlw	1
   722  079D  1283               	bcf	3,5	;RP0=0, select bank0
   723  079E  1303               	bcf	3,6	;RP1=0, select bank0
   724  079F  07A0               	addwf	main@a,f
   725  07A0  1803               	skipnc
   726  07A1  0AA1               	incf	main@a+1,f
   727  07A2  3000               	movlw	0
   728  07A3  07A1               	addwf	main@a+1,f
   729  07A4                     l980:
   730  07A4  3000               	movlw	0
   731  07A5  0221               	subwf	main@a+1,w
   732  07A6  300F               	movlw	15
   733  07A7  1903               	skipnz
   734  07A8  0220               	subwf	main@a,w
   735  07A9  1C03               	skipc
   736  07AA  2FAC               	goto	u231
   737  07AB  2FAD               	goto	u230
   738  07AC                     u231:
   739  07AC  2F8A               	goto	l974
   740  07AD                     u230:
   741  07AD                     l982:
   742                           
   743                           ;LAB3.c: 100:     for(a=0;a<15;a++)
   744  07AD  01A0               	clrf	main@a
   745  07AE  01A1               	clrf	main@a+1
   746  07AF                     l988:
   747                           
   748                           ;LAB3.c: 101:     {;LAB3.c: 102:         _delay((unsigned long)((300)*(8000000/4000.0)))
      +                          ;
   749  07AF  3004               	movlw	4
   750  07B0  00FD               	movwf	??_main+2
   751  07B1  300C               	movlw	12
   752  07B2  00FC               	movwf	??_main+1
   753  07B3  3033               	movlw	51
   754  07B4  00FB               	movwf	??_main
   755  07B5                     u287:
   756  07B5  0BFB               	decfsz	??_main,f
   757  07B6  2FB5               	goto	u287
   758  07B7  0BFC               	decfsz	??_main+1,f
   759  07B8  2FB5               	goto	u287
   760  07B9  0BFD               	decfsz	??_main+2,f
   761  07BA  2FB5               	goto	u287
   762  07BB  2FBC               	nop2
   763  07BC                     l990:
   764                           
   765                           ;LAB3.c: 103:         Lcd_Shift_Right();
   766  07BC  120A  118A  25B9  120A  118A  	fcall	_Lcd_Shift_Right
   767  07C1                     l992:
   768                           
   769                           ;LAB3.c: 104:     }
   770  07C1  3001               	movlw	1
   771  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   772  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   773  07C4  07A0               	addwf	main@a,f
   774  07C5  1803               	skipnc
   775  07C6  0AA1               	incf	main@a+1,f
   776  07C7  3000               	movlw	0
   777  07C8  07A1               	addwf	main@a+1,f
   778  07C9                     l994:
   779  07C9  3000               	movlw	0
   780  07CA  0221               	subwf	main@a+1,w
   781  07CB  300F               	movlw	15
   782  07CC  1903               	skipnz
   783  07CD  0220               	subwf	main@a,w
   784  07CE  1C03               	skipc
   785  07CF  2FD1               	goto	u241
   786  07D0  2FD2               	goto	u240
   787  07D1                     u241:
   788  07D1  2FAF               	goto	l988
   789  07D2                     u240:
   790  07D2                     l996:
   791                           
   792                           ;LAB3.c: 106:     Lcd_Clear();
   793  07D2  120A  118A  259F  120A  118A  	fcall	_Lcd_Clear
   794                           
   795                           ;LAB3.c: 107:     Lcd_Set_Cursor(2,1);
   796  07D7  01F4               	clrf	Lcd_Set_Cursor@b
   797  07D8  0AF4               	incf	Lcd_Set_Cursor@b,f
   798  07D9  3002               	movlw	2
   799  07DA  120A  118A  2660  120A  118A  	fcall	_Lcd_Set_Cursor
   800                           
   801                           ;LAB3.c: 108:     Lcd_Write_Char('e');
   802  07DF  3065               	movlw	101
   803  07E0  120A  118A  2627  120A  118A  	fcall	_Lcd_Write_Char
   804                           
   805                           ;LAB3.c: 109:     Lcd_Write_Char('S');
   806  07E5  3053               	movlw	83
   807  07E6  120A  118A  2627  120A  118A  	fcall	_Lcd_Write_Char
   808  07EB                     l998:
   809                           
   810                           ;LAB3.c: 110:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   811  07EB  3015               	movlw	21
   812  07EC  00FD               	movwf	??_main+2
   813  07ED  304B               	movlw	75
   814  07EE  00FC               	movwf	??_main+1
   815  07EF  30BE               	movlw	190
   816  07F0  00FB               	movwf	??_main
   817  07F1                     u297:
   818  07F1  0BFB               	decfsz	??_main,f
   819  07F2  2FF1               	goto	u297
   820  07F3  0BFC               	decfsz	??_main+1,f
   821  07F4  2FF1               	goto	u297
   822  07F5  0BFD               	decfsz	??_main+2,f
   823  07F6  2FF1               	goto	u297
   824  07F7  0000               	nop
   825  07F8  2F17               	goto	l938
   826  07F9  120A  118A  2800   	ljmp	start
   827  07FC                     __end_of_main:
   828                           
   829                           	psect	text1
   830  0602                     __ptext1:	
   831 ;; *************** function _Lcd_Write_String *****************
   832 ;; Defined at:
   833 ;;		line 99 in file "LCD.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  a               1    wreg     PTR unsigned char 
   836 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   837 ;;		 -> STR_1(16), 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  a               1    7[COMMON] PTR unsigned char 
   840 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   841 ;;		 -> STR_1(16), 
   842 ;;  i               2    5[COMMON] int 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         0       0       0       0       0
   853 ;;      Locals:         3       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0
   855 ;;      Totals:         3       0       0       0       0
   856 ;;Total ram usage:        3 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; Hardware stack levels required when called:    2
   859 ;; This function calls:
   860 ;;		_Lcd_Write_Char
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           
   867                           ;psect for function _Lcd_Write_String
   868  0602                     _Lcd_Write_String:
   869                           
   870                           ;incstack = 0
   871                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   872                           ;Lcd_Write_String@a stored from wreg
   873  0602  00F7               	movwf	Lcd_Write_String@a
   874  0603                     l922:
   875                           
   876                           ;LCD.c: 100:  int i;;LCD.c: 101:  for(i=0;a[i]!='\0';i++)
   877  0603  01F5               	clrf	Lcd_Write_String@i
   878  0604  01F6               	clrf	Lcd_Write_String@i+1
   879  0605  2E19               	goto	l928
   880  0606                     l924:
   881                           
   882                           ;LCD.c: 102:     Lcd_Write_Char(a[i]);
   883  0606  0875               	movf	Lcd_Write_String@i,w
   884  0607  0777               	addwf	Lcd_Write_String@a,w
   885  0608  0084               	movwf	4
   886  0609  120A  118A  2003  120A  118A  	fcall	stringdir
   887  060E  120A  118A  2627  120A  118A  	fcall	_Lcd_Write_Char
   888  0613                     l926:
   889  0613  3001               	movlw	1
   890  0614  07F5               	addwf	Lcd_Write_String@i,f
   891  0615  1803               	skipnc
   892  0616  0AF6               	incf	Lcd_Write_String@i+1,f
   893  0617  3000               	movlw	0
   894  0618  07F6               	addwf	Lcd_Write_String@i+1,f
   895  0619                     l928:
   896  0619  0875               	movf	Lcd_Write_String@i,w
   897  061A  0777               	addwf	Lcd_Write_String@a,w
   898  061B  0084               	movwf	4
   899  061C  120A  118A  2003  120A  118A  	fcall	stringdir
   900  0621  3A00               	xorlw	0
   901  0622  1D03               	skipz
   902  0623  2E25               	goto	u221
   903  0624  2E26               	goto	u220
   904  0625                     u221:
   905  0625  2E06               	goto	l924
   906  0626                     u220:
   907  0626                     l100:
   908  0626  0008               	return
   909  0627                     __end_of_Lcd_Write_String:
   910                           
   911                           	psect	text2
   912  0627                     __ptext2:	
   913 ;; *************** function _Lcd_Write_Char *****************
   914 ;; Defined at:
   915 ;;		line 84 in file "LCD.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  a               1    wreg     unsigned char 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  a               1    4[COMMON] unsigned char 
   920 ;;  y               1    3[COMMON] unsigned char 
   921 ;;  temp            1    2[COMMON] unsigned char 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   931 ;;      Params:         0       0       0       0       0
   932 ;;      Locals:         3       0       0       0       0
   933 ;;      Temps:          1       0       0       0       0
   934 ;;      Totals:         4       0       0       0       0
   935 ;;Total ram usage:        4 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    1
   938 ;; This function calls:
   939 ;;		_Lcd_Port
   940 ;; This function is called by:
   941 ;;		_main
   942 ;;		_Lcd_Write_String
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _Lcd_Write_Char
   948  0627                     _Lcd_Write_Char:
   949                           
   950                           ;incstack = 0
   951                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   952                           ;Lcd_Write_Char@a stored from wreg
   953  0627  00F4               	movwf	Lcd_Write_Char@a
   954  0628                     l860:
   955                           
   956                           ;LCD.c: 85:    char temp,y;;LCD.c: 86:    temp = a&0x0F;
   957  0628  0874               	movf	Lcd_Write_Char@a,w
   958  0629  390F               	andlw	15
   959  062A  00F1               	movwf	??_Lcd_Write_Char
   960  062B  0871               	movf	??_Lcd_Write_Char,w
   961  062C  00F2               	movwf	Lcd_Write_Char@temp
   962                           
   963                           ;LCD.c: 87:    y = a&0xF0;
   964  062D  0874               	movf	Lcd_Write_Char@a,w
   965  062E  39F0               	andlw	240
   966  062F  00F1               	movwf	??_Lcd_Write_Char
   967  0630  0871               	movf	??_Lcd_Write_Char,w
   968  0631  00F3               	movwf	Lcd_Write_Char@y
   969  0632                     l862:
   970                           
   971                           ;LCD.c: 88:    PORTDbits.RD2 = 1;
   972  0632  1283               	bcf	3,5	;RP0=0, select bank0
   973  0633  1303               	bcf	3,6	;RP1=0, select bank0
   974  0634  1508               	bsf	8,2	;volatile
   975  0635                     l864:
   976                           
   977                           ;LCD.c: 89:    Lcd_Port(y>>4);
   978  0635  0873               	movf	Lcd_Write_Char@y,w
   979  0636  00F1               	movwf	??_Lcd_Write_Char
   980  0637  3004               	movlw	4
   981  0638                     u175:
   982  0638  1003               	clrc
   983  0639  0CF1               	rrf	??_Lcd_Write_Char,f
   984  063A  3EFF               	addlw	-1
   985  063B  1D03               	skipz
   986  063C  2E38               	goto	u175
   987  063D  0871               	movf	??_Lcd_Write_Char,w
   988  063E  120A  118A  25E0  120A  118A  	fcall	_Lcd_Port
   989  0643                     l866:
   990                           
   991                           ;LCD.c: 90:    RD3 = 1;
   992  0643  1283               	bcf	3,5	;RP0=0, select bank0
   993  0644  1303               	bcf	3,6	;RP1=0, select bank0
   994  0645  1588               	bsf	8,3	;volatile
   995  0646                     l868:
   996                           
   997                           ;LCD.c: 91:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   998  0646  301A               	movlw	26
   999  0647  00F1               	movwf	??_Lcd_Write_Char
  1000  0648                     u307:
  1001  0648  0BF1               	decfsz	??_Lcd_Write_Char,f
  1002  0649  2E48               	goto	u307
  1003  064A  0000               	nop
  1004  064B                     l870:
  1005                           
  1006                           ;LCD.c: 92:    RD3 = 0;
  1007  064B  1283               	bcf	3,5	;RP0=0, select bank0
  1008  064C  1303               	bcf	3,6	;RP1=0, select bank0
  1009  064D  1188               	bcf	8,3	;volatile
  1010  064E                     l872:
  1011                           
  1012                           ;LCD.c: 93:    Lcd_Port(temp);
  1013  064E  0872               	movf	Lcd_Write_Char@temp,w
  1014  064F  120A  118A  25E0  120A  118A  	fcall	_Lcd_Port
  1015  0654                     l874:
  1016                           
  1017                           ;LCD.c: 94:    RD3 = 1;
  1018  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0656  1588               	bsf	8,3	;volatile
  1021  0657                     l876:
  1022                           
  1023                           ;LCD.c: 95:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1024  0657  301A               	movlw	26
  1025  0658  00F1               	movwf	??_Lcd_Write_Char
  1026  0659                     u317:
  1027  0659  0BF1               	decfsz	??_Lcd_Write_Char,f
  1028  065A  2E59               	goto	u317
  1029  065B  0000               	nop
  1030  065C                     l878:
  1031                           
  1032                           ;LCD.c: 96:    RD3 = 0;
  1033  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1034  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1035  065E  1188               	bcf	8,3	;volatile
  1036  065F                     l94:
  1037  065F  0008               	return
  1038  0660                     __end_of_Lcd_Write_Char:
  1039                           
  1040                           	psect	text3
  1041  05B9                     __ptext3:	
  1042 ;; *************** function _Lcd_Shift_Right *****************
  1043 ;; Defined at:
  1044 ;;		line 105 in file "LCD.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    2
  1065 ;; This function calls:
  1066 ;;		_Lcd_Cmd
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _Lcd_Shift_Right
  1074  05B9                     _Lcd_Shift_Right:
  1075  05B9                     l932:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1078                           
  1079                           
  1080                           ;LCD.c: 106:  Lcd_Cmd(0x01);
  1081  05B9  3001               	movlw	1
  1082  05BA  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1083                           
  1084                           ;LCD.c: 107:  Lcd_Cmd(0x0C);
  1085  05BF  300C               	movlw	12
  1086  05C0  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1087  05C5                     l103:
  1088  05C5  0008               	return
  1089  05C6                     __end_of_Lcd_Shift_Right:
  1090                           
  1091                           	psect	text4
  1092  05AC                     __ptext4:	
  1093 ;; *************** function _Lcd_Shift_Left *****************
  1094 ;; Defined at:
  1095 ;;		line 110 in file "LCD.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, pclath, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    2
  1116 ;; This function calls:
  1117 ;;		_Lcd_Cmd
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _Lcd_Shift_Left
  1125  05AC                     _Lcd_Shift_Left:
  1126  05AC                     l930:	
  1127                           ;incstack = 0
  1128                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1129                           
  1130                           
  1131                           ;LCD.c: 111:  Lcd_Cmd(0x01);
  1132  05AC  3001               	movlw	1
  1133  05AD  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1134                           
  1135                           ;LCD.c: 112:  Lcd_Cmd(0x08);
  1136  05B2  3008               	movlw	8
  1137  05B3  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1138  05B8                     l106:
  1139  05B8  0008               	return
  1140  05B9                     __end_of_Lcd_Shift_Left:
  1141                           
  1142                           	psect	text5
  1143  0660                     __ptext5:	
  1144 ;; *************** function _Lcd_Set_Cursor *****************
  1145 ;; Defined at:
  1146 ;;		line 48 in file "LCD.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  a               1    wreg     unsigned char 
  1149 ;;  b               1    4[COMMON] unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  a               1    7[COMMON] unsigned char 
  1152 ;;  temp            1   10[COMMON] unsigned char 
  1153 ;;  y               1    9[COMMON] unsigned char 
  1154 ;;  z               1    8[COMMON] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, pclath, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         1       0       0       0       0
  1165 ;;      Locals:         4       0       0       0       0
  1166 ;;      Temps:          2       0       0       0       0
  1167 ;;      Totals:         7       0       0       0       0
  1168 ;;Total ram usage:        7 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    2
  1171 ;; This function calls:
  1172 ;;		_Lcd_Cmd
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           
  1179                           ;psect for function _Lcd_Set_Cursor
  1180  0660                     _Lcd_Set_Cursor:
  1181                           
  1182                           ;incstack = 0
  1183                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1184                           ;Lcd_Set_Cursor@a stored from wreg
  1185  0660  00F7               	movwf	Lcd_Set_Cursor@a
  1186  0661                     l902:
  1187                           
  1188                           ;LCD.c: 49:  char temp,z,y;;LCD.c: 50:  if(a == 1){
  1189  0661  0377               	decf	Lcd_Set_Cursor@a,w
  1190  0662  1D03               	btfss	3,2
  1191  0663  2E65               	goto	u181
  1192  0664  2E66               	goto	u180
  1193  0665                     u181:
  1194  0665  2E89               	goto	l912
  1195  0666                     u180:
  1196  0666                     l904:
  1197                           
  1198                           ;LCD.c: 51:    temp = 0x80 + b - 1;
  1199  0666  0874               	movf	Lcd_Set_Cursor@b,w
  1200  0667  3E7F               	addlw	127
  1201  0668  00F5               	movwf	??_Lcd_Set_Cursor
  1202  0669  0875               	movf	??_Lcd_Set_Cursor,w
  1203  066A  00FA               	movwf	Lcd_Set_Cursor@temp
  1204                           
  1205                           ;LCD.c: 52:   z = temp>>4;
  1206  066B  087A               	movf	Lcd_Set_Cursor@temp,w
  1207  066C  00F5               	movwf	??_Lcd_Set_Cursor
  1208  066D  3004               	movlw	4
  1209  066E                     u195:
  1210  066E  1003               	clrc
  1211  066F  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1212  0670  3EFF               	addlw	-1
  1213  0671  1D03               	skipz
  1214  0672  2E6E               	goto	u195
  1215  0673  0875               	movf	??_Lcd_Set_Cursor,w
  1216  0674  00F6               	movwf	??_Lcd_Set_Cursor+1
  1217  0675  0876               	movf	??_Lcd_Set_Cursor+1,w
  1218  0676  00F8               	movwf	Lcd_Set_Cursor@z
  1219  0677                     l906:
  1220                           
  1221                           ;LCD.c: 53:   y = temp & 0x0F;
  1222  0677  087A               	movf	Lcd_Set_Cursor@temp,w
  1223  0678  390F               	andlw	15
  1224  0679  00F5               	movwf	??_Lcd_Set_Cursor
  1225  067A  0875               	movf	??_Lcd_Set_Cursor,w
  1226  067B  00F9               	movwf	Lcd_Set_Cursor@y
  1227  067C                     l908:
  1228                           
  1229                           ;LCD.c: 54:   Lcd_Cmd(z);
  1230  067C  0878               	movf	Lcd_Set_Cursor@z,w
  1231  067D  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1232  0682                     l910:
  1233                           
  1234                           ;LCD.c: 55:   Lcd_Cmd(y);
  1235  0682  0879               	movf	Lcd_Set_Cursor@y,w
  1236  0683  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1237                           
  1238                           ;LCD.c: 56:  }
  1239  0688  2EB1               	goto	l88
  1240  0689                     l912:
  1241  0689  3002               	movlw	2
  1242  068A  0677               	xorwf	Lcd_Set_Cursor@a,w
  1243  068B  1D03               	btfss	3,2
  1244  068C  2E8E               	goto	u201
  1245  068D  2E8F               	goto	u200
  1246  068E                     u201:
  1247  068E  2EB1               	goto	l88
  1248  068F                     u200:
  1249  068F                     l914:
  1250                           
  1251                           ;LCD.c: 58:   temp = 0xC0 + b - 1;
  1252  068F  0874               	movf	Lcd_Set_Cursor@b,w
  1253  0690  3EBF               	addlw	191
  1254  0691  00F5               	movwf	??_Lcd_Set_Cursor
  1255  0692  0875               	movf	??_Lcd_Set_Cursor,w
  1256  0693  00FA               	movwf	Lcd_Set_Cursor@temp
  1257                           
  1258                           ;LCD.c: 59:   z = temp>>4;
  1259  0694  087A               	movf	Lcd_Set_Cursor@temp,w
  1260  0695  00F5               	movwf	??_Lcd_Set_Cursor
  1261  0696  3004               	movlw	4
  1262  0697                     u215:
  1263  0697  1003               	clrc
  1264  0698  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1265  0699  3EFF               	addlw	-1
  1266  069A  1D03               	skipz
  1267  069B  2E97               	goto	u215
  1268  069C  0875               	movf	??_Lcd_Set_Cursor,w
  1269  069D  00F6               	movwf	??_Lcd_Set_Cursor+1
  1270  069E  0876               	movf	??_Lcd_Set_Cursor+1,w
  1271  069F  00F8               	movwf	Lcd_Set_Cursor@z
  1272  06A0                     l916:
  1273                           
  1274                           ;LCD.c: 60:   y = temp & 0x0F;
  1275  06A0  087A               	movf	Lcd_Set_Cursor@temp,w
  1276  06A1  390F               	andlw	15
  1277  06A2  00F5               	movwf	??_Lcd_Set_Cursor
  1278  06A3  0875               	movf	??_Lcd_Set_Cursor,w
  1279  06A4  00F9               	movwf	Lcd_Set_Cursor@y
  1280  06A5                     l918:
  1281                           
  1282                           ;LCD.c: 61:   Lcd_Cmd(z);
  1283  06A5  0878               	movf	Lcd_Set_Cursor@z,w
  1284  06A6  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1285  06AB                     l920:
  1286                           
  1287                           ;LCD.c: 62:   Lcd_Cmd(y);
  1288  06AB  0879               	movf	Lcd_Set_Cursor@y,w
  1289  06AC  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1290  06B1                     l88:
  1291  06B1  0008               	return
  1292  06B2                     __end_of_Lcd_Set_Cursor:
  1293                           
  1294                           	psect	text6
  1295  06B2                     __ptext6:	
  1296 ;; *************** function _Lcd_Init *****************
  1297 ;; Defined at:
  1298 ;;		line 66 in file "LCD.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, pclath, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0
  1314 ;;      Temps:          2       0       0       0       0
  1315 ;;      Totals:         2       0       0       0       0
  1316 ;;Total ram usage:        2 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    2
  1319 ;; This function calls:
  1320 ;;		_Lcd_Cmd
  1321 ;;		_Lcd_Port
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           
  1328                           ;psect for function _Lcd_Init
  1329  06B2                     _Lcd_Init:
  1330  06B2                     l890:	
  1331                           ;incstack = 0
  1332                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1333                           
  1334                           
  1335                           ;LCD.c: 67:   Lcd_Port(0x00);
  1336  06B2  3000               	movlw	0
  1337  06B3  120A  118A  25E0  120A  118A  	fcall	_Lcd_Port
  1338  06B8                     l892:
  1339                           
  1340                           ;LCD.c: 68:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1341  06B8  3034               	movlw	52
  1342  06B9  00F5               	movwf	??_Lcd_Init+1
  1343  06BA  30F1               	movlw	241
  1344  06BB  00F4               	movwf	??_Lcd_Init
  1345  06BC                     u327:
  1346  06BC  0BF4               	decfsz	??_Lcd_Init,f
  1347  06BD  2EBC               	goto	u327
  1348  06BE  0BF5               	decfsz	??_Lcd_Init+1,f
  1349  06BF  2EBC               	goto	u327
  1350  06C0  2EC1               	nop2
  1351  06C1                     l894:
  1352                           
  1353                           ;LCD.c: 69:   Lcd_Cmd(0x03);
  1354  06C1  3003               	movlw	3
  1355  06C2  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1356                           
  1357                           ;LCD.c: 70:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1358  06C7  300D               	movlw	13
  1359  06C8  00F5               	movwf	??_Lcd_Init+1
  1360  06C9  30FB               	movlw	251
  1361  06CA  00F4               	movwf	??_Lcd_Init
  1362  06CB                     u337:
  1363  06CB  0BF4               	decfsz	??_Lcd_Init,f
  1364  06CC  2ECB               	goto	u337
  1365  06CD  0BF5               	decfsz	??_Lcd_Init+1,f
  1366  06CE  2ECB               	goto	u337
  1367  06CF  2ED0               	nop2
  1368  06D0                     l896:
  1369                           
  1370                           ;LCD.c: 71:   Lcd_Cmd(0x03);
  1371  06D0  3003               	movlw	3
  1372  06D1  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1373  06D6                     l898:
  1374                           
  1375                           ;LCD.c: 72:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1376  06D6  301D               	movlw	29
  1377  06D7  00F5               	movwf	??_Lcd_Init+1
  1378  06D8  3091               	movlw	145
  1379  06D9  00F4               	movwf	??_Lcd_Init
  1380  06DA                     u347:
  1381  06DA  0BF4               	decfsz	??_Lcd_Init,f
  1382  06DB  2EDA               	goto	u347
  1383  06DC  0BF5               	decfsz	??_Lcd_Init+1,f
  1384  06DD  2EDA               	goto	u347
  1385                           
  1386                           ;LCD.c: 73:   Lcd_Cmd(0x03);
  1387  06DE  3003               	movlw	3
  1388  06DF  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1389                           
  1390                           ;LCD.c: 75:   Lcd_Cmd(0x02);
  1391  06E4  3002               	movlw	2
  1392  06E5  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1393                           
  1394                           ;LCD.c: 76:   Lcd_Cmd(0x02);
  1395  06EA  3002               	movlw	2
  1396  06EB  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1397                           
  1398                           ;LCD.c: 77:   Lcd_Cmd(0x08);
  1399  06F0  3008               	movlw	8
  1400  06F1  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1401                           
  1402                           ;LCD.c: 78:   Lcd_Cmd(0x00);
  1403  06F6  3000               	movlw	0
  1404  06F7  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1405                           
  1406                           ;LCD.c: 79:   Lcd_Cmd(0x0C);
  1407  06FC  300C               	movlw	12
  1408  06FD  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1409                           
  1410                           ;LCD.c: 80:   Lcd_Cmd(0x00);
  1411  0702  3000               	movlw	0
  1412  0703  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1413                           
  1414                           ;LCD.c: 81:   Lcd_Cmd(0x06);
  1415  0708  3006               	movlw	6
  1416  0709  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1417  070E                     l91:
  1418  070E  0008               	return
  1419  070F                     __end_of_Lcd_Init:
  1420                           
  1421                           	psect	text7
  1422  059F                     __ptext7:	
  1423 ;; *************** function _Lcd_Clear *****************
  1424 ;; Defined at:
  1425 ;;		line 43 in file "LCD.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0, pclath, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0
  1442 ;;      Totals:         0       0       0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    2
  1446 ;; This function calls:
  1447 ;;		_Lcd_Cmd
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           
  1454                           ;psect for function _Lcd_Clear
  1455  059F                     _Lcd_Clear:
  1456  059F                     l900:	
  1457                           ;incstack = 0
  1458                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1459                           
  1460                           
  1461                           ;LCD.c: 44:  Lcd_Cmd(0);
  1462  059F  3000               	movlw	0
  1463  05A0  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1464                           
  1465                           ;LCD.c: 45:  Lcd_Cmd(1);
  1466  05A5  3001               	movlw	1
  1467  05A6  120A  118A  25C6  120A  118A  	fcall	_Lcd_Cmd
  1468  05AB                     l82:
  1469  05AB  0008               	return
  1470  05AC                     __end_of_Lcd_Clear:
  1471                           
  1472                           	psect	text8
  1473  05C6                     __ptext8:	
  1474 ;; *************** function _Lcd_Cmd *****************
  1475 ;; Defined at:
  1476 ;;		line 35 in file "LCD.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  a               1    wreg     unsigned char 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  a               1    3[COMMON] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1490 ;;      Params:         0       0       0       0       0
  1491 ;;      Locals:         1       0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0
  1493 ;;      Totals:         3       0       0       0       0
  1494 ;;Total ram usage:        3 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    1
  1497 ;; This function calls:
  1498 ;;		_Lcd_Port
  1499 ;; This function is called by:
  1500 ;;		_Lcd_Clear
  1501 ;;		_Lcd_Set_Cursor
  1502 ;;		_Lcd_Init
  1503 ;;		_Lcd_Shift_Right
  1504 ;;		_Lcd_Shift_Left
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function _Lcd_Cmd
  1510  05C6                     _Lcd_Cmd:
  1511                           
  1512                           ;incstack = 0
  1513                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1514                           ;Lcd_Cmd@a stored from wreg
  1515  05C6  00F3               	movwf	Lcd_Cmd@a
  1516  05C7                     l880:
  1517                           
  1518                           ;LCD.c: 36:  PORTDbits.RD2 = 0;
  1519  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  1520  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  1521  05C9  1108               	bcf	8,2	;volatile
  1522  05CA                     l882:
  1523                           
  1524                           ;LCD.c: 37:  Lcd_Port(a);
  1525  05CA  0873               	movf	Lcd_Cmd@a,w
  1526  05CB  120A  118A  25E0  120A  118A  	fcall	_Lcd_Port
  1527  05D0                     l884:
  1528                           
  1529                           ;LCD.c: 38:  RD3 = 1;
  1530  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1531  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1532  05D2  1588               	bsf	8,3	;volatile
  1533  05D3                     l886:
  1534                           
  1535                           ;LCD.c: 39:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1536  05D3  300B               	movlw	11
  1537  05D4  00F2               	movwf	??_Lcd_Cmd+1
  1538  05D5  3062               	movlw	98
  1539  05D6  00F1               	movwf	??_Lcd_Cmd
  1540  05D7                     u357:
  1541  05D7  0BF1               	decfsz	??_Lcd_Cmd,f
  1542  05D8  2DD7               	goto	u357
  1543  05D9  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1544  05DA  2DD7               	goto	u357
  1545  05DB  0000               	nop
  1546  05DC                     l888:
  1547                           
  1548                           ;LCD.c: 40:         RD3 = 0;
  1549  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1550  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1551  05DE  1188               	bcf	8,3	;volatile
  1552  05DF                     l79:
  1553  05DF  0008               	return
  1554  05E0                     __end_of_Lcd_Cmd:
  1555                           
  1556                           	psect	text9
  1557  05E0                     __ptext9:	
  1558 ;; *************** function _Lcd_Port *****************
  1559 ;; Defined at:
  1560 ;;		line 13 in file "LCD.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  a               1    wreg     unsigned char 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  a               1    0[COMMON] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1574 ;;      Params:         0       0       0       0       0
  1575 ;;      Locals:         1       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0
  1577 ;;      Totals:         1       0       0       0       0
  1578 ;;Total ram usage:        1 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_Lcd_Cmd
  1584 ;;		_Lcd_Init
  1585 ;;		_Lcd_Write_Char
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function _Lcd_Port
  1591  05E0                     _Lcd_Port:
  1592                           
  1593                           ;incstack = 0
  1594                           ; Regs used in _Lcd_Port: [wreg]
  1595                           ;Lcd_Port@a stored from wreg
  1596  05E0  00F0               	movwf	Lcd_Port@a
  1597  05E1                     l850:
  1598                           
  1599                           ;LCD.c: 14:  if(a & 1)
  1600  05E1  1C70               	btfss	Lcd_Port@a,0
  1601  05E2  2DE4               	goto	u131
  1602  05E3  2DE5               	goto	u130
  1603  05E4                     u131:
  1604  05E4  2DE9               	goto	l68
  1605  05E5                     u130:
  1606  05E5                     l852:
  1607                           
  1608                           ;LCD.c: 15:   RD4 = 1;
  1609  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1610  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1611  05E7  1608               	bsf	8,4	;volatile
  1612  05E8  2DEC               	goto	l69
  1613  05E9                     l68:	
  1614                           ;LCD.c: 16:  else
  1615                           
  1616                           
  1617                           ;LCD.c: 17:   RD4 = 0;
  1618  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1619  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1620  05EB  1208               	bcf	8,4	;volatile
  1621  05EC                     l69:
  1622                           
  1623                           ;LCD.c: 19:  if(a & 2)
  1624  05EC  1CF0               	btfss	Lcd_Port@a,1
  1625  05ED  2DEF               	goto	u141
  1626  05EE  2DF0               	goto	u140
  1627  05EF                     u141:
  1628  05EF  2DF2               	goto	l70
  1629  05F0                     u140:
  1630  05F0                     l854:
  1631                           
  1632                           ;LCD.c: 20:   RD5 = 1;
  1633  05F0  1688               	bsf	8,5	;volatile
  1634  05F1  2DF3               	goto	l71
  1635  05F2                     l70:	
  1636                           ;LCD.c: 21:  else
  1637                           
  1638                           
  1639                           ;LCD.c: 22:   RD5 = 0;
  1640  05F2  1288               	bcf	8,5	;volatile
  1641  05F3                     l71:
  1642                           
  1643                           ;LCD.c: 24:  if(a & 4)
  1644  05F3  1D70               	btfss	Lcd_Port@a,2
  1645  05F4  2DF6               	goto	u151
  1646  05F5  2DF7               	goto	u150
  1647  05F6                     u151:
  1648  05F6  2DF9               	goto	l72
  1649  05F7                     u150:
  1650  05F7                     l856:
  1651                           
  1652                           ;LCD.c: 25:   RD6 = 1;
  1653  05F7  1708               	bsf	8,6	;volatile
  1654  05F8  2DFA               	goto	l73
  1655  05F9                     l72:	
  1656                           ;LCD.c: 26:  else
  1657                           
  1658                           
  1659                           ;LCD.c: 27:   RD6 = 0;
  1660  05F9  1308               	bcf	8,6	;volatile
  1661  05FA                     l73:
  1662                           
  1663                           ;LCD.c: 29:  if(a & 8)
  1664  05FA  1DF0               	btfss	Lcd_Port@a,3
  1665  05FB  2DFD               	goto	u161
  1666  05FC  2DFE               	goto	u160
  1667  05FD                     u161:
  1668  05FD  2E00               	goto	l74
  1669  05FE                     u160:
  1670  05FE                     l858:
  1671                           
  1672                           ;LCD.c: 30:   RD7 = 1;
  1673  05FE  1788               	bsf	8,7	;volatile
  1674  05FF  2E01               	goto	l76
  1675  0600                     l74:	
  1676                           ;LCD.c: 31:  else
  1677                           
  1678                           
  1679                           ;LCD.c: 32:   RD7 = 0;
  1680  0600  1388               	bcf	8,7	;volatile
  1681  0601                     l76:
  1682  0601  0008               	return
  1683  0602                     __end_of_Lcd_Port:
  1684  007E                     btemp	set	126	;btemp
  1685  007E                     wtemp0	set	126
  1686                           
  1687                           	psect	config
  1688                           
  1689                           ;Config register CONFIG1 @ 0x2007
  1690                           ;	Oscillator Selection bits
  1691                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1692                           ;	Watchdog Timer Enable bit
  1693                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1694                           ;	Power-up Timer Enable bit
  1695                           ;	PWRTE = OFF, PWRT disabled
  1696                           ;	RE3/MCLR pin function select bit
  1697                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1698                           ;	Code Protection bit
  1699                           ;	CP = OFF, Program memory code protection is disabled
  1700                           ;	Data Code Protection bit
  1701                           ;	CPD = OFF, Data memory code protection is disabled
  1702                           ;	Brown Out Reset Selection bits
  1703                           ;	BOREN = OFF, BOR disabled
  1704                           ;	Internal External Switchover bit
  1705                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1706                           ;	Fail-Safe Clock Monitor Enabled bit
  1707                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1708                           ;	Low Voltage Programming Enable bit
  1709                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1710                           ;	In-Circuit Debugger Mode bit
  1711                           ;	DEBUG = 0x1, unprogrammed default
  1712  2007                     	org	8199
  1713  2007  20D6               	dw	8406
  1714                           
  1715                           ;Config register CONFIG2 @ 0x2008
  1716                           ;	Brown-out Reset Selection bit
  1717                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1718                           ;	Flash Program Memory Self Write Enable bits
  1719                           ;	WRT = OFF, Write protection off
  1720  2008                     	org	8200
  1721  2008  3FFF               	dw	16383

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2067
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     433
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     836
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 21:51:06 2021

                        pc 0002                         l70 05F2                         l71 05F3  
                       l72 05F9                         l73 05FA                         l74 0600  
                       l82 05AB                         l91 070E                         l76 0601  
                       l68 05E9                         l69 05EC                         l94 065F  
                       l79 05DF                         l88 06B1                         fsr 0004  
                      l100 0626                        l103 05C5                        l106 05B8  
                      l900 059F                        l910 0682                        l902 0661  
                      l920 06AB                        l904 0666                        l912 0689  
                      l850 05E1                        l914 068F                        l906 0677  
                      l930 05AC                        l922 0603                        l852 05E5  
                      l916 06A0                        l908 067C                        l932 05B9  
                      l860 0628                        l924 0606                        l940 071C  
                      l854 05F0                        l918 06A5                        l870 064B  
                      l862 0632                        l926 0613                        l950 0745  
                      l942 0724                        l934 070F                        l856 05F7  
                      l880 05C7                        l872 064E                        l864 0635  
                      l928 0619                        l960 0766                        l952 074A  
                      l944 072A                        l936 0712                        l858 05FE  
                      l882 05CA                        l890 06B2                        l874 0654  
                      l866 0643                        l962 0773                        l954 0752  
                      l946 0732                        l938 0717                        l884 05D0  
                      l892 06B8                        l876 0657                        l868 0646  
                      l980 07A4                        l964 0778                        l956 0758  
                      l948 0738                        l886 05D3                        l894 06C1  
                      l878 065C                        l990 07BC                        l982 07AD  
                      l974 078A                        l966 0780                        l958 0760  
                      l888 05DC                        l896 06D0                        l992 07C1  
                      l976 0797                        l968 0786                        l898 06D6  
                      l994 07C9                        l978 079C                        l996 07D2  
                      l988 07AF                        l998 07EB                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u200 068F                        u201 068E  
                      u130 05E5                        u131 05E4                        u140 05F0  
                      u220 0626                        u141 05EF                        u221 0625  
                      u150 05F7                        u230 07AD                        u151 05F6  
                      u215 0697                        u231 07AC                        u160 05FE  
                      u240 07D2                        u161 05FD                        u241 07D1  
                      u307 0648                        u180 0666                        u181 0665  
                      u317 0659                        u327 06BC                        u175 0638  
                      u337 06CB                        u257 073E                        u347 06DA  
                      u195 066E                        u267 076C                        u357 05D7  
                      u277 0790                        u287 07B5                        u297 07F1  
                      fsr0 0004                       STR_1 001D                       STR_2 0046  
                     STR_3 002D                       STR_4 003A                       STR_5 0009  
        ?_Lcd_Write_String 0070                       _main 070F                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 05E0  
                    ?_main 0070                      _ANSEL 0188                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0052                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089    __size_of_Lcd_Shift_Left 000D  
                    main@a 0020                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 070F           __end_of_Lcd_Port 0602  
          __initialization 07FC               __end_of_main 07FC                     ??_main 007B  
       __size_of_Lcd_Clear 000D                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0039   __size_of_Lcd_Shift_Right 000D            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 05AC             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 0660             _Lcd_Shift_Left 05AC                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pmaintext 070F  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 06B2     __end_of_Lcd_Shift_Left 05B9          ??_Lcd_Shift_Right 0074  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 0627                    _Lcd_Cmd 05C6            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0602                    __ptext2 0627                    __ptext3 05B9  
                  __ptext4 05AC                    __ptext5 0660                    __ptext6 06B2  
                  __ptext7 059F                    __ptext8 05C6                    __ptext9 05E0  
          ?_Lcd_Shift_Left 0070     __end_of_Lcd_Write_Char 0660       end_of_initialization 07FC  
                Lcd_Port@a 0070                  _PORTDbits 0008            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                  _Lcd_Clear 059F  
         _Lcd_Write_String 0602        start_initialization 07FC          __size_of_Lcd_Init 005D  
        __size_of_Lcd_Port 0022                 ?_Lcd_Clear 0070            _Lcd_Shift_Right 05B9  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
         ??_Lcd_Shift_Left 0074                  __pstrings 0003    __end_of_Lcd_Shift_Right 05C6  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                __stringbase 0008  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 06B2                   _Lcd_Port 05E0  
 __end_of_Lcd_Write_String 0627           __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009  
            __size_of_main 00ED           ?_Lcd_Shift_Right 0070         Lcd_Write_Char@temp 0072  
                stringcode 0003         Lcd_Set_Cursor@temp 007A                   stringdir 0003  
                 stringtab 0003  
