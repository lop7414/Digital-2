

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 10:26:57 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0009                     _PORTEbits	set	9
   290  0008                     _PORTDbits	set	8
   291  0009                     _PORTE	set	9
   292  0008                     _PORTD	set	8
   293  0007                     _PORTC	set	7
   294  0006                     _PORTB	set	6
   295  0087                     _TRISC	set	135
   296  0086                     _TRISB	set	134
   297  0088                     _TRISD	set	136
   298  0089                     _TRISE	set	137
   299  0189                     _ANSELH	set	393
   300  0188                     _ANSEL	set	392
   301                           
   302                           	psect	strings
   303  0003                     __pstrings:
   304  0003                     stringtab:
   305  0003                     __stringtab:
   306  0003                     stringcode:	
   307                           ;	String table - string pointers are 1 byte each
   308                           
   309  0003                     stringdir:
   310  0003  3000               	movlw	high stringdir
   311  0004  008A               	movwf	10
   312  0005  0804               	movf	4,w
   313  0006  0A84               	incf	4,f
   314  0007  0782               	addwf	2,f
   315  0008                     __stringbase:
   316  0008  3400               	retlw	0
   317  0009                     __end_of__stringtab:
   318  0009                     STR_5:
   319  0009  3477               	retlw	119	;'w'
   320  000A  3477               	retlw	119	;'w'
   321  000B  3477               	retlw	119	;'w'
   322  000C  342E               	retlw	46	;'.'
   323  000D  3465               	retlw	101	;'e'
   324  000E  346C               	retlw	108	;'l'
   325  000F  3465               	retlw	101	;'e'
   326  0010  3463               	retlw	99	;'c'
   327  0011  3474               	retlw	116	;'t'
   328  0012  3472               	retlw	114	;'r'
   329  0013  346F               	retlw	111	;'o'
   330  0014  3453               	retlw	83	;'S'
   331  0015  346F               	retlw	111	;'o'
   332  0016  346D               	retlw	109	;'m'
   333  0017  3465               	retlw	101	;'e'
   334  0018  342E               	retlw	46	;'.'
   335  0019  3463               	retlw	99	;'c'
   336  001A  346F               	retlw	111	;'o'
   337  001B  346D               	retlw	109	;'m'
   338  001C  3400               	retlw	0
   339  001D                     STR_1:
   340  001D  344C               	retlw	76	;'L'
   341  001E  3443               	retlw	67	;'C'
   342  001F  3444               	retlw	68	;'D'
   343  0020  3420               	retlw	32	;' '
   344  0021  344C               	retlw	76	;'L'
   345  0022  3469               	retlw	105	;'i'
   346  0023  3462               	retlw	98	;'b'
   347  0024  3472               	retlw	114	;'r'
   348  0025  3461               	retlw	97	;'a'
   349  0026  3472               	retlw	114	;'r'
   350  0027  3479               	retlw	121	;'y'
   351  0028  3420               	retlw	32	;' '
   352  0029  3466               	retlw	102	;'f'
   353  002A  346F               	retlw	111	;'o'
   354  002B  3472               	retlw	114	;'r'
   355  002C  3400               	retlw	0
   356  002D                     STR_3:
   357  002D  3444               	retlw	68	;'D'
   358  002E  3465               	retlw	101	;'e'
   359  002F  3476               	retlw	118	;'v'
   360  0030  3465               	retlw	101	;'e'
   361  0031  346C               	retlw	108	;'l'
   362  0032  346F               	retlw	111	;'o'
   363  0033  3470               	retlw	112	;'p'
   364  0034  3465               	retlw	101	;'e'
   365  0035  3464               	retlw	100	;'d'
   366  0036  3420               	retlw	32	;' '
   367  0037  3442               	retlw	66	;'B'
   368  0038  3479               	retlw	121	;'y'
   369  0039  3400               	retlw	0
   370  003A                     STR_4:
   371  003A  3465               	retlw	101	;'e'
   372  003B  346C               	retlw	108	;'l'
   373  003C  3465               	retlw	101	;'e'
   374  003D  3463               	retlw	99	;'c'
   375  003E  3474               	retlw	116	;'t'
   376  003F  3472               	retlw	114	;'r'
   377  0040  346F               	retlw	111	;'o'
   378  0041  3453               	retlw	83	;'S'
   379  0042  346F               	retlw	111	;'o'
   380  0043  346D               	retlw	109	;'m'
   381  0044  3465               	retlw	101	;'e'
   382  0045  3400               	retlw	0
   383  0046                     STR_2:
   384  0046  344D               	retlw	77	;'M'
   385  0047  3450               	retlw	80	;'P'
   386  0048  344C               	retlw	76	;'L'
   387  0049  3441               	retlw	65	;'A'
   388  004A  3442               	retlw	66	;'B'
   389  004B  3420               	retlw	32	;' '
   390  004C  3458               	retlw	88	;'X'
   391  004D  3443               	retlw	67	;'C'
   392  004E  3438               	retlw	56	;'8'
   393  004F  3400               	retlw	0
   394                           
   395                           	psect	cinit
   396  07FC                     start_initialization:	
   397                           ; #config settings
   398                           
   399  07FC                     __initialization:
   400  07FC                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  07FC                     __end_of__initialization:
   404  07FC  0183               	clrf	3
   405  07FD  120A  118A  2F0F   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	cstackCOMMON
   408  0070                     __pcstackCOMMON:
   409  0070                     ?_setup:
   410  0070                     ??_setup:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_Lcd_Init:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_Lcd_Clear:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_Lcd_Write_String:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_Lcd_Shift_Left:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_Lcd_Shift_Right:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_Lcd_Write_Char:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_main:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_Lcd_Port:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_Lcd_Port:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_Lcd_Cmd:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     Lcd_Port@a:	
   444                           ; 1 bytes @ 0x0
   445                           
   446                           
   447                           ; 1 bytes @ 0x0
   448  0070                     	ds	1
   449  0071                     ??_Lcd_Write_Char:
   450  0071                     ??_Lcd_Cmd:	
   451                           ; 1 bytes @ 0x1
   452                           
   453                           
   454                           ; 1 bytes @ 0x1
   455  0071                     	ds	1
   456  0072                     Lcd_Write_Char@a:
   457                           
   458                           ; 1 bytes @ 0x2
   459  0072                     	ds	1
   460  0073                     Lcd_Cmd@a:
   461  0073                     Lcd_Write_Char@temp:	
   462                           ; 1 bytes @ 0x3
   463                           
   464                           
   465                           ; 1 bytes @ 0x3
   466  0073                     	ds	1
   467  0074                     ??_Lcd_Init:
   468  0074                     ??_Lcd_Clear:	
   469                           ; 1 bytes @ 0x4
   470                           
   471  0074                     ?_Lcd_Set_Cursor:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     ??_Lcd_Write_String:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     ??_Lcd_Shift_Left:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0074                     ??_Lcd_Shift_Right:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0074                     Lcd_Set_Cursor@b:	
   484                           ; 1 bytes @ 0x4
   485                           
   486  0074                     Lcd_Write_String@i:	
   487                           ; 1 bytes @ 0x4
   488                           
   489                           
   490                           ; 2 bytes @ 0x4
   491  0074                     	ds	1
   492  0075                     ??_Lcd_Set_Cursor:
   493                           
   494                           ; 1 bytes @ 0x5
   495  0075                     	ds	1
   496  0076                     Lcd_Set_Cursor@a:
   497  0076                     Lcd_Write_String@a:	
   498                           ; 1 bytes @ 0x6
   499                           
   500                           
   501                           ; 1 bytes @ 0x6
   502  0076                     	ds	1
   503  0077                     Lcd_Set_Cursor@temp:
   504                           
   505                           ; 1 bytes @ 0x7
   506  0077                     	ds	1
   507  0078                     ??_main:
   508                           
   509                           ; 1 bytes @ 0x8
   510  0078                     	ds	3
   511  007B                     main@a:
   512                           
   513                           ; 2 bytes @ 0xB
   514  007B                     	ds	2
   515                           
   516                           	psect	maintext
   517  070F                     __pmaintext:	
   518 ;;
   519 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   520 ;;
   521 ;; *************** function _main *****************
   522 ;; Defined at:
   523 ;;		line 71 in file "LAB3.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  a               2   11[COMMON] unsigned int 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : B00/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   537 ;;      Params:         0       0       0       0       0
   538 ;;      Locals:         2       0       0       0       0
   539 ;;      Temps:          3       0       0       0       0
   540 ;;      Totals:         5       0       0       0       0
   541 ;;Total ram usage:        5 bytes
   542 ;; Hardware stack levels required when called:    3
   543 ;; This function calls:
   544 ;;		_Lcd_Clear
   545 ;;		_Lcd_Init
   546 ;;		_Lcd_Set_Cursor
   547 ;;		_Lcd_Shift_Left
   548 ;;		_Lcd_Shift_Right
   549 ;;		_Lcd_Write_Char
   550 ;;		_Lcd_Write_String
   551 ;;		_setup
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _main
   559  070F                     _main:
   560  070F                     l862:	
   561                           ;incstack = 0
   562                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   563                           
   564                           
   565                           ;LAB3.c: 73:     setup();
   566  070F  120A  118A  2620  120A  118A  	fcall	_setup
   567  0714                     l864:
   568                           
   569                           ;LAB3.c: 75:     unsigned int a;;LAB3.c: 76:   TRISE = 0x00;
   570  0714  1683               	bsf	3,5	;RP0=1, select bank1
   571  0715  1303               	bcf	3,6	;RP1=0, select bank1
   572  0716  0189               	clrf	9	;volatile
   573  0717                     l866:
   574                           
   575                           ;LAB3.c: 77:   TRISD = 0x00;
   576  0717  0188               	clrf	8	;volatile
   577  0718                     l868:
   578                           
   579                           ;LAB3.c: 78:   Lcd_Init();
   580  0718  120A  118A  26C4  120A  118A  	fcall	_Lcd_Init
   581  071D                     l870:
   582                           
   583                           ;LAB3.c: 85:     Lcd_Clear();
   584  071D  120A  118A  25D7  120A  118A  	fcall	_Lcd_Clear
   585  0722                     l872:
   586                           
   587                           ;LAB3.c: 86:     Lcd_Set_Cursor(1,1);
   588  0722  01F4               	clrf	Lcd_Set_Cursor@b
   589  0723  0AF4               	incf	Lcd_Set_Cursor@b,f
   590  0724  3001               	movlw	1
   591  0725  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   592  072A                     l874:
   593                           
   594                           ;LAB3.c: 87:     Lcd_Write_String("LCD Library for");
   595  072A  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   596  072B  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   597  0730                     l876:
   598                           
   599                           ;LAB3.c: 88:     Lcd_Set_Cursor(2,1);
   600  0730  01F4               	clrf	Lcd_Set_Cursor@b
   601  0731  0AF4               	incf	Lcd_Set_Cursor@b,f
   602  0732  3002               	movlw	2
   603  0733  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   604  0738                     l878:
   605                           
   606                           ;LAB3.c: 89:     Lcd_Write_String("MPLAB XC8");
   607  0738  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   608  0739  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   609  073E                     l880:
   610                           
   611                           ;LAB3.c: 90:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   612  073E  3015               	movlw	21
   613  073F  00FA               	movwf	??_main+2
   614  0740  304B               	movlw	75
   615  0741  00F9               	movwf	??_main+1
   616  0742  30BE               	movlw	190
   617  0743  00F8               	movwf	??_main
   618  0744                     u197:
   619  0744  0BF8               	decfsz	??_main,f
   620  0745  2F44               	goto	u197
   621  0746  0BF9               	decfsz	??_main+1,f
   622  0747  2F44               	goto	u197
   623  0748  0BFA               	decfsz	??_main+2,f
   624  0749  2F44               	goto	u197
   625  074A  0000               	nop
   626                           
   627                           ;LAB3.c: 91:     Lcd_Clear();
   628  074B  120A  118A  25D7  120A  118A  	fcall	_Lcd_Clear
   629                           
   630                           ;LAB3.c: 92:     Lcd_Set_Cursor(1,1);
   631  0750  01F4               	clrf	Lcd_Set_Cursor@b
   632  0751  0AF4               	incf	Lcd_Set_Cursor@b,f
   633  0752  3001               	movlw	1
   634  0753  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   635  0758                     l882:
   636                           
   637                           ;LAB3.c: 93:     Lcd_Write_String("Developed By");
   638  0758  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   639  0759  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   640  075E                     l884:
   641                           
   642                           ;LAB3.c: 94:     Lcd_Set_Cursor(2,1);
   643  075E  01F4               	clrf	Lcd_Set_Cursor@b
   644  075F  0AF4               	incf	Lcd_Set_Cursor@b,f
   645  0760  3002               	movlw	2
   646  0761  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   647                           
   648                           ;LAB3.c: 95:     Lcd_Write_String("electroSome");
   649  0766  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   650  0767  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   651  076C                     l886:
   652                           
   653                           ;LAB3.c: 96:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   654  076C  3015               	movlw	21
   655  076D  00FA               	movwf	??_main+2
   656  076E  304B               	movlw	75
   657  076F  00F9               	movwf	??_main+1
   658  0770  30BE               	movlw	190
   659  0771  00F8               	movwf	??_main
   660  0772                     u207:
   661  0772  0BF8               	decfsz	??_main,f
   662  0773  2F72               	goto	u207
   663  0774  0BF9               	decfsz	??_main+1,f
   664  0775  2F72               	goto	u207
   665  0776  0BFA               	decfsz	??_main+2,f
   666  0777  2F72               	goto	u207
   667  0778  0000               	nop
   668  0779                     l888:
   669                           
   670                           ;LAB3.c: 97:     Lcd_Clear();
   671  0779  120A  118A  25D7  120A  118A  	fcall	_Lcd_Clear
   672  077E                     l890:
   673                           
   674                           ;LAB3.c: 98:     Lcd_Set_Cursor(1,1);
   675  077E  01F4               	clrf	Lcd_Set_Cursor@b
   676  077F  0AF4               	incf	Lcd_Set_Cursor@b,f
   677  0780  3001               	movlw	1
   678  0781  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   679  0786                     l892:
   680                           
   681                           ;LAB3.c: 99:     Lcd_Write_String("www.electroSome.com");
   682  0786  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   683  0787  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   684  078C                     l894:
   685                           
   686                           ;LAB3.c: 101:     for(a=0;a<15;a++)
   687  078C  01FB               	clrf	main@a
   688  078D  01FC               	clrf	main@a+1
   689  078E                     l900:
   690                           
   691                           ;LAB3.c: 102:     {;LAB3.c: 103:         _delay((unsigned long)((300)*(8000000/4000.0)))
      +                          ;
   692  078E  3004               	movlw	4
   693  078F  00FA               	movwf	??_main+2
   694  0790  300C               	movlw	12
   695  0791  00F9               	movwf	??_main+1
   696  0792  3033               	movlw	51
   697  0793  00F8               	movwf	??_main
   698  0794                     u217:
   699  0794  0BF8               	decfsz	??_main,f
   700  0795  2F94               	goto	u217
   701  0796  0BF9               	decfsz	??_main+1,f
   702  0797  2F94               	goto	u217
   703  0798  0BFA               	decfsz	??_main+2,f
   704  0799  2F94               	goto	u217
   705  079A  2F9B               	nop2
   706  079B                     l902:
   707                           
   708                           ;LAB3.c: 104:         Lcd_Shift_Left();
   709  079B  120A  118A  25DE  120A  118A  	fcall	_Lcd_Shift_Left
   710  07A0                     l904:
   711                           
   712                           ;LAB3.c: 105:     }
   713  07A0  3001               	movlw	1
   714  07A1  07FB               	addwf	main@a,f
   715  07A2  1803               	skipnc
   716  07A3  0AFC               	incf	main@a+1,f
   717  07A4  3000               	movlw	0
   718  07A5  07FC               	addwf	main@a+1,f
   719  07A6                     l906:
   720  07A6  3000               	movlw	0
   721  07A7  027C               	subwf	main@a+1,w
   722  07A8  300F               	movlw	15
   723  07A9  1903               	skipnz
   724  07AA  027B               	subwf	main@a,w
   725  07AB  1C03               	skipc
   726  07AC  2FAE               	goto	u171
   727  07AD  2FAF               	goto	u170
   728  07AE                     u171:
   729  07AE  2F8E               	goto	l900
   730  07AF                     u170:
   731  07AF                     l908:
   732                           
   733                           ;LAB3.c: 107:     for(a=0;a<15;a++)
   734  07AF  01FB               	clrf	main@a
   735  07B0  01FC               	clrf	main@a+1
   736  07B1                     l914:
   737                           
   738                           ;LAB3.c: 108:     {;LAB3.c: 109:         _delay((unsigned long)((300)*(8000000/4000.0)))
      +                          ;
   739  07B1  3004               	movlw	4
   740  07B2  00FA               	movwf	??_main+2
   741  07B3  300C               	movlw	12
   742  07B4  00F9               	movwf	??_main+1
   743  07B5  3033               	movlw	51
   744  07B6  00F8               	movwf	??_main
   745  07B7                     u227:
   746  07B7  0BF8               	decfsz	??_main,f
   747  07B8  2FB7               	goto	u227
   748  07B9  0BF9               	decfsz	??_main+1,f
   749  07BA  2FB7               	goto	u227
   750  07BB  0BFA               	decfsz	??_main+2,f
   751  07BC  2FB7               	goto	u227
   752  07BD  2FBE               	nop2
   753  07BE                     l916:
   754                           
   755                           ;LAB3.c: 110:         Lcd_Shift_Right();
   756  07BE  120A  118A  25E5  120A  118A  	fcall	_Lcd_Shift_Right
   757  07C3                     l918:
   758                           
   759                           ;LAB3.c: 111:     }
   760  07C3  3001               	movlw	1
   761  07C4  07FB               	addwf	main@a,f
   762  07C5  1803               	skipnc
   763  07C6  0AFC               	incf	main@a+1,f
   764  07C7  3000               	movlw	0
   765  07C8  07FC               	addwf	main@a+1,f
   766  07C9                     l920:
   767  07C9  3000               	movlw	0
   768  07CA  027C               	subwf	main@a+1,w
   769  07CB  300F               	movlw	15
   770  07CC  1903               	skipnz
   771  07CD  027B               	subwf	main@a,w
   772  07CE  1C03               	skipc
   773  07CF  2FD1               	goto	u181
   774  07D0  2FD2               	goto	u180
   775  07D1                     u181:
   776  07D1  2FB1               	goto	l914
   777  07D2                     u180:
   778  07D2                     l922:
   779                           
   780                           ;LAB3.c: 113:     Lcd_Clear();
   781  07D2  120A  118A  25D7  120A  118A  	fcall	_Lcd_Clear
   782                           
   783                           ;LAB3.c: 114:     Lcd_Set_Cursor(2,1);
   784  07D7  01F4               	clrf	Lcd_Set_Cursor@b
   785  07D8  0AF4               	incf	Lcd_Set_Cursor@b,f
   786  07D9  3002               	movlw	2
   787  07DA  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   788                           
   789                           ;LAB3.c: 115:     Lcd_Write_Char('e');
   790  07DF  3065               	movlw	101
   791  07E0  120A  118A  2606  120A  118A  	fcall	_Lcd_Write_Char
   792                           
   793                           ;LAB3.c: 116:     Lcd_Write_Char('S');
   794  07E5  3053               	movlw	83
   795  07E6  120A  118A  2606  120A  118A  	fcall	_Lcd_Write_Char
   796  07EB                     l924:
   797                           
   798                           ;LAB3.c: 117:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   799  07EB  3015               	movlw	21
   800  07EC  00FA               	movwf	??_main+2
   801  07ED  304B               	movlw	75
   802  07EE  00F9               	movwf	??_main+1
   803  07EF  30BE               	movlw	190
   804  07F0  00F8               	movwf	??_main
   805  07F1                     u237:
   806  07F1  0BF8               	decfsz	??_main,f
   807  07F2  2FF1               	goto	u237
   808  07F3  0BF9               	decfsz	??_main+1,f
   809  07F4  2FF1               	goto	u237
   810  07F5  0BFA               	decfsz	??_main+2,f
   811  07F6  2FF1               	goto	u237
   812  07F7  0000               	nop
   813  07F8  2F1D               	goto	l870
   814  07F9  120A  118A  2800   	ljmp	start
   815  07FC                     __end_of_main:
   816                           
   817                           	psect	text1
   818  0620                     __ptext1:	
   819 ;; *************** function _setup *****************
   820 ;; Defined at:
   821 ;;		line 127 in file "LAB3.c"
   822 ;; Parameters:    Size  Location     Type
   823 ;;		None
   824 ;; Auto vars:     Size  Location     Type
   825 ;;		None
   826 ;; Return value:  Size  Location     Type
   827 ;;                  1    wreg      void 
   828 ;; Registers used:
   829 ;;		status,2
   830 ;; Tracked objects:
   831 ;;		On entry : 0/0
   832 ;;		On exit  : 0/0
   833 ;;		Unchanged: 0/0
   834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   835 ;;      Params:         0       0       0       0       0
   836 ;;      Locals:         0       0       0       0       0
   837 ;;      Temps:          0       0       0       0       0
   838 ;;      Totals:         0       0       0       0       0
   839 ;;Total ram usage:        0 bytes
   840 ;; Hardware stack levels used:    1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _setup
   850  0620                     _setup:
   851  0620                     l740:	
   852                           ;incstack = 0
   853                           ; Regs used in _setup: [status,2]
   854                           
   855                           
   856                           ;LAB3.c: 128:     ANSEL = 0;
   857  0620  1683               	bsf	3,5	;RP0=1, select bank3
   858  0621  1703               	bsf	3,6	;RP1=1, select bank3
   859  0622  0188               	clrf	8	;volatile
   860                           
   861                           ;LAB3.c: 129:     ANSELH = 0;
   862  0623  0189               	clrf	9	;volatile
   863                           
   864                           ;LAB3.c: 130:     TRISB = 0;
   865  0624  1683               	bsf	3,5	;RP0=1, select bank1
   866  0625  1303               	bcf	3,6	;RP1=0, select bank1
   867  0626  0186               	clrf	6	;volatile
   868                           
   869                           ;LAB3.c: 131:     PORTB = 0;
   870  0627  1283               	bcf	3,5	;RP0=0, select bank0
   871  0628  1303               	bcf	3,6	;RP1=0, select bank0
   872  0629  0186               	clrf	6	;volatile
   873                           
   874                           ;LAB3.c: 132:     TRISC = 0;
   875  062A  1683               	bsf	3,5	;RP0=1, select bank1
   876  062B  1303               	bcf	3,6	;RP1=0, select bank1
   877  062C  0187               	clrf	7	;volatile
   878                           
   879                           ;LAB3.c: 133:     PORTC = 0;
   880  062D  1283               	bcf	3,5	;RP0=0, select bank0
   881  062E  1303               	bcf	3,6	;RP1=0, select bank0
   882  062F  0187               	clrf	7	;volatile
   883                           
   884                           ;LAB3.c: 134:     TRISD = 0;
   885  0630  1683               	bsf	3,5	;RP0=1, select bank1
   886  0631  1303               	bcf	3,6	;RP1=0, select bank1
   887  0632  0188               	clrf	8	;volatile
   888                           
   889                           ;LAB3.c: 135:     PORTD = 0;
   890  0633  1283               	bcf	3,5	;RP0=0, select bank0
   891  0634  1303               	bcf	3,6	;RP1=0, select bank0
   892  0635  0188               	clrf	8	;volatile
   893                           
   894                           ;LAB3.c: 136:     TRISE = 0;
   895  0636  1683               	bsf	3,5	;RP0=1, select bank1
   896  0637  1303               	bcf	3,6	;RP1=0, select bank1
   897  0638  0189               	clrf	9	;volatile
   898                           
   899                           ;LAB3.c: 137:     PORTE = 0;
   900  0639  1283               	bcf	3,5	;RP0=0, select bank0
   901  063A  1303               	bcf	3,6	;RP1=0, select bank0
   902  063B  0189               	clrf	9	;volatile
   903  063C                     l53:
   904  063C  0008               	return
   905  063D                     __end_of_setup:
   906                           
   907                           	psect	text2
   908  0661                     __ptext2:	
   909 ;; *************** function _Lcd_Write_String *****************
   910 ;; Defined at:
   911 ;;		line 104 in file "LCD.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  a               1    wreg     PTR unsigned char 
   914 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   915 ;;		 -> STR_1(16), 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  a               1    6[COMMON] PTR unsigned char 
   918 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   919 ;;		 -> STR_1(16), 
   920 ;;  i               2    4[COMMON] int 
   921 ;; Return value:  Size  Location     Type
   922 ;;                  1    wreg      void 
   923 ;; Registers used:
   924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         3       0       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         3       0       0       0       0
   934 ;;Total ram usage:        3 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    2
   937 ;; This function calls:
   938 ;;		_Lcd_Write_Char
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _Lcd_Write_String
   946  0661                     _Lcd_Write_String:
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   950                           ;Lcd_Write_String@a stored from wreg
   951  0661  00F6               	movwf	Lcd_Write_String@a
   952  0662                     l854:
   953                           
   954                           ;LCD.c: 105:  int i;;LCD.c: 106:  for(i=0;a[i]!='\0';i++)
   955  0662  01F4               	clrf	Lcd_Write_String@i
   956  0663  01F5               	clrf	Lcd_Write_String@i+1
   957  0664  2E78               	goto	l860
   958  0665                     l856:
   959                           
   960                           ;LCD.c: 107:     Lcd_Write_Char(a[i]);
   961  0665  0874               	movf	Lcd_Write_String@i,w
   962  0666  0776               	addwf	Lcd_Write_String@a,w
   963  0667  0084               	movwf	4
   964  0668  120A  118A  2003  120A  118A  	fcall	stringdir
   965  066D  120A  118A  2606  120A  118A  	fcall	_Lcd_Write_Char
   966  0672                     l858:
   967  0672  3001               	movlw	1
   968  0673  07F4               	addwf	Lcd_Write_String@i,f
   969  0674  1803               	skipnc
   970  0675  0AF5               	incf	Lcd_Write_String@i+1,f
   971  0676  3000               	movlw	0
   972  0677  07F5               	addwf	Lcd_Write_String@i+1,f
   973  0678                     l860:
   974  0678  0874               	movf	Lcd_Write_String@i,w
   975  0679  0776               	addwf	Lcd_Write_String@a,w
   976  067A  0084               	movwf	4
   977  067B  120A  118A  2003  120A  118A  	fcall	stringdir
   978  0680  3A00               	xorlw	0
   979  0681  1D03               	skipz
   980  0682  2E84               	goto	u161
   981  0683  2E85               	goto	u160
   982  0684                     u161:
   983  0684  2E65               	goto	l856
   984  0685                     u160:
   985  0685                     l102:
   986  0685  0008               	return
   987  0686                     __end_of_Lcd_Write_String:
   988                           
   989                           	psect	text3
   990  0606                     __ptext3:	
   991 ;; *************** function _Lcd_Write_Char *****************
   992 ;; Defined at:
   993 ;;		line 94 in file "LCD.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  a               1    wreg     unsigned char 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  a               1    2[COMMON] unsigned char 
   998 ;;  temp            1    3[COMMON] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         2       0       0       0       0
  1010 ;;      Temps:          1       0       0       0       0
  1011 ;;      Totals:         3       0       0       0       0
  1012 ;;Total ram usage:        3 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    1
  1015 ;; This function calls:
  1016 ;;		_Lcd_Port
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;;		_Lcd_Write_String
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _Lcd_Write_Char
  1025  0606                     _Lcd_Write_Char:
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1029                           ;Lcd_Write_Char@a stored from wreg
  1030  0606  00F2               	movwf	Lcd_Write_Char@a
  1031  0607                     l718:
  1032                           
  1033                           ;LCD.c: 95:    char temp;;LCD.c: 96:    temp = a&0xFF;
  1034  0607  0872               	movf	Lcd_Write_Char@a,w
  1035  0608  00F1               	movwf	??_Lcd_Write_Char
  1036  0609  0871               	movf	??_Lcd_Write_Char,w
  1037  060A  00F3               	movwf	Lcd_Write_Char@temp
  1038  060B                     l720:
  1039                           
  1040                           ;LCD.c: 97:    PORTEbits.RE0 = 1;
  1041  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1042  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1043  060D  1409               	bsf	9,0	;volatile
  1044  060E                     l722:
  1045                           
  1046                           ;LCD.c: 98:    Lcd_Port(temp);
  1047  060E  0873               	movf	Lcd_Write_Char@temp,w
  1048  060F  120A  118A  2686  120A  118A  	fcall	_Lcd_Port
  1049  0614                     l724:
  1050                           
  1051                           ;LCD.c: 99:    PORTEbits.RE1 = 1;
  1052  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0616  1489               	bsf	9,1	;volatile
  1055  0617                     l726:
  1056                           
  1057                           ;LCD.c: 100:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1058  0617  301A               	movlw	26
  1059  0618  00F1               	movwf	??_Lcd_Write_Char
  1060  0619                     u247:
  1061  0619  0BF1               	decfsz	??_Lcd_Write_Char,f
  1062  061A  2E19               	goto	u247
  1063  061B  0000               	nop
  1064  061C                     l728:
  1065                           
  1066                           ;LCD.c: 101:    PORTEbits.RE1 = 0;
  1067  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1068  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1069  061E  1089               	bcf	9,1	;volatile
  1070  061F                     l96:
  1071  061F  0008               	return
  1072  0620                     __end_of_Lcd_Write_Char:
  1073                           
  1074                           	psect	text4
  1075  05E5                     __ptext4:	
  1076 ;; *************** function _Lcd_Shift_Right *****************
  1077 ;; Defined at:
  1078 ;;		line 110 in file "LCD.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2, status,0, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1092 ;;      Params:         0       0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    2
  1099 ;; This function calls:
  1100 ;;		_Lcd_Cmd
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           
  1107                           ;psect for function _Lcd_Shift_Right
  1108  05E5                     _Lcd_Shift_Right:
  1109  05E5                     l776:	
  1110                           ;incstack = 0
  1111                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1112                           
  1113                           
  1114                           ;LCD.c: 111:  Lcd_Cmd(0x1C);
  1115  05E5  301C               	movlw	28
  1116  05E6  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1117  05EB                     l105:
  1118  05EB  0008               	return
  1119  05EC                     __end_of_Lcd_Shift_Right:
  1120                           
  1121                           	psect	text5
  1122  05DE                     __ptext5:	
  1123 ;; *************** function _Lcd_Shift_Left *****************
  1124 ;; Defined at:
  1125 ;;		line 114 in file "LCD.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, pclath, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    2
  1146 ;; This function calls:
  1147 ;;		_Lcd_Cmd
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _Lcd_Shift_Left
  1155  05DE                     _Lcd_Shift_Left:
  1156  05DE                     l774:	
  1157                           ;incstack = 0
  1158                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1159                           
  1160                           
  1161                           ;LCD.c: 115:  Lcd_Cmd(0x18);
  1162  05DE  3018               	movlw	24
  1163  05DF  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1164  05E4                     l108:
  1165  05E4  0008               	return
  1166  05E5                     __end_of_Lcd_Shift_Left:
  1167                           
  1168                           	psect	text6
  1169  063D                     __ptext6:	
  1170 ;; *************** function _Lcd_Set_Cursor *****************
  1171 ;; Defined at:
  1172 ;;		line 67 in file "LCD.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  a               1    wreg     unsigned char 
  1175 ;;  b               1    4[COMMON] unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  a               1    6[COMMON] unsigned char 
  1178 ;;  temp            1    7[COMMON] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, pclath, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         1       0       0       0       0
  1189 ;;      Locals:         2       0       0       0       0
  1190 ;;      Temps:          1       0       0       0       0
  1191 ;;      Totals:         4       0       0       0       0
  1192 ;;Total ram usage:        4 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    2
  1195 ;; This function calls:
  1196 ;;		_Lcd_Cmd
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           
  1203                           ;psect for function _Lcd_Set_Cursor
  1204  063D                     _Lcd_Set_Cursor:
  1205                           
  1206                           ;incstack = 0
  1207                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1208                           ;Lcd_Set_Cursor@a stored from wreg
  1209  063D  00F6               	movwf	Lcd_Set_Cursor@a
  1210  063E                     l842:
  1211                           
  1212                           ;LCD.c: 68:  char temp;;LCD.c: 69:  if(a == 1){
  1213  063E  0376               	decf	Lcd_Set_Cursor@a,w
  1214  063F  1D03               	btfss	3,2
  1215  0640  2E42               	goto	u141
  1216  0641  2E43               	goto	u140
  1217  0642                     u141:
  1218  0642  2E4F               	goto	l848
  1219  0643                     u140:
  1220  0643                     l844:
  1221                           
  1222                           ;LCD.c: 70:    temp = 0x80 + b - 1;
  1223  0643  0874               	movf	Lcd_Set_Cursor@b,w
  1224  0644  3E7F               	addlw	127
  1225  0645  00F5               	movwf	??_Lcd_Set_Cursor
  1226  0646  0875               	movf	??_Lcd_Set_Cursor,w
  1227  0647  00F7               	movwf	Lcd_Set_Cursor@temp
  1228  0648                     l846:
  1229                           
  1230                           ;LCD.c: 71:   Lcd_Cmd(temp);
  1231  0648  0877               	movf	Lcd_Set_Cursor@temp,w
  1232  0649  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1233                           
  1234                           ;LCD.c: 72:  }
  1235  064E  2E60               	goto	l90
  1236  064F                     l848:
  1237  064F  3002               	movlw	2
  1238  0650  0676               	xorwf	Lcd_Set_Cursor@a,w
  1239  0651  1D03               	btfss	3,2
  1240  0652  2E54               	goto	u151
  1241  0653  2E55               	goto	u150
  1242  0654                     u151:
  1243  0654  2E60               	goto	l90
  1244  0655                     u150:
  1245  0655                     l850:
  1246                           
  1247                           ;LCD.c: 74:         temp = 0xC0 + b - 1;
  1248  0655  0874               	movf	Lcd_Set_Cursor@b,w
  1249  0656  3EBF               	addlw	191
  1250  0657  00F5               	movwf	??_Lcd_Set_Cursor
  1251  0658  0875               	movf	??_Lcd_Set_Cursor,w
  1252  0659  00F7               	movwf	Lcd_Set_Cursor@temp
  1253  065A                     l852:
  1254                           
  1255                           ;LCD.c: 75:   Lcd_Cmd(temp);
  1256  065A  0877               	movf	Lcd_Set_Cursor@temp,w
  1257  065B  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1258  0660                     l90:
  1259  0660  0008               	return
  1260  0661                     __end_of_Lcd_Set_Cursor:
  1261                           
  1262                           	psect	text7
  1263  06C4                     __ptext7:	
  1264 ;; *************** function _Lcd_Init *****************
  1265 ;; Defined at:
  1266 ;;		line 79 in file "LCD.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          2       0       0       0       0
  1283 ;;      Totals:         2       0       0       0       0
  1284 ;;Total ram usage:        2 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    2
  1287 ;; This function calls:
  1288 ;;		_Lcd_Cmd
  1289 ;;		_Lcd_Port
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           
  1296                           ;psect for function _Lcd_Init
  1297  06C4                     _Lcd_Init:
  1298  06C4                     l742:	
  1299                           ;incstack = 0
  1300                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1301                           
  1302                           
  1303                           ;LCD.c: 80:   Lcd_Port(0x00);
  1304  06C4  3000               	movlw	0
  1305  06C5  120A  118A  2686  120A  118A  	fcall	_Lcd_Port
  1306  06CA                     l744:
  1307                           
  1308                           ;LCD.c: 81:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1309  06CA  3034               	movlw	52
  1310  06CB  00F5               	movwf	??_Lcd_Init+1
  1311  06CC  30F1               	movlw	241
  1312  06CD  00F4               	movwf	??_Lcd_Init
  1313  06CE                     u257:
  1314  06CE  0BF4               	decfsz	??_Lcd_Init,f
  1315  06CF  2ECE               	goto	u257
  1316  06D0  0BF5               	decfsz	??_Lcd_Init+1,f
  1317  06D1  2ECE               	goto	u257
  1318  06D2  2ED3               	nop2
  1319  06D3                     l746:
  1320                           
  1321                           ;LCD.c: 82:   Lcd_Cmd(0x30);
  1322  06D3  3030               	movlw	48
  1323  06D4  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1324                           
  1325                           ;LCD.c: 83:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1326  06D9  300D               	movlw	13
  1327  06DA  00F5               	movwf	??_Lcd_Init+1
  1328  06DB  30FB               	movlw	251
  1329  06DC  00F4               	movwf	??_Lcd_Init
  1330  06DD                     u267:
  1331  06DD  0BF4               	decfsz	??_Lcd_Init,f
  1332  06DE  2EDD               	goto	u267
  1333  06DF  0BF5               	decfsz	??_Lcd_Init+1,f
  1334  06E0  2EDD               	goto	u267
  1335  06E1  2EE2               	nop2
  1336  06E2                     l748:
  1337                           
  1338                           ;LCD.c: 84:   Lcd_Cmd(0x30);
  1339  06E2  3030               	movlw	48
  1340  06E3  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1341  06E8                     l750:
  1342                           
  1343                           ;LCD.c: 85:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1344  06E8  301D               	movlw	29
  1345  06E9  00F5               	movwf	??_Lcd_Init+1
  1346  06EA  3091               	movlw	145
  1347  06EB  00F4               	movwf	??_Lcd_Init
  1348  06EC                     u277:
  1349  06EC  0BF4               	decfsz	??_Lcd_Init,f
  1350  06ED  2EEC               	goto	u277
  1351  06EE  0BF5               	decfsz	??_Lcd_Init+1,f
  1352  06EF  2EEC               	goto	u277
  1353                           
  1354                           ;LCD.c: 86:   Lcd_Cmd(0x30);
  1355  06F0  3030               	movlw	48
  1356  06F1  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1357                           
  1358                           ;LCD.c: 88:   Lcd_Cmd(0x38);
  1359  06F6  3038               	movlw	56
  1360  06F7  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1361                           
  1362                           ;LCD.c: 89:   Lcd_Cmd(0x08);
  1363  06FC  3008               	movlw	8
  1364  06FD  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1365                           
  1366                           ;LCD.c: 90:   Lcd_Cmd(0x01);
  1367  0702  3001               	movlw	1
  1368  0703  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1369                           
  1370                           ;LCD.c: 91:   Lcd_Cmd(0x06);
  1371  0708  3006               	movlw	6
  1372  0709  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1373  070E                     l93:
  1374  070E  0008               	return
  1375  070F                     __end_of_Lcd_Init:
  1376                           
  1377                           	psect	text8
  1378  05D7                     __ptext8:	
  1379 ;; *************** function _Lcd_Clear *****************
  1380 ;; Defined at:
  1381 ;;		line 63 in file "LCD.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0
  1398 ;;      Totals:         0       0       0       0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    2
  1402 ;; This function calls:
  1403 ;;		_Lcd_Cmd
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           
  1410                           ;psect for function _Lcd_Clear
  1411  05D7                     _Lcd_Clear:
  1412  05D7                     l752:	
  1413                           ;incstack = 0
  1414                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1415                           
  1416                           
  1417                           ;LCD.c: 64:  Lcd_Cmd(1);
  1418  05D7  3001               	movlw	1
  1419  05D8  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1420  05DD                     l84:
  1421  05DD  0008               	return
  1422  05DE                     __end_of_Lcd_Clear:
  1423                           
  1424                           	psect	text9
  1425  05EC                     __ptext9:	
  1426 ;; *************** function _Lcd_Cmd *****************
  1427 ;; Defined at:
  1428 ;;		line 55 in file "LCD.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  a               1    wreg     unsigned char 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  a               1    3[COMMON] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         0       0       0       0       0
  1443 ;;      Locals:         1       0       0       0       0
  1444 ;;      Temps:          2       0       0       0       0
  1445 ;;      Totals:         3       0       0       0       0
  1446 ;;Total ram usage:        3 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    1
  1449 ;; This function calls:
  1450 ;;		_Lcd_Port
  1451 ;; This function is called by:
  1452 ;;		_Lcd_Clear
  1453 ;;		_Lcd_Set_Cursor
  1454 ;;		_Lcd_Init
  1455 ;;		_Lcd_Shift_Right
  1456 ;;		_Lcd_Shift_Left
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _Lcd_Cmd
  1462  05EC                     _Lcd_Cmd:
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1466                           ;Lcd_Cmd@a stored from wreg
  1467  05EC  00F3               	movwf	Lcd_Cmd@a
  1468  05ED                     l730:
  1469                           
  1470                           ;LCD.c: 56:  PORTEbits.RE0 = 0;
  1471  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1472  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1473  05EF  1009               	bcf	9,0	;volatile
  1474  05F0                     l732:
  1475                           
  1476                           ;LCD.c: 57:  Lcd_Port(a);
  1477  05F0  0873               	movf	Lcd_Cmd@a,w
  1478  05F1  120A  118A  2686  120A  118A  	fcall	_Lcd_Port
  1479  05F6                     l734:
  1480                           
  1481                           ;LCD.c: 58:  PORTEbits.RE1 = 1;
  1482  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  1483  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  1484  05F8  1489               	bsf	9,1	;volatile
  1485  05F9                     l736:
  1486                           
  1487                           ;LCD.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1488  05F9  300B               	movlw	11
  1489  05FA  00F2               	movwf	??_Lcd_Cmd+1
  1490  05FB  3062               	movlw	98
  1491  05FC  00F1               	movwf	??_Lcd_Cmd
  1492  05FD                     u287:
  1493  05FD  0BF1               	decfsz	??_Lcd_Cmd,f
  1494  05FE  2DFD               	goto	u287
  1495  05FF  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1496  0600  2DFD               	goto	u287
  1497  0601  0000               	nop
  1498  0602                     l738:
  1499                           
  1500                           ;LCD.c: 60:     PORTEbits.RE1 = 0;
  1501  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0604  1089               	bcf	9,1	;volatile
  1504  0605                     l81:
  1505  0605  0008               	return
  1506  0606                     __end_of_Lcd_Cmd:
  1507                           
  1508                           	psect	text10
  1509  0686                     __ptext10:	
  1510 ;; *************** function _Lcd_Port *****************
  1511 ;; Defined at:
  1512 ;;		line 13 in file "LCD.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  a               1    wreg     unsigned char 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  a               1    0[COMMON] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       0       0       0
  1527 ;;      Locals:         1       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0
  1529 ;;      Totals:         1       0       0       0       0
  1530 ;;Total ram usage:        1 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_Lcd_Cmd
  1536 ;;		_Lcd_Init
  1537 ;;		_Lcd_Write_Char
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _Lcd_Port
  1543  0686                     _Lcd_Port:
  1544                           
  1545                           ;incstack = 0
  1546                           ; Regs used in _Lcd_Port: [wreg]
  1547                           ;Lcd_Port@a stored from wreg
  1548  0686  00F0               	movwf	Lcd_Port@a
  1549  0687                     l700:
  1550                           
  1551                           ;LCD.c: 14:  if(a & 1)
  1552  0687  1C70               	btfss	Lcd_Port@a,0
  1553  0688  2E8A               	goto	u11
  1554  0689  2E8B               	goto	u10
  1555  068A                     u11:
  1556  068A  2E8F               	goto	l62
  1557  068B                     u10:
  1558  068B                     l702:
  1559                           
  1560                           ;LCD.c: 15:   PORTDbits.RD0 = 1;
  1561  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1562  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1563  068D  1408               	bsf	8,0	;volatile
  1564  068E  2E92               	goto	l63
  1565  068F                     l62:	
  1566                           ;LCD.c: 16:  else
  1567                           
  1568                           
  1569                           ;LCD.c: 17:   PORTDbits.RD0 = 0;
  1570  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0691  1008               	bcf	8,0	;volatile
  1573  0692                     l63:
  1574                           
  1575                           ;LCD.c: 19:     if(a & 2)
  1576  0692  1CF0               	btfss	Lcd_Port@a,1
  1577  0693  2E95               	goto	u21
  1578  0694  2E96               	goto	u20
  1579  0695                     u21:
  1580  0695  2E98               	goto	l64
  1581  0696                     u20:
  1582  0696                     l704:
  1583                           
  1584                           ;LCD.c: 20:   PORTDbits.RD1 = 1;
  1585  0696  1488               	bsf	8,1	;volatile
  1586  0697  2E99               	goto	l65
  1587  0698                     l64:	
  1588                           ;LCD.c: 21:  else
  1589                           
  1590                           
  1591                           ;LCD.c: 22:   PORTDbits.RD1 = 0;
  1592  0698  1088               	bcf	8,1	;volatile
  1593  0699                     l65:
  1594                           
  1595                           ;LCD.c: 24:     if(a & 4)
  1596  0699  1D70               	btfss	Lcd_Port@a,2
  1597  069A  2E9C               	goto	u31
  1598  069B  2E9D               	goto	u30
  1599  069C                     u31:
  1600  069C  2E9F               	goto	l66
  1601  069D                     u30:
  1602  069D                     l706:
  1603                           
  1604                           ;LCD.c: 25:   PORTDbits.RD2 = 1;
  1605  069D  1508               	bsf	8,2	;volatile
  1606  069E  2EA0               	goto	l67
  1607  069F                     l66:	
  1608                           ;LCD.c: 26:  else
  1609                           
  1610                           
  1611                           ;LCD.c: 27:   PORTDbits.RD2 = 0;
  1612  069F  1108               	bcf	8,2	;volatile
  1613  06A0                     l67:
  1614                           
  1615                           ;LCD.c: 29:     if(a & 8)
  1616  06A0  1DF0               	btfss	Lcd_Port@a,3
  1617  06A1  2EA3               	goto	u41
  1618  06A2  2EA4               	goto	u40
  1619  06A3                     u41:
  1620  06A3  2EA6               	goto	l68
  1621  06A4                     u40:
  1622  06A4                     l708:
  1623                           
  1624                           ;LCD.c: 30:   PORTDbits.RD3 = 1;
  1625  06A4  1588               	bsf	8,3	;volatile
  1626  06A5  2EA7               	goto	l69
  1627  06A6                     l68:	
  1628                           ;LCD.c: 31:  else
  1629                           
  1630                           
  1631                           ;LCD.c: 32:   PORTDbits.RD3 = 0;
  1632  06A6  1188               	bcf	8,3	;volatile
  1633  06A7                     l69:
  1634                           
  1635                           ;LCD.c: 34:     if(a & 0x10)
  1636  06A7  1E70               	btfss	Lcd_Port@a,4
  1637  06A8  2EAA               	goto	u51
  1638  06A9  2EAB               	goto	u50
  1639  06AA                     u51:
  1640  06AA  2EAD               	goto	l70
  1641  06AB                     u50:
  1642  06AB                     l710:
  1643                           
  1644                           ;LCD.c: 35:   PORTDbits.RD4 = 1;
  1645  06AB  1608               	bsf	8,4	;volatile
  1646  06AC  2EAE               	goto	l71
  1647  06AD                     l70:	
  1648                           ;LCD.c: 36:  else
  1649                           
  1650                           
  1651                           ;LCD.c: 37:   PORTDbits.RD4 = 0;
  1652  06AD  1208               	bcf	8,4	;volatile
  1653  06AE                     l71:
  1654                           
  1655                           ;LCD.c: 39:  if(a & 0x20)
  1656  06AE  1EF0               	btfss	Lcd_Port@a,5
  1657  06AF  2EB1               	goto	u61
  1658  06B0  2EB2               	goto	u60
  1659  06B1                     u61:
  1660  06B1  2EB4               	goto	l72
  1661  06B2                     u60:
  1662  06B2                     l712:
  1663                           
  1664                           ;LCD.c: 40:   PORTDbits.RD5 = 1;
  1665  06B2  1688               	bsf	8,5	;volatile
  1666  06B3  2EB5               	goto	l73
  1667  06B4                     l72:	
  1668                           ;LCD.c: 41:  else
  1669                           
  1670                           
  1671                           ;LCD.c: 42:   PORTDbits.RD5 = 0;
  1672  06B4  1288               	bcf	8,5	;volatile
  1673  06B5                     l73:
  1674                           
  1675                           ;LCD.c: 44:  if(a & 0x40)
  1676  06B5  1F70               	btfss	Lcd_Port@a,6
  1677  06B6  2EB8               	goto	u71
  1678  06B7  2EB9               	goto	u70
  1679  06B8                     u71:
  1680  06B8  2EBB               	goto	l74
  1681  06B9                     u70:
  1682  06B9                     l714:
  1683                           
  1684                           ;LCD.c: 45:   PORTDbits.RD6 = 1;
  1685  06B9  1708               	bsf	8,6	;volatile
  1686  06BA  2EBC               	goto	l75
  1687  06BB                     l74:	
  1688                           ;LCD.c: 46:  else
  1689                           
  1690                           
  1691                           ;LCD.c: 47:   PORTDbits.RD6 = 0;
  1692  06BB  1308               	bcf	8,6	;volatile
  1693  06BC                     l75:
  1694                           
  1695                           ;LCD.c: 49:  if(a & 0x80)
  1696  06BC  1FF0               	btfss	Lcd_Port@a,7
  1697  06BD  2EBF               	goto	u81
  1698  06BE  2EC0               	goto	u80
  1699  06BF                     u81:
  1700  06BF  2EC2               	goto	l76
  1701  06C0                     u80:
  1702  06C0                     l716:
  1703                           
  1704                           ;LCD.c: 50:   PORTDbits.RD7 = 1;
  1705  06C0  1788               	bsf	8,7	;volatile
  1706  06C1  2EC3               	goto	l78
  1707  06C2                     l76:	
  1708                           ;LCD.c: 51:  else
  1709                           
  1710                           
  1711                           ;LCD.c: 52:   PORTDbits.RD7 = 0;
  1712  06C2  1388               	bcf	8,7	;volatile
  1713  06C3                     l78:
  1714  06C3  0008               	return
  1715  06C4                     __end_of_Lcd_Port:
  1716  007E                     btemp	set	126	;btemp
  1717  007E                     wtemp0	set	126
  1718                           
  1719                           	psect	config
  1720                           
  1721                           ;Config register CONFIG1 @ 0x2007
  1722                           ;	Oscillator Selection bits
  1723                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1724                           ;	Watchdog Timer Enable bit
  1725                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1726                           ;	Power-up Timer Enable bit
  1727                           ;	PWRTE = OFF, PWRT disabled
  1728                           ;	RE3/MCLR pin function select bit
  1729                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1730                           ;	Code Protection bit
  1731                           ;	CP = OFF, Program memory code protection is disabled
  1732                           ;	Data Code Protection bit
  1733                           ;	CPD = OFF, Data memory code protection is disabled
  1734                           ;	Brown Out Reset Selection bits
  1735                           ;	BOREN = OFF, BOR disabled
  1736                           ;	Internal External Switchover bit
  1737                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1738                           ;	Fail-Safe Clock Monitor Enabled bit
  1739                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1740                           ;	Low Voltage Programming Enable bit
  1741                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1742                           ;	In-Circuit Debugger Mode bit
  1743                           ;	DEBUG = 0x1, unprogrammed default
  1744  2007                     	org	8199
  1745  2007  20D6               	dw	8406
  1746                           
  1747                           ;Config register CONFIG2 @ 0x2008
  1748                           ;	Brown-out Reset Selection bit
  1749                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1750                           ;	Flash Program Memory Self Write Enable bits
  1751                           ;	WRT = OFF, Write protection off
  1752  2008                     	org	8200
  1753  2008  3FFF               	dw	16383

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2032
                                              8 COMMON     5     5      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     405
                                              4 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     150
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     725
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     255
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     135
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 10:26:57 2021

                        pc 0002                         l53 063C                         l70 06AD  
                       l62 068F                         l71 06AE                         l63 0692  
                       l72 06B4                         l64 0698                         l73 06B5  
                       l65 0699                         l81 0605                         l74 06BB  
                       l66 069F                         l90 0660                         l75 06BC  
                       l67 06A0                         l76 06C2                         l68 06A6  
                       l84 05DD                         l69 06A7                         l93 070E  
                       l78 06C3                         l96 061F                         u10 068B  
                       u11 068A                         u20 0696                         u21 0695  
                       u30 069D                         u31 069C                         u40 06A4  
                       u41 06A3                         u50 06AB                         u51 06AA  
                       u60 06B2                         u61 06B1                         u70 06B9  
                       u71 06B8                         u80 06C0                         u81 06BF  
                       fsr 0004                        l102 0685                        l105 05EB  
                      l108 05E4                        l700 0687                        l710 06AB  
                      l702 068B                        l712 06B2                        l704 0696  
                      l720 060B                        l714 06B9                        l706 069D  
                      l730 05ED                        l722 060E                        l716 06C0  
                      l708 06A4                        l732 05F0                        l724 0614  
                      l740 0620                        l900 078E                        l734 05F6  
                      l750 06E8                        l742 06C4                        l726 0617  
                      l718 0607                        l902 079B                        l736 05F9  
                      l752 05D7                        l744 06CA                        l728 061C  
                      l920 07C9                        l904 07A0                        l738 0602  
                      l746 06D3                        l850 0655                        l842 063E  
                      l922 07D2                        l914 07B1                        l906 07A6  
                      l748 06E2                        l852 065A                        l844 0643  
                      l860 0678                        l924 07EB                        l916 07BE  
                      l908 07AF                        l846 0648                        l774 05DE  
                      l854 0662                        l918 07C3                        l870 071D  
                      l862 070F                        l848 064F                        l776 05E5  
                      l856 0665                        l880 073E                        l872 0722  
                      l864 0714                        l858 0672                        l890 077E  
                      l882 0758                        l874 072A                        l866 0717  
                      l892 0786                        l884 075E                        l876 0730  
                      l868 0718                        l894 078C                        l886 076C  
                      l878 0738                        l888 0779                        u140 0643  
                      u141 0642                        u150 0655                        u151 0654  
                      u207 0772                        u160 0685                        u161 0684  
                      u217 0794                        u170 07AF                        u227 07B7  
                      u171 07AE                        u180 07D2                        u237 07F1  
                      u181 07D1                        u247 0619                        u257 06CE  
                      u267 06DD                        u277 06EC                        u197 0744  
                      u287 05FD                        fsr0 0004                       STR_1 001D  
                     STR_2 0046                       STR_3 002D                       STR_4 003A  
                     STR_5 0009          ?_Lcd_Write_String 0070                       _main 070F  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0074  
          __end_of_Lcd_Cmd 0606                      ?_main 0070                      _ANSEL 0188  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
  __size_of_Lcd_Shift_Left 0007                      _setup 0620                      main@a 007B  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 070F           __end_of_Lcd_Port 06C4            __initialization 07FC  
             __end_of_main 07FC                     ??_main 0078         __size_of_Lcd_Clear 0007  
                   ?_setup 0070                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 001A   __size_of_Lcd_Shift_Right 0007            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074    __end_of__initialization 07FC          __end_of_Lcd_Clear 05DE  
           __pcstackCOMMON 0070              __end_of_setup 063D             _Lcd_Set_Cursor 063D  
           _Lcd_Shift_Left 05DE                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0070                 __pmaintext 070F  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 0661     __end_of_Lcd_Shift_Left 05E5          ??_Lcd_Shift_Right 0074  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 0606                    _Lcd_Cmd 05EC            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0620                    __ptext2 0661                    __ptext3 0606  
                  __ptext4 05E5                    __ptext5 05DE                    __ptext6 063D  
                  __ptext7 06C4                    __ptext8 05D7                    __ptext9 05EC  
          ?_Lcd_Shift_Left 0070     __end_of_Lcd_Write_Char 0620       end_of_initialization 07FC  
                Lcd_Port@a 0070                  _PORTDbits 0008                  _PORTEbits 0009  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076          Lcd_Write_String@i 0074  
                _Lcd_Clear 05D7           _Lcd_Write_String 0661        start_initialization 07FC  
        __size_of_Lcd_Init 004B          __size_of_Lcd_Port 003E                 ?_Lcd_Clear 0070  
          _Lcd_Shift_Right 05E5            Lcd_Write_Char@a 0072                  ___latbits 0002  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075           ??_Lcd_Shift_Left 0074  
                __pstrings 0003             __size_of_setup 001D    __end_of_Lcd_Shift_Right 05EC  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                __stringbase 0008  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 06C4                   _Lcd_Port 0686  
 __end_of_Lcd_Write_String 0686           __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009  
                 __ptext10 0686              __size_of_main 00ED           ?_Lcd_Shift_Right 0070  
       Lcd_Write_Char@temp 0073                  stringcode 0003         Lcd_Set_Cursor@temp 0077  
                 stringdir 0003                   stringtab 0003  
