

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 22:30:53 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0009                     _PORTEbits	set	9
   291  0009                     _PORTE	set	9
   292  0008                     _PORTD	set	8
   293  0007                     _PORTC	set	7
   294  0006                     _PORTB	set	6
   295  0049                     _RE1	set	73
   296  0047                     _RD7	set	71
   297  0046                     _RD6	set	70
   298  0045                     _RD5	set	69
   299  0044                     _RD4	set	68
   300  0043                     _RD3	set	67
   301  0042                     _RD2	set	66
   302  0041                     _RD1	set	65
   303  0040                     _RD0	set	64
   304  0089                     _TRISE	set	137
   305  0087                     _TRISC	set	135
   306  0086                     _TRISB	set	134
   307  0088                     _TRISD	set	136
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           	psect	strings
   312  0003                     __pstrings:
   313  0003                     stringtab:
   314  0003                     __stringtab:
   315  0003                     stringcode:	
   316                           ;	String table - string pointers are 1 byte each
   317                           
   318  0003                     stringdir:
   319  0003  3000               	movlw	high stringdir
   320  0004  008A               	movwf	10
   321  0005  0804               	movf	4,w
   322  0006  0A84               	incf	4,f
   323  0007  0782               	addwf	2,f
   324  0008                     __stringbase:
   325  0008  3400               	retlw	0
   326  0009                     __end_of__stringtab:
   327  0009                     STR_5:
   328  0009  3477               	retlw	119	;'w'
   329  000A  3477               	retlw	119	;'w'
   330  000B  3477               	retlw	119	;'w'
   331  000C  342E               	retlw	46	;'.'
   332  000D  3465               	retlw	101	;'e'
   333  000E  346C               	retlw	108	;'l'
   334  000F  3465               	retlw	101	;'e'
   335  0010  3463               	retlw	99	;'c'
   336  0011  3474               	retlw	116	;'t'
   337  0012  3472               	retlw	114	;'r'
   338  0013  346F               	retlw	111	;'o'
   339  0014  3453               	retlw	83	;'S'
   340  0015  346F               	retlw	111	;'o'
   341  0016  346D               	retlw	109	;'m'
   342  0017  3465               	retlw	101	;'e'
   343  0018  342E               	retlw	46	;'.'
   344  0019  3463               	retlw	99	;'c'
   345  001A  346F               	retlw	111	;'o'
   346  001B  346D               	retlw	109	;'m'
   347  001C  3400               	retlw	0
   348  001D                     STR_1:
   349  001D  344C               	retlw	76	;'L'
   350  001E  3443               	retlw	67	;'C'
   351  001F  3444               	retlw	68	;'D'
   352  0020  3420               	retlw	32	;' '
   353  0021  344C               	retlw	76	;'L'
   354  0022  3469               	retlw	105	;'i'
   355  0023  3462               	retlw	98	;'b'
   356  0024  3472               	retlw	114	;'r'
   357  0025  3461               	retlw	97	;'a'
   358  0026  3472               	retlw	114	;'r'
   359  0027  3479               	retlw	121	;'y'
   360  0028  3420               	retlw	32	;' '
   361  0029  3466               	retlw	102	;'f'
   362  002A  346F               	retlw	111	;'o'
   363  002B  3472               	retlw	114	;'r'
   364  002C  3400               	retlw	0
   365  002D                     STR_3:
   366  002D  3444               	retlw	68	;'D'
   367  002E  3465               	retlw	101	;'e'
   368  002F  3476               	retlw	118	;'v'
   369  0030  3465               	retlw	101	;'e'
   370  0031  346C               	retlw	108	;'l'
   371  0032  346F               	retlw	111	;'o'
   372  0033  3470               	retlw	112	;'p'
   373  0034  3465               	retlw	101	;'e'
   374  0035  3464               	retlw	100	;'d'
   375  0036  3420               	retlw	32	;' '
   376  0037  3442               	retlw	66	;'B'
   377  0038  3479               	retlw	121	;'y'
   378  0039  3400               	retlw	0
   379  003A                     STR_4:
   380  003A  3465               	retlw	101	;'e'
   381  003B  346C               	retlw	108	;'l'
   382  003C  3465               	retlw	101	;'e'
   383  003D  3463               	retlw	99	;'c'
   384  003E  3474               	retlw	116	;'t'
   385  003F  3472               	retlw	114	;'r'
   386  0040  346F               	retlw	111	;'o'
   387  0041  3453               	retlw	83	;'S'
   388  0042  346F               	retlw	111	;'o'
   389  0043  346D               	retlw	109	;'m'
   390  0044  3465               	retlw	101	;'e'
   391  0045  3400               	retlw	0
   392  0046                     STR_2:
   393  0046  344D               	retlw	77	;'M'
   394  0047  3450               	retlw	80	;'P'
   395  0048  344C               	retlw	76	;'L'
   396  0049  3441               	retlw	65	;'A'
   397  004A  3442               	retlw	66	;'B'
   398  004B  3420               	retlw	32	;' '
   399  004C  3458               	retlw	88	;'X'
   400  004D  3443               	retlw	67	;'C'
   401  004E  3438               	retlw	56	;'8'
   402  004F  3400               	retlw	0
   403                           
   404                           	psect	cinit
   405  07FC                     start_initialization:	
   406                           ; #config settings
   407                           
   408  07FC                     __initialization:
   409  07FC                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  07FC                     __end_of__initialization:
   413  07FC  0183               	clrf	3
   414  07FD  120A  118A  2F0A   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	cstackCOMMON
   417  0070                     __pcstackCOMMON:
   418  0070                     ?_setup:
   419  0070                     ??_setup:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_Lcd_Init:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_Lcd_Clear:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_Lcd_Write_String:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_Lcd_Shift_Left:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_Lcd_Shift_Right:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_Lcd_Write_Char:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_Lcd_Port:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ??_Lcd_Port:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_Lcd_Cmd:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     Lcd_Port@a:	
   453                           ; 1 bytes @ 0x0
   454                           
   455                           
   456                           ; 1 bytes @ 0x0
   457  0070                     	ds	1
   458  0071                     ??_Lcd_Write_Char:
   459  0071                     ??_Lcd_Cmd:	
   460                           ; 1 bytes @ 0x1
   461                           
   462                           
   463                           ; 1 bytes @ 0x1
   464  0071                     	ds	1
   465  0072                     Lcd_Write_Char@temp:
   466                           
   467                           ; 1 bytes @ 0x2
   468  0072                     	ds	1
   469  0073                     Lcd_Cmd@a:
   470  0073                     Lcd_Write_Char@y:	
   471                           ; 1 bytes @ 0x3
   472                           
   473                           
   474                           ; 1 bytes @ 0x3
   475  0073                     	ds	1
   476  0074                     ??_Lcd_Init:
   477  0074                     ??_Lcd_Clear:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0074                     ?_Lcd_Set_Cursor:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0074                     ??_Lcd_Shift_Left:	
   484                           ; 1 bytes @ 0x4
   485                           
   486  0074                     ??_Lcd_Shift_Right:	
   487                           ; 1 bytes @ 0x4
   488                           
   489  0074                     Lcd_Set_Cursor@b:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0074                     Lcd_Write_Char@a:	
   493                           ; 1 bytes @ 0x4
   494                           
   495                           
   496                           ; 1 bytes @ 0x4
   497  0074                     	ds	1
   498  0075                     ??_Lcd_Set_Cursor:
   499  0075                     ??_Lcd_Write_String:	
   500                           ; 1 bytes @ 0x5
   501                           
   502  0075                     Lcd_Write_String@i:	
   503                           ; 1 bytes @ 0x5
   504                           
   505                           
   506                           ; 2 bytes @ 0x5
   507  0075                     	ds	2
   508  0077                     Lcd_Set_Cursor@a:
   509  0077                     Lcd_Write_String@a:	
   510                           ; 1 bytes @ 0x7
   511                           
   512                           
   513                           ; 1 bytes @ 0x7
   514  0077                     	ds	1
   515  0078                     Lcd_Set_Cursor@z:
   516                           
   517                           ; 1 bytes @ 0x8
   518  0078                     	ds	1
   519  0079                     Lcd_Set_Cursor@y:
   520                           
   521                           ; 1 bytes @ 0x9
   522  0079                     	ds	1
   523  007A                     Lcd_Set_Cursor@temp:
   524                           
   525                           ; 1 bytes @ 0xA
   526  007A                     	ds	1
   527  007B                     ??_main:
   528                           
   529                           ; 1 bytes @ 0xB
   530  007B                     	ds	3
   531                           
   532                           	psect	cstackBANK0
   533  0020                     __pcstackBANK0:
   534  0020                     main@a:
   535                           
   536                           ; 2 bytes @ 0x0
   537  0020                     	ds	2
   538                           
   539                           	psect	maintext
   540  070A                     __pmaintext:	
   541 ;;
   542 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   543 ;;
   544 ;; *************** function _main *****************
   545 ;; Defined at:
   546 ;;		line 71 in file "LAB3.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  a               2    0[BANK0 ] unsigned int 
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : B00/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   560 ;;      Params:         0       0       0       0       0
   561 ;;      Locals:         0       2       0       0       0
   562 ;;      Temps:          3       0       0       0       0
   563 ;;      Totals:         3       2       0       0       0
   564 ;;Total ram usage:        5 bytes
   565 ;; Hardware stack levels required when called:    3
   566 ;; This function calls:
   567 ;;		_Lcd_Clear
   568 ;;		_Lcd_Init
   569 ;;		_Lcd_Set_Cursor
   570 ;;		_Lcd_Shift_Left
   571 ;;		_Lcd_Shift_Right
   572 ;;		_Lcd_Write_Char
   573 ;;		_Lcd_Write_String
   574 ;;		_setup
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _main
   582  070A                     _main:
   583  070A                     l972:	
   584                           ;incstack = 0
   585                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   586                           
   587                           
   588                           ;LAB3.c: 73:     setup();
   589  070A  120A  118A  25A2  120A  118A  	fcall	_setup
   590  070F                     l974:
   591                           
   592                           ;LAB3.c: 75:     unsigned int a;;LAB3.c: 76:   TRISD = 0x00;
   593  070F  1683               	bsf	3,5	;RP0=1, select bank1
   594  0710  1303               	bcf	3,6	;RP1=0, select bank1
   595  0711  0188               	clrf	8	;volatile
   596  0712                     l976:
   597                           
   598                           ;LAB3.c: 77:   Lcd_Init();
   599  0712  120A  118A  26AD  120A  118A  	fcall	_Lcd_Init
   600  0717                     l978:
   601                           
   602                           ;LAB3.c: 84:         Lcd_Clear();
   603  0717  120A  118A  2561  120A  118A  	fcall	_Lcd_Clear
   604  071C                     l980:
   605                           
   606                           ;LAB3.c: 85:     Lcd_Set_Cursor(1,1);
   607  071C  01F4               	clrf	Lcd_Set_Cursor@b
   608  071D  0AF4               	incf	Lcd_Set_Cursor@b,f
   609  071E  3001               	movlw	1
   610  071F  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   611  0724                     l982:
   612                           
   613                           ;LAB3.c: 86:     Lcd_Write_String("LCD Library for");
   614  0724  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   615  0725  120A  118A  25BF  120A  118A  	fcall	_Lcd_Write_String
   616  072A                     l984:
   617                           
   618                           ;LAB3.c: 87:     Lcd_Set_Cursor(2,1);
   619  072A  01F4               	clrf	Lcd_Set_Cursor@b
   620  072B  0AF4               	incf	Lcd_Set_Cursor@b,f
   621  072C  3002               	movlw	2
   622  072D  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   623  0732                     l986:
   624                           
   625                           ;LAB3.c: 88:     Lcd_Write_String("MPLAB XC8");
   626  0732  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   627  0733  120A  118A  25BF  120A  118A  	fcall	_Lcd_Write_String
   628  0738                     l988:
   629                           
   630                           ;LAB3.c: 89:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   631  0738  3015               	movlw	21
   632  0739  00FD               	movwf	??_main+2
   633  073A  304B               	movlw	75
   634  073B  00FC               	movwf	??_main+1
   635  073C  30BE               	movlw	190
   636  073D  00FB               	movwf	??_main
   637  073E                     u337:
   638  073E  0BFB               	decfsz	??_main,f
   639  073F  2F3E               	goto	u337
   640  0740  0BFC               	decfsz	??_main+1,f
   641  0741  2F3E               	goto	u337
   642  0742  0BFD               	decfsz	??_main+2,f
   643  0743  2F3E               	goto	u337
   644  0744  0000               	nop
   645  0745                     l990:
   646                           
   647                           ;LAB3.c: 90:     Lcd_Clear();
   648  0745  120A  118A  2561  120A  118A  	fcall	_Lcd_Clear
   649  074A                     l992:
   650                           
   651                           ;LAB3.c: 91:     Lcd_Set_Cursor(1,1);
   652  074A  01F4               	clrf	Lcd_Set_Cursor@b
   653  074B  0AF4               	incf	Lcd_Set_Cursor@b,f
   654  074C  3001               	movlw	1
   655  074D  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   656  0752                     l994:
   657                           
   658                           ;LAB3.c: 92:     Lcd_Write_String("Developed By");
   659  0752  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   660  0753  120A  118A  25BF  120A  118A  	fcall	_Lcd_Write_String
   661  0758                     l996:
   662                           
   663                           ;LAB3.c: 93:     Lcd_Set_Cursor(2,1);
   664  0758  01F4               	clrf	Lcd_Set_Cursor@b
   665  0759  0AF4               	incf	Lcd_Set_Cursor@b,f
   666  075A  3002               	movlw	2
   667  075B  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   668  0760                     l998:
   669                           
   670                           ;LAB3.c: 94:     Lcd_Write_String("electroSome");
   671  0760  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   672  0761  120A  118A  25BF  120A  118A  	fcall	_Lcd_Write_String
   673  0766                     l1000:
   674                           
   675                           ;LAB3.c: 95:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   676  0766  3015               	movlw	21
   677  0767  00FD               	movwf	??_main+2
   678  0768  304B               	movlw	75
   679  0769  00FC               	movwf	??_main+1
   680  076A  30BE               	movlw	190
   681  076B  00FB               	movwf	??_main
   682  076C                     u347:
   683  076C  0BFB               	decfsz	??_main,f
   684  076D  2F6C               	goto	u347
   685  076E  0BFC               	decfsz	??_main+1,f
   686  076F  2F6C               	goto	u347
   687  0770  0BFD               	decfsz	??_main+2,f
   688  0771  2F6C               	goto	u347
   689  0772  0000               	nop
   690  0773                     l1002:
   691                           
   692                           ;LAB3.c: 96:     Lcd_Clear();
   693  0773  120A  118A  2561  120A  118A  	fcall	_Lcd_Clear
   694  0778                     l1004:
   695                           
   696                           ;LAB3.c: 97:     Lcd_Set_Cursor(1,1);
   697  0778  01F4               	clrf	Lcd_Set_Cursor@b
   698  0779  0AF4               	incf	Lcd_Set_Cursor@b,f
   699  077A  3001               	movlw	1
   700  077B  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   701  0780                     l1006:
   702                           
   703                           ;LAB3.c: 98:     Lcd_Write_String("www.electroSome.com");
   704  0780  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   705  0781  120A  118A  25BF  120A  118A  	fcall	_Lcd_Write_String
   706  0786                     l1008:
   707                           
   708                           ;LAB3.c: 100:     for(a=0;a<15;a++)
   709  0786  1283               	bcf	3,5	;RP0=0, select bank0
   710  0787  1303               	bcf	3,6	;RP1=0, select bank0
   711  0788  01A0               	clrf	main@a
   712  0789  01A1               	clrf	main@a+1
   713  078A                     l1014:
   714                           
   715                           ;LAB3.c: 101:     {;LAB3.c: 102:         _delay((unsigned long)((300)*(8000000/4000.0)))
      +                          ;
   716  078A  3004               	movlw	4
   717  078B  00FD               	movwf	??_main+2
   718  078C  300C               	movlw	12
   719  078D  00FC               	movwf	??_main+1
   720  078E  3033               	movlw	51
   721  078F  00FB               	movwf	??_main
   722  0790                     u357:
   723  0790  0BFB               	decfsz	??_main,f
   724  0791  2F90               	goto	u357
   725  0792  0BFC               	decfsz	??_main+1,f
   726  0793  2F90               	goto	u357
   727  0794  0BFD               	decfsz	??_main+2,f
   728  0795  2F90               	goto	u357
   729  0796  2F97               	nop2
   730  0797                     l1016:
   731                           
   732                           ;LAB3.c: 103:         Lcd_Shift_Left();
   733  0797  120A  118A  256E  120A  118A  	fcall	_Lcd_Shift_Left
   734  079C                     l1018:
   735                           
   736                           ;LAB3.c: 104:     }
   737  079C  3001               	movlw	1
   738  079D  1283               	bcf	3,5	;RP0=0, select bank0
   739  079E  1303               	bcf	3,6	;RP1=0, select bank0
   740  079F  07A0               	addwf	main@a,f
   741  07A0  1803               	skipnc
   742  07A1  0AA1               	incf	main@a+1,f
   743  07A2  3000               	movlw	0
   744  07A3  07A1               	addwf	main@a+1,f
   745  07A4                     l1020:
   746  07A4  3000               	movlw	0
   747  07A5  0221               	subwf	main@a+1,w
   748  07A6  300F               	movlw	15
   749  07A7  1903               	skipnz
   750  07A8  0220               	subwf	main@a,w
   751  07A9  1C03               	skipc
   752  07AA  2FAC               	goto	u311
   753  07AB  2FAD               	goto	u310
   754  07AC                     u311:
   755  07AC  2F8A               	goto	l1014
   756  07AD                     u310:
   757  07AD                     l1022:
   758                           
   759                           ;LAB3.c: 106:     for(a=0;a<15;a++)
   760  07AD  01A0               	clrf	main@a
   761  07AE  01A1               	clrf	main@a+1
   762  07AF                     l1028:
   763                           
   764                           ;LAB3.c: 107:     {;LAB3.c: 108:         _delay((unsigned long)((300)*(8000000/4000.0)))
      +                          ;
   765  07AF  3004               	movlw	4
   766  07B0  00FD               	movwf	??_main+2
   767  07B1  300C               	movlw	12
   768  07B2  00FC               	movwf	??_main+1
   769  07B3  3033               	movlw	51
   770  07B4  00FB               	movwf	??_main
   771  07B5                     u367:
   772  07B5  0BFB               	decfsz	??_main,f
   773  07B6  2FB5               	goto	u367
   774  07B7  0BFC               	decfsz	??_main+1,f
   775  07B8  2FB5               	goto	u367
   776  07B9  0BFD               	decfsz	??_main+2,f
   777  07BA  2FB5               	goto	u367
   778  07BB  2FBC               	nop2
   779  07BC                     l1030:
   780                           
   781                           ;LAB3.c: 109:         Lcd_Shift_Right();
   782  07BC  120A  118A  257B  120A  118A  	fcall	_Lcd_Shift_Right
   783  07C1                     l1032:
   784                           
   785                           ;LAB3.c: 110:     }
   786  07C1  3001               	movlw	1
   787  07C2  1283               	bcf	3,5	;RP0=0, select bank0
   788  07C3  1303               	bcf	3,6	;RP1=0, select bank0
   789  07C4  07A0               	addwf	main@a,f
   790  07C5  1803               	skipnc
   791  07C6  0AA1               	incf	main@a+1,f
   792  07C7  3000               	movlw	0
   793  07C8  07A1               	addwf	main@a+1,f
   794  07C9                     l1034:
   795  07C9  3000               	movlw	0
   796  07CA  0221               	subwf	main@a+1,w
   797  07CB  300F               	movlw	15
   798  07CC  1903               	skipnz
   799  07CD  0220               	subwf	main@a,w
   800  07CE  1C03               	skipc
   801  07CF  2FD1               	goto	u321
   802  07D0  2FD2               	goto	u320
   803  07D1                     u321:
   804  07D1  2FAF               	goto	l1028
   805  07D2                     u320:
   806  07D2                     l1036:
   807                           
   808                           ;LAB3.c: 112:     Lcd_Clear();
   809  07D2  120A  118A  2561  120A  118A  	fcall	_Lcd_Clear
   810                           
   811                           ;LAB3.c: 113:     Lcd_Set_Cursor(2,1);
   812  07D7  01F4               	clrf	Lcd_Set_Cursor@b
   813  07D8  0AF4               	incf	Lcd_Set_Cursor@b,f
   814  07D9  3002               	movlw	2
   815  07DA  120A  118A  265B  120A  118A  	fcall	_Lcd_Set_Cursor
   816                           
   817                           ;LAB3.c: 114:     Lcd_Write_Char('e');
   818  07DF  3065               	movlw	101
   819  07E0  120A  118A  25E4  120A  118A  	fcall	_Lcd_Write_Char
   820                           
   821                           ;LAB3.c: 115:     Lcd_Write_Char('S');
   822  07E5  3053               	movlw	83
   823  07E6  120A  118A  25E4  120A  118A  	fcall	_Lcd_Write_Char
   824  07EB                     l1038:
   825                           
   826                           ;LAB3.c: 116:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   827  07EB  3015               	movlw	21
   828  07EC  00FD               	movwf	??_main+2
   829  07ED  304B               	movlw	75
   830  07EE  00FC               	movwf	??_main+1
   831  07EF  30BE               	movlw	190
   832  07F0  00FB               	movwf	??_main
   833  07F1                     u377:
   834  07F1  0BFB               	decfsz	??_main,f
   835  07F2  2FF1               	goto	u377
   836  07F3  0BFC               	decfsz	??_main+1,f
   837  07F4  2FF1               	goto	u377
   838  07F5  0BFD               	decfsz	??_main+2,f
   839  07F6  2FF1               	goto	u377
   840  07F7  0000               	nop
   841  07F8  2F17               	goto	l978
   842  07F9  120A  118A  2800   	ljmp	start
   843  07FC                     __end_of_main:
   844                           
   845                           	psect	text1
   846  05A2                     __ptext1:	
   847 ;; *************** function _setup *****************
   848 ;; Defined at:
   849 ;;		line 126 in file "LAB3.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		status,2
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function _setup
   878  05A2                     _setup:
   879  05A2                     l926:	
   880                           ;incstack = 0
   881                           ; Regs used in _setup: [status,2]
   882                           
   883                           
   884                           ;LAB3.c: 127:     ANSEL = 0;
   885  05A2  1683               	bsf	3,5	;RP0=1, select bank3
   886  05A3  1703               	bsf	3,6	;RP1=1, select bank3
   887  05A4  0188               	clrf	8	;volatile
   888                           
   889                           ;LAB3.c: 128:     ANSELH = 0;
   890  05A5  0189               	clrf	9	;volatile
   891                           
   892                           ;LAB3.c: 129:     TRISB = 0;
   893  05A6  1683               	bsf	3,5	;RP0=1, select bank1
   894  05A7  1303               	bcf	3,6	;RP1=0, select bank1
   895  05A8  0186               	clrf	6	;volatile
   896                           
   897                           ;LAB3.c: 130:     PORTB = 0;
   898  05A9  1283               	bcf	3,5	;RP0=0, select bank0
   899  05AA  1303               	bcf	3,6	;RP1=0, select bank0
   900  05AB  0186               	clrf	6	;volatile
   901                           
   902                           ;LAB3.c: 131:     TRISC = 0;
   903  05AC  1683               	bsf	3,5	;RP0=1, select bank1
   904  05AD  1303               	bcf	3,6	;RP1=0, select bank1
   905  05AE  0187               	clrf	7	;volatile
   906                           
   907                           ;LAB3.c: 132:     PORTC = 0;
   908  05AF  1283               	bcf	3,5	;RP0=0, select bank0
   909  05B0  1303               	bcf	3,6	;RP1=0, select bank0
   910  05B1  0187               	clrf	7	;volatile
   911                           
   912                           ;LAB3.c: 133:     TRISD = 0;
   913  05B2  1683               	bsf	3,5	;RP0=1, select bank1
   914  05B3  1303               	bcf	3,6	;RP1=0, select bank1
   915  05B4  0188               	clrf	8	;volatile
   916                           
   917                           ;LAB3.c: 134:     PORTD = 0;
   918  05B5  1283               	bcf	3,5	;RP0=0, select bank0
   919  05B6  1303               	bcf	3,6	;RP1=0, select bank0
   920  05B7  0188               	clrf	8	;volatile
   921                           
   922                           ;LAB3.c: 135:     TRISE = 0;
   923  05B8  1683               	bsf	3,5	;RP0=1, select bank1
   924  05B9  1303               	bcf	3,6	;RP1=0, select bank1
   925  05BA  0189               	clrf	9	;volatile
   926                           
   927                           ;LAB3.c: 136:     PORTE = 0;
   928  05BB  1283               	bcf	3,5	;RP0=0, select bank0
   929  05BC  1303               	bcf	3,6	;RP1=0, select bank0
   930  05BD  0189               	clrf	9	;volatile
   931  05BE                     l53:
   932  05BE  0008               	return
   933  05BF                     __end_of_setup:
   934                           
   935                           	psect	text2
   936  05BF                     __ptext2:	
   937 ;; *************** function _Lcd_Write_String *****************
   938 ;; Defined at:
   939 ;;		line 119 in file "LCD.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  a               1    wreg     PTR unsigned char 
   942 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   943 ;;		 -> STR_1(16), 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  a               1    7[COMMON] PTR unsigned char 
   946 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   947 ;;		 -> STR_1(16), 
   948 ;;  i               2    5[COMMON] int 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       0       0       0       0
   959 ;;      Locals:         3       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0
   961 ;;      Totals:         3       0       0       0       0
   962 ;;Total ram usage:        3 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    2
   965 ;; This function calls:
   966 ;;		_Lcd_Write_Char
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           
   973                           ;psect for function _Lcd_Write_String
   974  05BF                     _Lcd_Write_String:
   975                           
   976                           ;incstack = 0
   977                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   978                           ;Lcd_Write_String@a stored from wreg
   979  05BF  00F7               	movwf	Lcd_Write_String@a
   980  05C0                     l960:
   981                           
   982                           ;LCD.c: 120:  int i;;LCD.c: 121:  for(i=0;a[i]!='\0';i++)
   983  05C0  01F5               	clrf	Lcd_Write_String@i
   984  05C1  01F6               	clrf	Lcd_Write_String@i+1
   985  05C2  2DD6               	goto	l966
   986  05C3                     l962:
   987                           
   988                           ;LCD.c: 122:     Lcd_Write_Char(a[i]);
   989  05C3  0875               	movf	Lcd_Write_String@i,w
   990  05C4  0777               	addwf	Lcd_Write_String@a,w
   991  05C5  0084               	movwf	4
   992  05C6  120A  118A  2003  120A  118A  	fcall	stringdir
   993  05CB  120A  118A  25E4  120A  118A  	fcall	_Lcd_Write_Char
   994  05D0                     l964:
   995  05D0  3001               	movlw	1
   996  05D1  07F5               	addwf	Lcd_Write_String@i,f
   997  05D2  1803               	skipnc
   998  05D3  0AF6               	incf	Lcd_Write_String@i+1,f
   999  05D4  3000               	movlw	0
  1000  05D5  07F6               	addwf	Lcd_Write_String@i+1,f
  1001  05D6                     l966:
  1002  05D6  0875               	movf	Lcd_Write_String@i,w
  1003  05D7  0777               	addwf	Lcd_Write_String@a,w
  1004  05D8  0084               	movwf	4
  1005  05D9  120A  118A  2003  120A  118A  	fcall	stringdir
  1006  05DE  3A00               	xorlw	0
  1007  05DF  1D03               	skipz
  1008  05E0  2DE2               	goto	u301
  1009  05E1  2DE3               	goto	u300
  1010  05E2                     u301:
  1011  05E2  2DC3               	goto	l962
  1012  05E3                     u300:
  1013  05E3                     l118:
  1014  05E3  0008               	return
  1015  05E4                     __end_of_Lcd_Write_String:
  1016                           
  1017                           	psect	text3
  1018  05E4                     __ptext3:	
  1019 ;; *************** function _Lcd_Write_Char *****************
  1020 ;; Defined at:
  1021 ;;		line 104 in file "LCD.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  a               1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  a               1    4[COMMON] unsigned char 
  1026 ;;  y               1    3[COMMON] unsigned char 
  1027 ;;  temp            1    2[COMMON] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0, pclath, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         3       0       0       0       0
  1039 ;;      Temps:          1       0       0       0       0
  1040 ;;      Totals:         4       0       0       0       0
  1041 ;;Total ram usage:        4 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    1
  1044 ;; This function calls:
  1045 ;;		_Lcd_Port
  1046 ;; This function is called by:
  1047 ;;		_main
  1048 ;;		_Lcd_Write_String
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           
  1053                           ;psect for function _Lcd_Write_Char
  1054  05E4                     _Lcd_Write_Char:
  1055                           
  1056                           ;incstack = 0
  1057                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1058                           ;Lcd_Write_Char@a stored from wreg
  1059  05E4  00F4               	movwf	Lcd_Write_Char@a
  1060  05E5                     l896:
  1061                           
  1062                           ;LCD.c: 105:    char temp,y;;LCD.c: 106:    temp = a&0x0F;
  1063  05E5  0874               	movf	Lcd_Write_Char@a,w
  1064  05E6  390F               	andlw	15
  1065  05E7  00F1               	movwf	??_Lcd_Write_Char
  1066  05E8  0871               	movf	??_Lcd_Write_Char,w
  1067  05E9  00F2               	movwf	Lcd_Write_Char@temp
  1068                           
  1069                           ;LCD.c: 107:    y = a&0xF0;
  1070  05EA  0874               	movf	Lcd_Write_Char@a,w
  1071  05EB  39F0               	andlw	240
  1072  05EC  00F1               	movwf	??_Lcd_Write_Char
  1073  05ED  0871               	movf	??_Lcd_Write_Char,w
  1074  05EE  00F3               	movwf	Lcd_Write_Char@y
  1075  05EF                     l898:
  1076                           
  1077                           ;LCD.c: 108:    PORTEbits.RE0 = 1;
  1078  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  1079  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  1080  05F1  1409               	bsf	9,0	;volatile
  1081  05F2                     l900:
  1082                           
  1083                           ;LCD.c: 109:    Lcd_Port(y>>4);
  1084  05F2  0873               	movf	Lcd_Write_Char@y,w
  1085  05F3  00F1               	movwf	??_Lcd_Write_Char
  1086  05F4  3004               	movlw	4
  1087  05F5                     u255:
  1088  05F5  1003               	clrc
  1089  05F6  0CF1               	rrf	??_Lcd_Write_Char,f
  1090  05F7  3EFF               	addlw	-1
  1091  05F8  1D03               	skipz
  1092  05F9  2DF5               	goto	u255
  1093  05FA  0871               	movf	??_Lcd_Write_Char,w
  1094  05FB  120A  118A  261D  120A  118A  	fcall	_Lcd_Port
  1095  0600                     l902:
  1096                           
  1097                           ;LCD.c: 110:    RE1 = 1;
  1098  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0602  1489               	bsf	9,1	;volatile
  1101  0603                     l904:
  1102                           
  1103                           ;LCD.c: 111:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1104  0603  301A               	movlw	26
  1105  0604  00F1               	movwf	??_Lcd_Write_Char
  1106  0605                     u387:
  1107  0605  0BF1               	decfsz	??_Lcd_Write_Char,f
  1108  0606  2E05               	goto	u387
  1109  0607  0000               	nop
  1110  0608                     l906:
  1111                           
  1112                           ;LCD.c: 112:    RE1 = 0;
  1113  0608  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0609  1303               	bcf	3,6	;RP1=0, select bank0
  1115  060A  1089               	bcf	9,1	;volatile
  1116  060B                     l908:
  1117                           
  1118                           ;LCD.c: 113:    Lcd_Port(temp);
  1119  060B  0872               	movf	Lcd_Write_Char@temp,w
  1120  060C  120A  118A  261D  120A  118A  	fcall	_Lcd_Port
  1121  0611                     l910:
  1122                           
  1123                           ;LCD.c: 114:    RE1 = 1;
  1124  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0613  1489               	bsf	9,1	;volatile
  1127  0614                     l912:
  1128                           
  1129                           ;LCD.c: 115:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1130  0614  301A               	movlw	26
  1131  0615  00F1               	movwf	??_Lcd_Write_Char
  1132  0616                     u397:
  1133  0616  0BF1               	decfsz	??_Lcd_Write_Char,f
  1134  0617  2E16               	goto	u397
  1135  0618  0000               	nop
  1136  0619                     l914:
  1137                           
  1138                           ;LCD.c: 116:    RE1 = 0;
  1139  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1140  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1141  061B  1089               	bcf	9,1	;volatile
  1142  061C                     l112:
  1143  061C  0008               	return
  1144  061D                     __end_of_Lcd_Write_Char:
  1145                           
  1146                           	psect	text4
  1147  057B                     __ptext4:	
  1148 ;; *************** function _Lcd_Shift_Right *****************
  1149 ;; Defined at:
  1150 ;;		line 125 in file "LCD.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0, pclath, cstack
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    2
  1171 ;; This function calls:
  1172 ;;		_Lcd_Cmd
  1173 ;; This function is called by:
  1174 ;;		_main
  1175 ;; This function uses a non-reentrant model
  1176 ;;
  1177                           
  1178                           
  1179                           ;psect for function _Lcd_Shift_Right
  1180  057B                     _Lcd_Shift_Right:
  1181  057B                     l970:	
  1182                           ;incstack = 0
  1183                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1184                           
  1185                           
  1186                           ;LCD.c: 126:  Lcd_Cmd(0x01);
  1187  057B  3001               	movlw	1
  1188  057C  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1189                           
  1190                           ;LCD.c: 127:  Lcd_Cmd(0x0C);
  1191  0581  300C               	movlw	12
  1192  0582  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1193  0587                     l121:
  1194  0587  0008               	return
  1195  0588                     __end_of_Lcd_Shift_Right:
  1196                           
  1197                           	psect	text5
  1198  056E                     __ptext5:	
  1199 ;; *************** function _Lcd_Shift_Left *****************
  1200 ;; Defined at:
  1201 ;;		line 130 in file "LCD.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0, pclath, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0
  1217 ;;      Temps:          0       0       0       0       0
  1218 ;;      Totals:         0       0       0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    2
  1222 ;; This function calls:
  1223 ;;		_Lcd_Cmd
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _Lcd_Shift_Left
  1231  056E                     _Lcd_Shift_Left:
  1232  056E                     l968:	
  1233                           ;incstack = 0
  1234                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1235                           
  1236                           
  1237                           ;LCD.c: 131:  Lcd_Cmd(0x01);
  1238  056E  3001               	movlw	1
  1239  056F  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1240                           
  1241                           ;LCD.c: 132:  Lcd_Cmd(0x08);
  1242  0574  3008               	movlw	8
  1243  0575  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1244  057A                     l124:
  1245  057A  0008               	return
  1246  057B                     __end_of_Lcd_Shift_Left:
  1247                           
  1248                           	psect	text6
  1249  065B                     __ptext6:	
  1250 ;; *************** function _Lcd_Set_Cursor *****************
  1251 ;; Defined at:
  1252 ;;		line 68 in file "LCD.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  a               1    wreg     unsigned char 
  1255 ;;  b               1    4[COMMON] unsigned char 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  a               1    7[COMMON] unsigned char 
  1258 ;;  temp            1   10[COMMON] unsigned char 
  1259 ;;  y               1    9[COMMON] unsigned char 
  1260 ;;  z               1    8[COMMON] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         1       0       0       0       0
  1271 ;;      Locals:         4       0       0       0       0
  1272 ;;      Temps:          2       0       0       0       0
  1273 ;;      Totals:         7       0       0       0       0
  1274 ;;Total ram usage:        7 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    2
  1277 ;; This function calls:
  1278 ;;		_Lcd_Cmd
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _Lcd_Set_Cursor
  1286  065B                     _Lcd_Set_Cursor:
  1287                           
  1288                           ;incstack = 0
  1289                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1290                           ;Lcd_Set_Cursor@a stored from wreg
  1291  065B  00F7               	movwf	Lcd_Set_Cursor@a
  1292  065C                     l940:
  1293                           
  1294                           ;LCD.c: 69:  char temp,z,y;;LCD.c: 70:  if(a == 1){
  1295  065C  0377               	decf	Lcd_Set_Cursor@a,w
  1296  065D  1D03               	btfss	3,2
  1297  065E  2E60               	goto	u261
  1298  065F  2E61               	goto	u260
  1299  0660                     u261:
  1300  0660  2E84               	goto	l950
  1301  0661                     u260:
  1302  0661                     l942:
  1303                           
  1304                           ;LCD.c: 71:    temp = 0x80 + b - 1;
  1305  0661  0874               	movf	Lcd_Set_Cursor@b,w
  1306  0662  3E7F               	addlw	127
  1307  0663  00F5               	movwf	??_Lcd_Set_Cursor
  1308  0664  0875               	movf	??_Lcd_Set_Cursor,w
  1309  0665  00FA               	movwf	Lcd_Set_Cursor@temp
  1310                           
  1311                           ;LCD.c: 72:   z = temp>>4;
  1312  0666  087A               	movf	Lcd_Set_Cursor@temp,w
  1313  0667  00F5               	movwf	??_Lcd_Set_Cursor
  1314  0668  3004               	movlw	4
  1315  0669                     u275:
  1316  0669  1003               	clrc
  1317  066A  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1318  066B  3EFF               	addlw	-1
  1319  066C  1D03               	skipz
  1320  066D  2E69               	goto	u275
  1321  066E  0875               	movf	??_Lcd_Set_Cursor,w
  1322  066F  00F6               	movwf	??_Lcd_Set_Cursor+1
  1323  0670  0876               	movf	??_Lcd_Set_Cursor+1,w
  1324  0671  00F8               	movwf	Lcd_Set_Cursor@z
  1325  0672                     l944:
  1326                           
  1327                           ;LCD.c: 73:   y = temp & 0x0F;
  1328  0672  087A               	movf	Lcd_Set_Cursor@temp,w
  1329  0673  390F               	andlw	15
  1330  0674  00F5               	movwf	??_Lcd_Set_Cursor
  1331  0675  0875               	movf	??_Lcd_Set_Cursor,w
  1332  0676  00F9               	movwf	Lcd_Set_Cursor@y
  1333  0677                     l946:
  1334                           
  1335                           ;LCD.c: 74:   Lcd_Cmd(z);
  1336  0677  0878               	movf	Lcd_Set_Cursor@z,w
  1337  0678  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1338  067D                     l948:
  1339                           
  1340                           ;LCD.c: 75:   Lcd_Cmd(y);
  1341  067D  0879               	movf	Lcd_Set_Cursor@y,w
  1342  067E  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1343                           
  1344                           ;LCD.c: 76:  }
  1345  0683  2EAC               	goto	l106
  1346  0684                     l950:
  1347  0684  3002               	movlw	2
  1348  0685  0677               	xorwf	Lcd_Set_Cursor@a,w
  1349  0686  1D03               	btfss	3,2
  1350  0687  2E89               	goto	u281
  1351  0688  2E8A               	goto	u280
  1352  0689                     u281:
  1353  0689  2EAC               	goto	l106
  1354  068A                     u280:
  1355  068A                     l952:
  1356                           
  1357                           ;LCD.c: 78:   temp = 0xC0 + b - 1;
  1358  068A  0874               	movf	Lcd_Set_Cursor@b,w
  1359  068B  3EBF               	addlw	191
  1360  068C  00F5               	movwf	??_Lcd_Set_Cursor
  1361  068D  0875               	movf	??_Lcd_Set_Cursor,w
  1362  068E  00FA               	movwf	Lcd_Set_Cursor@temp
  1363                           
  1364                           ;LCD.c: 79:   z = temp>>4;
  1365  068F  087A               	movf	Lcd_Set_Cursor@temp,w
  1366  0690  00F5               	movwf	??_Lcd_Set_Cursor
  1367  0691  3004               	movlw	4
  1368  0692                     u295:
  1369  0692  1003               	clrc
  1370  0693  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1371  0694  3EFF               	addlw	-1
  1372  0695  1D03               	skipz
  1373  0696  2E92               	goto	u295
  1374  0697  0875               	movf	??_Lcd_Set_Cursor,w
  1375  0698  00F6               	movwf	??_Lcd_Set_Cursor+1
  1376  0699  0876               	movf	??_Lcd_Set_Cursor+1,w
  1377  069A  00F8               	movwf	Lcd_Set_Cursor@z
  1378  069B                     l954:
  1379                           
  1380                           ;LCD.c: 80:   y = temp & 0x0F;
  1381  069B  087A               	movf	Lcd_Set_Cursor@temp,w
  1382  069C  390F               	andlw	15
  1383  069D  00F5               	movwf	??_Lcd_Set_Cursor
  1384  069E  0875               	movf	??_Lcd_Set_Cursor,w
  1385  069F  00F9               	movwf	Lcd_Set_Cursor@y
  1386  06A0                     l956:
  1387                           
  1388                           ;LCD.c: 81:   Lcd_Cmd(z);
  1389  06A0  0878               	movf	Lcd_Set_Cursor@z,w
  1390  06A1  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1391  06A6                     l958:
  1392                           
  1393                           ;LCD.c: 82:   Lcd_Cmd(y);
  1394  06A6  0879               	movf	Lcd_Set_Cursor@y,w
  1395  06A7  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1396  06AC                     l106:
  1397  06AC  0008               	return
  1398  06AD                     __end_of_Lcd_Set_Cursor:
  1399                           
  1400                           	psect	text7
  1401  06AD                     __ptext7:	
  1402 ;; *************** function _Lcd_Init *****************
  1403 ;; Defined at:
  1404 ;;		line 86 in file "LCD.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0
  1420 ;;      Temps:          2       0       0       0       0
  1421 ;;      Totals:         2       0       0       0       0
  1422 ;;Total ram usage:        2 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    2
  1425 ;; This function calls:
  1426 ;;		_Lcd_Cmd
  1427 ;;		_Lcd_Port
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           
  1434                           ;psect for function _Lcd_Init
  1435  06AD                     _Lcd_Init:
  1436  06AD                     l928:	
  1437                           ;incstack = 0
  1438                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1439                           
  1440                           
  1441                           ;LCD.c: 87:   Lcd_Port(0x00);
  1442  06AD  3000               	movlw	0
  1443  06AE  120A  118A  261D  120A  118A  	fcall	_Lcd_Port
  1444  06B3                     l930:
  1445                           
  1446                           ;LCD.c: 88:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1447  06B3  3034               	movlw	52
  1448  06B4  00F5               	movwf	??_Lcd_Init+1
  1449  06B5  30F1               	movlw	241
  1450  06B6  00F4               	movwf	??_Lcd_Init
  1451  06B7                     u407:
  1452  06B7  0BF4               	decfsz	??_Lcd_Init,f
  1453  06B8  2EB7               	goto	u407
  1454  06B9  0BF5               	decfsz	??_Lcd_Init+1,f
  1455  06BA  2EB7               	goto	u407
  1456  06BB  2EBC               	nop2
  1457  06BC                     l932:
  1458                           
  1459                           ;LCD.c: 89:   Lcd_Cmd(0x03);
  1460  06BC  3003               	movlw	3
  1461  06BD  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1462                           
  1463                           ;LCD.c: 90:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1464  06C2  300D               	movlw	13
  1465  06C3  00F5               	movwf	??_Lcd_Init+1
  1466  06C4  30FB               	movlw	251
  1467  06C5  00F4               	movwf	??_Lcd_Init
  1468  06C6                     u417:
  1469  06C6  0BF4               	decfsz	??_Lcd_Init,f
  1470  06C7  2EC6               	goto	u417
  1471  06C8  0BF5               	decfsz	??_Lcd_Init+1,f
  1472  06C9  2EC6               	goto	u417
  1473  06CA  2ECB               	nop2
  1474  06CB                     l934:
  1475                           
  1476                           ;LCD.c: 91:   Lcd_Cmd(0x03);
  1477  06CB  3003               	movlw	3
  1478  06CC  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1479  06D1                     l936:
  1480                           
  1481                           ;LCD.c: 92:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1482  06D1  301D               	movlw	29
  1483  06D2  00F5               	movwf	??_Lcd_Init+1
  1484  06D3  3091               	movlw	145
  1485  06D4  00F4               	movwf	??_Lcd_Init
  1486  06D5                     u427:
  1487  06D5  0BF4               	decfsz	??_Lcd_Init,f
  1488  06D6  2ED5               	goto	u427
  1489  06D7  0BF5               	decfsz	??_Lcd_Init+1,f
  1490  06D8  2ED5               	goto	u427
  1491                           
  1492                           ;LCD.c: 93:   Lcd_Cmd(0x03);
  1493  06D9  3003               	movlw	3
  1494  06DA  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1495                           
  1496                           ;LCD.c: 95:   Lcd_Cmd(0x02);
  1497  06DF  3002               	movlw	2
  1498  06E0  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1499                           
  1500                           ;LCD.c: 96:   Lcd_Cmd(0x02);
  1501  06E5  3002               	movlw	2
  1502  06E6  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1503                           
  1504                           ;LCD.c: 97:   Lcd_Cmd(0x08);
  1505  06EB  3008               	movlw	8
  1506  06EC  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1507                           
  1508                           ;LCD.c: 98:   Lcd_Cmd(0x00);
  1509  06F1  3000               	movlw	0
  1510  06F2  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1511                           
  1512                           ;LCD.c: 99:   Lcd_Cmd(0x0C);
  1513  06F7  300C               	movlw	12
  1514  06F8  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1515                           
  1516                           ;LCD.c: 100:   Lcd_Cmd(0x00);
  1517  06FD  3000               	movlw	0
  1518  06FE  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1519                           
  1520                           ;LCD.c: 101:   Lcd_Cmd(0x06);
  1521  0703  3006               	movlw	6
  1522  0704  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1523  0709                     l109:
  1524  0709  0008               	return
  1525  070A                     __end_of_Lcd_Init:
  1526                           
  1527                           	psect	text8
  1528  0561                     __ptext8:	
  1529 ;; *************** function _Lcd_Clear *****************
  1530 ;; Defined at:
  1531 ;;		line 63 in file "LCD.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0
  1548 ;;      Totals:         0       0       0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    2
  1552 ;; This function calls:
  1553 ;;		_Lcd_Cmd
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _Lcd_Clear
  1561  0561                     _Lcd_Clear:
  1562  0561                     l938:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1565                           
  1566                           
  1567                           ;LCD.c: 64:  Lcd_Cmd(0);
  1568  0561  3000               	movlw	0
  1569  0562  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1570                           
  1571                           ;LCD.c: 65:  Lcd_Cmd(1);
  1572  0567  3001               	movlw	1
  1573  0568  120A  118A  2588  120A  118A  	fcall	_Lcd_Cmd
  1574  056D                     l100:
  1575  056D  0008               	return
  1576  056E                     __end_of_Lcd_Clear:
  1577                           
  1578                           	psect	text9
  1579  0588                     __ptext9:	
  1580 ;; *************** function _Lcd_Cmd *****************
  1581 ;; Defined at:
  1582 ;;		line 55 in file "LCD.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  a               1    wreg     unsigned char 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  a               1    3[COMMON] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1596 ;;      Params:         0       0       0       0       0
  1597 ;;      Locals:         1       0       0       0       0
  1598 ;;      Temps:          2       0       0       0       0
  1599 ;;      Totals:         3       0       0       0       0
  1600 ;;Total ram usage:        3 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    1
  1603 ;; This function calls:
  1604 ;;		_Lcd_Port
  1605 ;; This function is called by:
  1606 ;;		_Lcd_Clear
  1607 ;;		_Lcd_Set_Cursor
  1608 ;;		_Lcd_Init
  1609 ;;		_Lcd_Shift_Right
  1610 ;;		_Lcd_Shift_Left
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _Lcd_Cmd
  1616  0588                     _Lcd_Cmd:
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1620                           ;Lcd_Cmd@a stored from wreg
  1621  0588  00F3               	movwf	Lcd_Cmd@a
  1622  0589                     l916:
  1623                           
  1624                           ;LCD.c: 56:  PORTEbits.RE0 = 0;
  1625  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1626  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1627  058B  1009               	bcf	9,0	;volatile
  1628  058C                     l918:
  1629                           
  1630                           ;LCD.c: 57:  Lcd_Port(a);
  1631  058C  0873               	movf	Lcd_Cmd@a,w
  1632  058D  120A  118A  261D  120A  118A  	fcall	_Lcd_Port
  1633  0592                     l920:
  1634                           
  1635                           ;LCD.c: 58:  RE1 = 1;
  1636  0592  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0593  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0594  1489               	bsf	9,1	;volatile
  1639  0595                     l922:
  1640                           
  1641                           ;LCD.c: 59:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1642  0595  300B               	movlw	11
  1643  0596  00F2               	movwf	??_Lcd_Cmd+1
  1644  0597  3062               	movlw	98
  1645  0598  00F1               	movwf	??_Lcd_Cmd
  1646  0599                     u437:
  1647  0599  0BF1               	decfsz	??_Lcd_Cmd,f
  1648  059A  2D99               	goto	u437
  1649  059B  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1650  059C  2D99               	goto	u437
  1651  059D  0000               	nop
  1652  059E                     l924:
  1653                           
  1654                           ;LCD.c: 60:         RE1 = 0;
  1655  059E  1283               	bcf	3,5	;RP0=0, select bank0
  1656  059F  1303               	bcf	3,6	;RP1=0, select bank0
  1657  05A0  1089               	bcf	9,1	;volatile
  1658  05A1                     l97:
  1659  05A1  0008               	return
  1660  05A2                     __end_of_Lcd_Cmd:
  1661                           
  1662                           	psect	text10
  1663  061D                     __ptext10:	
  1664 ;; *************** function _Lcd_Port *****************
  1665 ;; Defined at:
  1666 ;;		line 13 in file "LCD.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  a               1    wreg     unsigned char 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  a               1    0[COMMON] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         0       0       0       0       0
  1681 ;;      Locals:         1       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0
  1683 ;;      Totals:         1       0       0       0       0
  1684 ;;Total ram usage:        1 bytes
  1685 ;; Hardware stack levels used:    1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_Lcd_Cmd
  1690 ;;		_Lcd_Init
  1691 ;;		_Lcd_Write_Char
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           
  1696                           ;psect for function _Lcd_Port
  1697  061D                     _Lcd_Port:
  1698                           
  1699                           ;incstack = 0
  1700                           ; Regs used in _Lcd_Port: [wreg]
  1701                           ;Lcd_Port@a stored from wreg
  1702  061D  00F0               	movwf	Lcd_Port@a
  1703  061E                     l878:
  1704                           
  1705                           ;LCD.c: 14:  if(a & 1)
  1706  061E  1C70               	btfss	Lcd_Port@a,0
  1707  061F  2E21               	goto	u171
  1708  0620  2E22               	goto	u170
  1709  0621                     u171:
  1710  0621  2E26               	goto	l78
  1711  0622                     u170:
  1712  0622                     l880:
  1713                           
  1714                           ;LCD.c: 15:   RD0 = 1;
  1715  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0624  1408               	bsf	8,0	;volatile
  1718  0625  2E29               	goto	l79
  1719  0626                     l78:	
  1720                           ;LCD.c: 16:  else
  1721                           
  1722                           
  1723                           ;LCD.c: 17:   RD0 = 0;
  1724  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0628  1008               	bcf	8,0	;volatile
  1727  0629                     l79:
  1728                           
  1729                           ;LCD.c: 19:     if(a & 2)
  1730  0629  1CF0               	btfss	Lcd_Port@a,1
  1731  062A  2E2C               	goto	u181
  1732  062B  2E2D               	goto	u180
  1733  062C                     u181:
  1734  062C  2E2F               	goto	l80
  1735  062D                     u180:
  1736  062D                     l882:
  1737                           
  1738                           ;LCD.c: 20:   RD1 = 1;
  1739  062D  1488               	bsf	8,1	;volatile
  1740  062E  2E30               	goto	l81
  1741  062F                     l80:	
  1742                           ;LCD.c: 21:  else
  1743                           
  1744                           
  1745                           ;LCD.c: 22:   RD1 = 0;
  1746  062F  1088               	bcf	8,1	;volatile
  1747  0630                     l81:
  1748                           
  1749                           ;LCD.c: 24:     if(a & 4)
  1750  0630  1D70               	btfss	Lcd_Port@a,2
  1751  0631  2E33               	goto	u191
  1752  0632  2E34               	goto	u190
  1753  0633                     u191:
  1754  0633  2E36               	goto	l82
  1755  0634                     u190:
  1756  0634                     l884:
  1757                           
  1758                           ;LCD.c: 25:   RD2 = 1;
  1759  0634  1508               	bsf	8,2	;volatile
  1760  0635  2E37               	goto	l83
  1761  0636                     l82:	
  1762                           ;LCD.c: 26:  else
  1763                           
  1764                           
  1765                           ;LCD.c: 27:   RD2 = 0;
  1766  0636  1108               	bcf	8,2	;volatile
  1767  0637                     l83:
  1768                           
  1769                           ;LCD.c: 29:     if(a & 8)
  1770  0637  1DF0               	btfss	Lcd_Port@a,3
  1771  0638  2E3A               	goto	u201
  1772  0639  2E3B               	goto	u200
  1773  063A                     u201:
  1774  063A  2E3D               	goto	l84
  1775  063B                     u200:
  1776  063B                     l886:
  1777                           
  1778                           ;LCD.c: 30:   RD3 = 1;
  1779  063B  1588               	bsf	8,3	;volatile
  1780  063C  2E3E               	goto	l85
  1781  063D                     l84:	
  1782                           ;LCD.c: 31:  else
  1783                           
  1784                           
  1785                           ;LCD.c: 32:   RD3 = 0;
  1786  063D  1188               	bcf	8,3	;volatile
  1787  063E                     l85:
  1788                           
  1789                           ;LCD.c: 34:     if(a & 16)
  1790  063E  1E70               	btfss	Lcd_Port@a,4
  1791  063F  2E41               	goto	u211
  1792  0640  2E42               	goto	u210
  1793  0641                     u211:
  1794  0641  2E44               	goto	l86
  1795  0642                     u210:
  1796  0642                     l888:
  1797                           
  1798                           ;LCD.c: 35:   RD4 = 1;
  1799  0642  1608               	bsf	8,4	;volatile
  1800  0643  2E45               	goto	l87
  1801  0644                     l86:	
  1802                           ;LCD.c: 36:  else
  1803                           
  1804                           
  1805                           ;LCD.c: 37:   RD4 = 0;
  1806  0644  1208               	bcf	8,4	;volatile
  1807  0645                     l87:
  1808                           
  1809                           ;LCD.c: 39:  if(a & 32)
  1810  0645  1EF0               	btfss	Lcd_Port@a,5
  1811  0646  2E48               	goto	u221
  1812  0647  2E49               	goto	u220
  1813  0648                     u221:
  1814  0648  2E4B               	goto	l88
  1815  0649                     u220:
  1816  0649                     l890:
  1817                           
  1818                           ;LCD.c: 40:   RD5 = 1;
  1819  0649  1688               	bsf	8,5	;volatile
  1820  064A  2E4C               	goto	l89
  1821  064B                     l88:	
  1822                           ;LCD.c: 41:  else
  1823                           
  1824                           
  1825                           ;LCD.c: 42:   RD5 = 0;
  1826  064B  1288               	bcf	8,5	;volatile
  1827  064C                     l89:
  1828                           
  1829                           ;LCD.c: 44:  if(a & 64)
  1830  064C  1F70               	btfss	Lcd_Port@a,6
  1831  064D  2E4F               	goto	u231
  1832  064E  2E50               	goto	u230
  1833  064F                     u231:
  1834  064F  2E52               	goto	l90
  1835  0650                     u230:
  1836  0650                     l892:
  1837                           
  1838                           ;LCD.c: 45:   RD6 = 1;
  1839  0650  1708               	bsf	8,6	;volatile
  1840  0651  2E53               	goto	l91
  1841  0652                     l90:	
  1842                           ;LCD.c: 46:  else
  1843                           
  1844                           
  1845                           ;LCD.c: 47:   RD6 = 0;
  1846  0652  1308               	bcf	8,6	;volatile
  1847  0653                     l91:
  1848                           
  1849                           ;LCD.c: 49:  if(a & 128)
  1850  0653  1FF0               	btfss	Lcd_Port@a,7
  1851  0654  2E56               	goto	u241
  1852  0655  2E57               	goto	u240
  1853  0656                     u241:
  1854  0656  2E59               	goto	l92
  1855  0657                     u240:
  1856  0657                     l894:
  1857                           
  1858                           ;LCD.c: 50:   RD7 = 1;
  1859  0657  1788               	bsf	8,7	;volatile
  1860  0658  2E5A               	goto	l94
  1861  0659                     l92:	
  1862                           ;LCD.c: 51:  else
  1863                           
  1864                           
  1865                           ;LCD.c: 52:   RD7 = 0;
  1866  0659  1388               	bcf	8,7	;volatile
  1867  065A                     l94:
  1868  065A  0008               	return
  1869  065B                     __end_of_Lcd_Port:
  1870  007E                     btemp	set	126	;btemp
  1871  007E                     wtemp0	set	126
  1872                           
  1873                           	psect	config
  1874                           
  1875                           ;Config register CONFIG1 @ 0x2007
  1876                           ;	Oscillator Selection bits
  1877                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1878                           ;	Watchdog Timer Enable bit
  1879                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1880                           ;	Power-up Timer Enable bit
  1881                           ;	PWRTE = OFF, PWRT disabled
  1882                           ;	RE3/MCLR pin function select bit
  1883                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1884                           ;	Code Protection bit
  1885                           ;	CP = OFF, Program memory code protection is disabled
  1886                           ;	Data Code Protection bit
  1887                           ;	CPD = OFF, Data memory code protection is disabled
  1888                           ;	Brown Out Reset Selection bits
  1889                           ;	BOREN = OFF, BOR disabled
  1890                           ;	Internal External Switchover bit
  1891                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1892                           ;	Fail-Safe Clock Monitor Enabled bit
  1893                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1894                           ;	Low Voltage Programming Enable bit
  1895                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1896                           ;	In-Circuit Debugger Mode bit
  1897                           ;	DEBUG = 0x1, unprogrammed default
  1898  2007                     	org	8199
  1899  2007  20D6               	dw	8406
  1900                           
  1901                           ;Config register CONFIG2 @ 0x2008
  1902                           ;	Brown-out Reset Selection bit
  1903                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1904                           ;	Flash Program Memory Self Write Enable bits
  1905                           ;	WRT = OFF, Write protection off
  1906  2008                     	org	8200
  1907  2008  3FFF               	dw	16383

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2771
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     521
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     266
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     924
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 22:30:53 2021

                        pc 0002                         l53 05BE                         l80 062F  
                       l81 0630                         l90 0652                         l82 0636  
                       l91 0653                         l83 0637                         l92 0659  
                       l84 063D                         l85 063E                         l94 065A  
                       l86 0644                         l78 0626                         l87 0645  
                       l79 0629                         l88 064B                         l89 064C  
                       l97 05A1                         fsr 0004                        l100 056D  
                      l112 061C                        l121 0587                        l106 06AC  
                      l124 057A                        l109 0709                        l118 05E3  
                      l900 05F2                        l910 0611                        l902 0600  
                      l920 0592                        l912 0614                        l904 0603  
                      l922 0595                        l930 06B3                        l914 0619  
                      l906 0608                        l924 059E                        l916 0589  
                      l932 06BC                        l940 065C                        l908 060B  
                      l918 058C                        l934 06CB                        l942 0661  
                      l950 0684                        l926 05A2                        l880 0622  
                      l936 06D1                        l928 06AD                        l952 068A  
                      l944 0672                        l960 05C0                        l890 0649  
                      l882 062D                        l938 0561                        l954 069B  
                      l946 0677                        l970 057B                        l962 05C3  
                      l892 0650                        l884 0634                        l956 06A0  
                      l948 067D                        l964 05D0                        l980 071C  
                      l972 070A                        l894 0657                        l886 063B  
                      l878 061E                        l958 06A6                        l966 05D6  
                      l990 0745                        l982 0724                        l974 070F  
                      l888 0642                        l968 056E                        l896 05E5  
                      l992 074A                        l984 072A                        l976 0712  
                      l898 05EF                        l994 0752                        l986 0732  
                      l978 0717                        l996 0758                        l988 0738  
                      l998 0760                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RE1 0049  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u200 063B                        u201 063A  
                      u210 0642                        u211 0641                        u220 0649  
                      u300 05E3                        u221 0648                        u301 05E2  
                      u230 0650                        u310 07AD                        u231 064F  
                      u311 07AC                        u240 0657                        u320 07D2  
                      u241 0656                        u321 07D1                        u170 0622  
                      u171 0621                        u180 062D                        u260 0661  
                      u181 062C                        u261 0660                        u190 0634  
                      u191 0633                        u407 06B7                        u255 05F5  
                      u280 068A                        u417 06C6                        u281 0689  
                      u337 073E                        u427 06D5                        u275 0669  
                      u347 076C                        u437 0599                        u357 0790  
                      u295 0692                        u367 07B5                        u377 07F1  
                      u387 0605                        u397 0616                        fsr0 0004  
                     l1000 0766                       l1002 0773                       l1020 07A4  
                     l1004 0778                       l1030 07BC                       l1022 07AD  
                     l1014 078A                       l1006 0780                       l1032 07C1  
                     l1016 0797                       l1008 0786                       l1034 07C9  
                     l1018 079C                       l1036 07D2                       l1028 07AF  
                     l1038 07EB                       STR_1 001D                       STR_2 0046  
                     STR_3 002D                       STR_4 003A                       STR_5 0009  
        ?_Lcd_Write_String 0070                       _main 070A                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 05A2  
                    ?_main 0070                      _ANSEL 0188                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0052                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089    __size_of_Lcd_Shift_Left 000D  
                    _setup 05A2                      main@a 0020                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 070A  
         __end_of_Lcd_Port 065B            __initialization 07FC               __end_of_main 07FC  
                   ??_main 007B         __size_of_Lcd_Clear 000D                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039  
 __size_of_Lcd_Shift_Right 000D            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 056E             __pcstackCOMMON 0070              __end_of_setup 05BF  
           _Lcd_Set_Cursor 065B             _Lcd_Shift_Left 056E                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0070                 __pmaintext 070A  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 06AD     __end_of_Lcd_Shift_Left 057B  
        ??_Lcd_Shift_Right 0074                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 05E4                    _Lcd_Cmd 0588  
          ?_Lcd_Set_Cursor 0074                    __ptext1 05A2                    __ptext2 05BF  
                  __ptext3 05E4                    __ptext4 057B                    __ptext5 056E  
                  __ptext6 065B                    __ptext7 06AD                    __ptext8 0561  
                  __ptext9 0588            ?_Lcd_Shift_Left 0070     __end_of_Lcd_Write_Char 061D  
     end_of_initialization 07FC                  Lcd_Port@a 0070                  _PORTEbits 0009  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _Lcd_Clear 0561           _Lcd_Write_String 05BF        start_initialization 07FC  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 003E                 ?_Lcd_Clear 0070  
          _Lcd_Shift_Right 057B            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0075           ??_Lcd_Shift_Left 0074                  __pstrings 0003  
           __size_of_setup 001D    __end_of_Lcd_Shift_Right 0588                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0008           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 06AD                   _Lcd_Port 061D   __end_of_Lcd_Write_String 05E4  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009                   __ptext10 061D  
            __size_of_main 00F2           ?_Lcd_Shift_Right 0070         Lcd_Write_Char@temp 0072  
                stringcode 0003         Lcd_Set_Cursor@temp 007A                   stringdir 0003  
                 stringtab 0003  
