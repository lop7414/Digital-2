

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 13:51:09 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  000E                     	;# 
   401  000E                     	;# 
   402  000F                     	;# 
   403  0010                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  0088                     	;# 
   426  0089                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  008F                     	;# 
   431  0090                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0095                     	;# 
   439  0096                     	;# 
   440  0097                     	;# 
   441  0098                     	;# 
   442  0099                     	;# 
   443  009A                     	;# 
   444  009B                     	;# 
   445  009C                     	;# 
   446  009D                     	;# 
   447  009E                     	;# 
   448  009F                     	;# 
   449  0105                     	;# 
   450  0107                     	;# 
   451  0108                     	;# 
   452  0109                     	;# 
   453  010C                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  010E                     	;# 
   457  010F                     	;# 
   458  0185                     	;# 
   459  0187                     	;# 
   460  0188                     	;# 
   461  0189                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  0019                     _TXREG	set	25
   465  000B                     _INTCONbits	set	11
   466  0018                     _RCSTAbits	set	24
   467  001E                     _ADRESH	set	30
   468  000C                     _PIR1bits	set	12
   469  001F                     _ADCON0bits	set	31
   470  0009                     _PORTE	set	9
   471  0008                     _PORTD	set	8
   472  0007                     _PORTC	set	7
   473  0006                     _PORTB	set	6
   474  0005                     _PORTA	set	5
   475  001A                     _RCREG	set	26
   476  004A                     _RE2	set	74
   477  0049                     _RE1	set	73
   478  0048                     _RE0	set	72
   479  0065                     _RCIF	set	101
   480  008C                     _PIE1bits	set	140
   481  0098                     _TXSTAbits	set	152
   482  0099                     _SPBRG	set	153
   483  009F                     _ADCON1bits	set	159
   484  008F                     _OSCCONbits	set	143
   485  0089                     _TRISE	set	137
   486  0088                     _TRISD	set	136
   487  0086                     _TRISB	set	134
   488  0085                     _TRISA	set	133
   489  04C1                     _TRMT	set	1217
   490  0189                     _ANSELH	set	393
   491  0188                     _ANSEL	set	392
   492                           
   493                           	psect	strings
   494  0738                     __pstrings:
   495  0738                     stringtab:
   496  0738                     __stringtab:
   497                           
   498                           ;	String table - string pointers are 1 byte each
   499  0738  1BFF               	btfsc	btemp+1,7
   500  0739  2F42               	ljmp	stringcode
   501  073A  1383               	bcf	3,7
   502  073B  187F               	btfsc	btemp+1,0
   503  073C  1783               	bsf	3,7
   504  073D  0800               	movf	0,w
   505  073E  0A84               	incf	4,f
   506  073F  1903               	skipnz
   507  0740  0AFF               	incf	btemp+1,f
   508  0741  0008               	return
   509  0742                     stringcode:
   510  0742                     stringdir:
   511  0742  3007               	movlw	high stringdir
   512  0743  008A               	movwf	10
   513  0744  0804               	movf	4,w
   514  0745  0A84               	incf	4,f
   515  0746  0782               	addwf	2,f
   516  0747                     __stringbase:
   517  0747  3400               	retlw	0
   518  0748                     __end_of__stringtab:
   519  0748                     STR_1:
   520  0748  3453               	retlw	83	;'S'
   521  0749  3431               	retlw	49	;'1'
   522  074A  3420               	retlw	32	;' '
   523  074B  3420               	retlw	32	;' '
   524  074C  3420               	retlw	32	;' '
   525  074D  3420               	retlw	32	;' '
   526  074E  3453               	retlw	83	;'S'
   527  074F  3432               	retlw	50	;'2'
   528  0750  3420               	retlw	32	;' '
   529  0751  3420               	retlw	32	;' '
   530  0752  3420               	retlw	32	;' '
   531  0753  3420               	retlw	32	;' '
   532  0754  3453               	retlw	83	;'S'
   533  0755  3433               	retlw	51	;'3'
   534  0756  3420               	retlw	32	;' '
   535  0757  3420               	retlw	32	;' '
   536  0758  3400               	retlw	0
   537  0759                     STR_2:
   538  0759  342E               	retlw	46	;'.'
   539  075A  3400               	retlw	0
   540  0757                     
   541                           	psect	cinit
   542  0013                     start_initialization:	
   543                           ; #config settings
   544                           
   545  0013                     __initialization:
   546                           
   547                           ; Clear objects allocated to BANK0
   548  0013  1383               	bcf	3,7	;select IRP bank0
   549  0014  3020               	movlw	low __pbssBANK0
   550  0015  0084               	movwf	4
   551  0016  3044               	movlw	low (__pbssBANK0+36)
   552  0017  120A  158A  27D1  120A  118A  	fcall	clear_ram0
   553                           
   554                           ; Clear objects allocated to BANK1
   555  001C  30A0               	movlw	low __pbssBANK1
   556  001D  0084               	movwf	4
   557  001E  30C3               	movlw	low (__pbssBANK1+35)
   558  001F  120A  158A  27D1  120A  118A  	fcall	clear_ram0
   559  0024                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  0024                     __end_of__initialization:
   563  0024  0183               	clrf	3
   564  0025  120A  118A  2828   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssBANK0
   567  0020                     __pbssBANK0:
   568  0020                     _POT2C:
   569  0020                     	ds	2
   570  0022                     _POT2B:
   571  0022                     	ds	2
   572  0024                     _POT2A:
   573  0024                     	ds	2
   574  0026                     _V2:
   575  0026                     	ds	2
   576  0028                     _voltaje2:
   577  0028                     	ds	2
   578  002A                     _POT1C:
   579  002A                     	ds	2
   580  002C                     _POT1B:
   581  002C                     	ds	2
   582  002E                     _POT1A:
   583  002E                     	ds	2
   584  0030                     _V1:
   585  0030                     	ds	2
   586  0032                     _voltaje:
   587  0032                     	ds	2
   588  0034                     _Destination:
   589  0034                     	ds	2
   590  0036                     _O:
   591  0036                     	ds	2
   592  0038                     _Contador:
   593  0038                     	ds	1
   594  0039                     _adc:
   595  0039                     	ds	1
   596  003A                     _POT1SC:
   597  003A                     	ds	5
   598  003F                     _POT1SB:
   599  003F                     	ds	5
   600                           
   601                           	psect	bssBANK1
   602  00A0                     __pbssBANK1:
   603  00A0                     _COMPARE:
   604  00A0                     	ds	5
   605  00A5                     _PUNTO2:
   606  00A5                     	ds	5
   607  00AA                     _POT2SC:
   608  00AA                     	ds	5
   609  00AF                     _POT2SB:
   610  00AF                     	ds	5
   611  00B4                     _POT2SA:
   612  00B4                     	ds	5
   613  00B9                     _PUNTO1:
   614  00B9                     	ds	5
   615  00BE                     _POT1SA:
   616  00BE                     	ds	5
   617                           
   618                           	psect	clrtext
   619  0FD1                     clear_ram0:	
   620                           ;	Called with FSR containing the base address, and
   621                           ;	W with the last address+1
   622                           
   623  0FD1  0064               	clrwdt	;clear the watchdog before getting into this loop
   624  0FD2                     clrloop0:
   625  0FD2  0180               	clrf	0	;clear RAM location pointed to by FSR
   626  0FD3  0A84               	incf	4,f	;increment pointer
   627  0FD4  0604               	xorwf	4,w	;XOR with final address
   628  0FD5  1903               	btfsc	3,2	;have we reached the end yet?
   629  0FD6  3400               	retlw	0	;all done for this memory range, return
   630  0FD7  0604               	xorwf	4,w	;XOR again to restore value
   631  0FD8  2FD2               	goto	clrloop0	;do the next byte
   632                           
   633                           	psect	cstackBANK1
   634  00C3                     __pcstackBANK1:
   635  00C3                     ___awdiv@counter:
   636  00C3                     ___lwdiv@counter:	
   637                           ; 1 bytes @ 0x0
   638                           
   639                           
   640                           ; 1 bytes @ 0x0
   641  00C3                     	ds	1
   642  00C4                     ___awdiv@sign:
   643  00C4                     ___lwdiv@quotient:	
   644                           ; 1 bytes @ 0x1
   645                           
   646                           
   647                           ; 2 bytes @ 0x1
   648  00C4                     	ds	1
   649  00C5                     ___awdiv@quotient:
   650                           
   651                           ; 2 bytes @ 0x2
   652  00C5                     	ds	1
   653  00C6                     ?_utoa:
   654  00C6                     utoa@val:	
   655                           ; 1 bytes @ 0x3
   656                           
   657                           
   658                           ; 2 bytes @ 0x3
   659  00C6                     	ds	1
   660  00C7                     ?___awmod:
   661  00C7                     ___awmod@divisor:	
   662                           ; 2 bytes @ 0x4
   663                           
   664                           
   665                           ; 2 bytes @ 0x4
   666  00C7                     	ds	1
   667  00C8                     utoa@base:
   668                           
   669                           ; 2 bytes @ 0x5
   670  00C8                     	ds	1
   671  00C9                     ___awmod@dividend:
   672                           
   673                           ; 2 bytes @ 0x6
   674  00C9                     	ds	1
   675  00CA                     ??_utoa:
   676                           
   677                           ; 1 bytes @ 0x7
   678  00CA                     	ds	1
   679  00CB                     ___awmod@counter:
   680  00CB                     utoa@v:	
   681                           ; 1 bytes @ 0x8
   682                           
   683                           
   684                           ; 2 bytes @ 0x8
   685  00CB                     	ds	1
   686  00CC                     ___awmod@sign:
   687                           
   688                           ; 1 bytes @ 0x9
   689  00CC                     	ds	1
   690  00CD                     utoa@c:
   691                           
   692                           ; 1 bytes @ 0xA
   693  00CD                     	ds	1
   694  00CE                     utoa@buf:
   695                           
   696                           ; 1 bytes @ 0xB
   697  00CE                     	ds	1
   698  00CF                     ?_itoa:
   699  00CF                     itoa@val:	
   700                           ; 1 bytes @ 0xC
   701                           
   702                           
   703                           ; 2 bytes @ 0xC
   704  00CF                     	ds	2
   705  00D1                     itoa@base:
   706                           
   707                           ; 2 bytes @ 0xE
   708  00D1                     	ds	2
   709  00D3                     ??_itoa:
   710                           
   711                           ; 1 bytes @ 0x10
   712  00D3                     	ds	2
   713  00D5                     itoa@buf:
   714                           
   715                           ; 1 bytes @ 0x12
   716  00D5                     	ds	1
   717  00D6                     ??_main:
   718                           
   719                           ; 1 bytes @ 0x13
   720  00D6                     	ds	1
   721                           
   722                           	psect	cstackCOMMON
   723  0070                     __pcstackCOMMON:
   724  0070                     ?_setup:
   725  0070                     ?_Lcd_Init:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_SERIAL_Init:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ?_ADC_Init:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_Lcd_Cmd:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_ISR:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ?_main:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_Lcd_Write_Char:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?i1___lwdiv:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?i1___lwmod:	
   750                           ; 2 bytes @ 0x0
   751                           
   752  0070                     i1___lwdiv@divisor:	
   753                           ; 2 bytes @ 0x0
   754                           
   755  0070                     i1___lwmod@divisor:	
   756                           ; 2 bytes @ 0x0
   757                           
   758                           
   759                           ; 2 bytes @ 0x0
   760  0070                     	ds	2
   761  0072                     i1___lwdiv@dividend:
   762  0072                     i1___lwmod@dividend:	
   763                           ; 2 bytes @ 0x2
   764                           
   765                           
   766                           ; 2 bytes @ 0x2
   767  0072                     	ds	2
   768  0074                     ??i1___lwdiv:
   769  0074                     ??i1___lwmod:	
   770                           ; 1 bytes @ 0x4
   771                           
   772                           
   773                           ; 1 bytes @ 0x4
   774  0074                     	ds	1
   775  0075                     i1___lwmod@counter:
   776  0075                     i1___lwdiv@quotient:	
   777                           ; 1 bytes @ 0x5
   778                           
   779                           
   780                           ; 2 bytes @ 0x5
   781  0075                     	ds	2
   782  0077                     i1___lwdiv@counter:
   783                           
   784                           ; 1 bytes @ 0x7
   785  0077                     	ds	1
   786  0078                     ?i1_utoa:
   787  0078                     i1utoa@val:	
   788                           ; 1 bytes @ 0x8
   789                           
   790                           
   791                           ; 2 bytes @ 0x8
   792  0078                     	ds	2
   793  007A                     i1utoa@base:
   794                           
   795                           ; 2 bytes @ 0xA
   796  007A                     	ds	2
   797  007C                     ??i1_utoa:
   798                           
   799                           ; 1 bytes @ 0xC
   800  007C                     	ds	1
   801  007D                     ??i1_itoa:
   802                           
   803                           ; 1 bytes @ 0xD
   804  007D                     	ds	1
   805  007E                     ??_CONTADOR:
   806                           
   807                           	psect	cstackBANK0
   808  0044                     __pcstackBANK0:	
   809                           ; 1 bytes @ 0xE
   810                           
   811  0044                     i1utoa@v:
   812                           
   813                           ; 2 bytes @ 0x0
   814  0044                     	ds	2
   815  0046                     i1utoa@c:
   816                           
   817                           ; 1 bytes @ 0x2
   818  0046                     	ds	1
   819  0047                     i1utoa@buf:
   820                           
   821                           ; 1 bytes @ 0x3
   822  0047                     	ds	1
   823  0048                     ?i1_itoa:
   824  0048                     i1itoa@val:	
   825                           ; 1 bytes @ 0x4
   826                           
   827                           
   828                           ; 2 bytes @ 0x4
   829  0048                     	ds	2
   830  004A                     i1itoa@base:
   831                           
   832                           ; 2 bytes @ 0x6
   833  004A                     	ds	3
   834  004D                     i1itoa@buf:
   835                           
   836                           ; 1 bytes @ 0x9
   837  004D                     	ds	1
   838  004E                     ?_CONTADOR:
   839  004E                     CONTADOR@n:	
   840                           ; 1 bytes @ 0xA
   841                           
   842                           
   843                           ; 2 bytes @ 0xA
   844  004E                     	ds	2
   845  0050                     CONTADOR@a:
   846                           
   847                           ; 1 bytes @ 0xC
   848  0050                     	ds	1
   849  0051                     ??_ISR:
   850                           
   851                           ; 1 bytes @ 0xD
   852  0051                     	ds	6
   853  0057                     ??_setup:
   854  0057                     ??_SERIAL_Init:	
   855                           ; 1 bytes @ 0x13
   856                           
   857  0057                     ??_ADC_Init:	
   858                           ; 1 bytes @ 0x13
   859                           
   860  0057                     ?_ADC_Read:	
   861                           ; 1 bytes @ 0x13
   862                           
   863  0057                     ?_strcpy:	
   864                           ; 1 bytes @ 0x13
   865                           
   866  0057                     ?_strcat:	
   867                           ; 1 bytes @ 0x13
   868                           
   869  0057                     ??_Lcd_Cmd:	
   870                           ; 1 bytes @ 0x13
   871                           
   872  0057                     ??_Lcd_Write_Char:	
   873                           ; 1 bytes @ 0x13
   874                           
   875  0057                     ?___wmul:	
   876                           ; 1 bytes @ 0x13
   877                           
   878  0057                     ?___awdiv:	
   879                           ; 2 bytes @ 0x13
   880                           
   881  0057                     ?___lwdiv:	
   882                           ; 2 bytes @ 0x13
   883                           
   884  0057                     ?___lwmod:	
   885                           ; 2 bytes @ 0x13
   886                           
   887  0057                     ADC_Read@b:	
   888                           ; 2 bytes @ 0x13
   889                           
   890  0057                     strcat@from:	
   891                           ; 1 bytes @ 0x13
   892                           
   893  0057                     strcpy@from:	
   894                           ; 1 bytes @ 0x13
   895                           
   896  0057                     ___wmul@multiplier:	
   897                           ; 1 bytes @ 0x13
   898                           
   899  0057                     ___awdiv@divisor:	
   900                           ; 2 bytes @ 0x13
   901                           
   902  0057                     ___lwdiv@divisor:	
   903                           ; 2 bytes @ 0x13
   904                           
   905  0057                     ___lwmod@divisor:	
   906                           ; 2 bytes @ 0x13
   907                           
   908                           
   909                           ; 2 bytes @ 0x13
   910  0057                     	ds	1
   911  0058                     ??_strcpy:
   912  0058                     ??_strcat:	
   913                           ; 1 bytes @ 0x14
   914                           
   915  0058                     ADC_Read@c:	
   916                           ; 1 bytes @ 0x14
   917                           
   918                           
   919                           ; 1 bytes @ 0x14
   920  0058                     	ds	1
   921  0059                     ??_ADC_Read:
   922  0059                     Lcd_Cmd@a:	
   923                           ; 1 bytes @ 0x15
   924                           
   925  0059                     Lcd_Write_Char@a:	
   926                           ; 1 bytes @ 0x15
   927                           
   928  0059                     ADC_Read@a:	
   929                           ; 1 bytes @ 0x15
   930                           
   931  0059                     strcat@cp:	
   932                           ; 1 bytes @ 0x15
   933                           
   934  0059                     strcpy@cp:	
   935                           ; 1 bytes @ 0x15
   936                           
   937  0059                     ___wmul@multiplicand:	
   938                           ; 1 bytes @ 0x15
   939                           
   940  0059                     ___awdiv@dividend:	
   941                           ; 2 bytes @ 0x15
   942                           
   943  0059                     ___lwdiv@dividend:	
   944                           ; 2 bytes @ 0x15
   945                           
   946  0059                     ___lwmod@dividend:	
   947                           ; 2 bytes @ 0x15
   948                           
   949                           
   950                           ; 2 bytes @ 0x15
   951  0059                     	ds	1
   952  005A                     ??_Lcd_Init:
   953  005A                     ?_Lcd_Write_String:	
   954                           ; 1 bytes @ 0x16
   955                           
   956  005A                     strcat@to:	
   957                           ; 1 bytes @ 0x16
   958                           
   959  005A                     strcpy@to:	
   960                           ; 1 bytes @ 0x16
   961                           
   962  005A                     Lcd_Write_String@a:	
   963                           ; 1 bytes @ 0x16
   964                           
   965                           
   966                           ; 2 bytes @ 0x16
   967  005A                     	ds	1
   968  005B                     ??___wmul:
   969  005B                     ??___awdiv:	
   970                           ; 1 bytes @ 0x17
   971                           
   972  005B                     ??___lwdiv:	
   973                           ; 1 bytes @ 0x17
   974                           
   975  005B                     ??___lwmod:	
   976                           ; 1 bytes @ 0x17
   977                           
   978  005B                     ___wmul@product:	
   979                           ; 1 bytes @ 0x17
   980                           
   981                           
   982                           ; 2 bytes @ 0x17
   983  005B                     	ds	1
   984  005C                     ??_Lcd_Write_String:
   985  005C                     ??___awmod:	
   986                           ; 1 bytes @ 0x18
   987                           
   988  005C                     ___lwmod@counter:	
   989                           ; 1 bytes @ 0x18
   990                           
   991                           
   992                           ; 1 bytes @ 0x18
   993  005C                     	ds	1
   994                           
   995                           	psect	maintext
   996  0028                     __pmaintext:	
   997 ;;
   998 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   999 ;;
  1000 ;; *************** function _main *****************
  1001 ;; Defined at:
  1002 ;;		line 95 in file "LAB3.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : B00/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          0       0       1       0       0
  1019 ;;      Totals:         0       0       1       0       0
  1020 ;;Total ram usage:        1 bytes
  1021 ;; Hardware stack levels required when called:    8
  1022 ;; This function calls:
  1023 ;;		_ADC_Init
  1024 ;;		_ADC_Read
  1025 ;;		_Lcd_Cmd
  1026 ;;		_Lcd_Init
  1027 ;;		_Lcd_Write_String
  1028 ;;		_SERIAL_Init
  1029 ;;		___awdiv
  1030 ;;		___awmod
  1031 ;;		___wmul
  1032 ;;		_itoa
  1033 ;;		_setup
  1034 ;;		_strcat
  1035 ;;		_strcpy
  1036 ;; This function is called by:
  1037 ;;		Startup code after reset
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _main
  1043  0028                     _main:
  1044  0028                     l2829:	
  1045                           ;incstack = 0
  1046                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1047                           
  1048                           
  1049                           ;LAB3.c: 97:     setup();
  1050  0028  120A  118A  27BD  120A  118A  	fcall	_setup
  1051  002D                     l109:	
  1052                           ;LAB3.c: 103:     while (1) {
  1053                           
  1054                           
  1055                           ;LAB3.c: 104:         Lcd_Init();
  1056  002D  120A  118A  279E  120A  118A  	fcall	_Lcd_Init
  1057                           
  1058                           ;LAB3.c: 105:         SERIAL_Init();
  1059  0032  120A  158A  27D9  120A  118A  	fcall	_SERIAL_Init
  1060  0037                     l2831:
  1061                           
  1062                           ;LAB3.c: 106:         ADC_Init();
  1063  0037  120A  118A  27F4  120A  118A  	fcall	_ADC_Init
  1064  003C                     l2833:
  1065                           
  1066                           ;LAB3.c: 108:         Lcd_Write_String("S1    S2    S3  ");
  1067  003C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1068  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1069  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1070  003F  00DA               	movwf	Lcd_Write_String@a
  1071  0040  3080               	movlw	128
  1072  0041  00DB               	movwf	Lcd_Write_String@a+1
  1073  0042  120A  118A  269D  120A  118A  	fcall	_Lcd_Write_String
  1074  0047                     l2835:
  1075                           
  1076                           ;LAB3.c: 110:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1077  0047  30C7               	movlw	199
  1078  0048  1683               	bsf	3,5	;RP0=1, select bank1
  1079  0049  1303               	bcf	3,6	;RP1=0, select bank1
  1080  004A  00D6               	movwf	??_main^(0+128)
  1081  004B                     u3577:
  1082  004B  284C               	nop2
  1083  004C  0BD6               	decfsz	??_main^(0+128),f
  1084  004D  284B               	goto	u3577
  1085  004E  284F               	nop2
  1086  004F                     l2837:
  1087                           
  1088                           ;LAB3.c: 111:         ADC_Read(0,0,adc);
  1089  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0051  01D7               	clrf	ADC_Read@b
  1092  0052  01D8               	clrf	ADC_Read@c
  1093  0053  3000               	movlw	0
  1094  0054  120A  158A  27EC  120A  118A  	fcall	_ADC_Read
  1095  0059                     l2839:
  1096                           
  1097                           ;LAB3.c: 113:         voltaje = (adc*5.0)/255.0;
  1098  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1099  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1100  005B  01B2               	clrf	_voltaje
  1101  005C  01B3               	clrf	_voltaje+1
  1102  005D                     l2841:
  1103                           
  1104                           ;LAB3.c: 114:         V1 = (voltaje)*100;
  1105  005D  3000               	movlw	0
  1106  005E  00D7               	movwf	___wmul@multiplier
  1107  005F  00D8               	movwf	___wmul@multiplier+1
  1108  0060  3064               	movlw	100
  1109  0061  00D9               	movwf	___wmul@multiplicand
  1110  0062  3000               	movlw	0
  1111  0063  00DA               	movwf	___wmul@multiplicand+1
  1112  0064  120A  118A  26C5  120A  118A  	fcall	___wmul
  1113  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1114  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1115  006B  0858               	movf	?___wmul+1,w
  1116  006C  00B1               	movwf	_V1+1
  1117  006D  0857               	movf	?___wmul,w
  1118  006E  00B0               	movwf	_V1
  1119  006F                     l2843:
  1120                           
  1121                           ;LAB3.c: 115:         POT1A = V1%10;
  1122  006F  300A               	movlw	10
  1123  0070  1683               	bsf	3,5	;RP0=1, select bank1
  1124  0071  1303               	bcf	3,6	;RP1=0, select bank1
  1125  0072  00C7               	movwf	___awmod@divisor^(0+128)
  1126  0073  3000               	movlw	0
  1127  0074  00C8               	movwf	(___awmod@divisor^(0+128)+1)
  1128  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0077  0831               	movf	_V1+1,w
  1131  0078  1683               	bsf	3,5	;RP0=1, select bank1
  1132  0079  1303               	bcf	3,6	;RP1=0, select bank1
  1133  007A  00CA               	movwf	(___awmod@dividend+1)^(0+128)
  1134  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1135  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1136  007D  0830               	movf	_V1,w
  1137  007E  1683               	bsf	3,5	;RP0=1, select bank1
  1138  007F  1303               	bcf	3,6	;RP1=0, select bank1
  1139  0080  00C9               	movwf	___awmod@dividend^(0+128)
  1140  0081  120A  118A  24D3  120A  118A  	fcall	___awmod
  1141  0086  1683               	bsf	3,5	;RP0=1, select bank1
  1142  0087  1303               	bcf	3,6	;RP1=0, select bank1
  1143  0088  0848               	movf	(?___awmod+1)^(0+128),w
  1144  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1145  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1146  008B  00AF               	movwf	_POT1A+1
  1147  008C  1683               	bsf	3,5	;RP0=1, select bank1
  1148  008D  1303               	bcf	3,6	;RP1=0, select bank1
  1149  008E  0847               	movf	?___awmod^(0+128),w
  1150  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0091  00AE               	movwf	_POT1A
  1153  0092                     l2845:
  1154                           
  1155                           ;LAB3.c: 116:         itoa(POT1SA,POT1A,10);
  1156  0092  082F               	movf	_POT1A+1,w
  1157  0093  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0094  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0095  00D0               	movwf	(itoa@val+1)^(0+128)
  1160  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0098  082E               	movf	_POT1A,w
  1163  0099  1683               	bsf	3,5	;RP0=1, select bank1
  1164  009A  1303               	bcf	3,6	;RP1=0, select bank1
  1165  009B  00CF               	movwf	itoa@val^(0+128)
  1166  009C  300A               	movlw	10
  1167  009D  00D1               	movwf	itoa@base^(0+128)
  1168  009E  3000               	movlw	0
  1169  009F  00D2               	movwf	(itoa@base^(0+128)+1)
  1170  00A0  30BE               	movlw	(low (_POT1SA| 0))& (0+255)
  1171  00A1  120A  118A  26EC  120A  118A  	fcall	_itoa
  1172  00A6                     l2847:
  1173                           
  1174                           ;LAB3.c: 117:         POT1B = (V1/10)%10;
  1175  00A6  300A               	movlw	10
  1176  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  1177  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  1178  00A9  00C7               	movwf	___awmod@divisor^(0+128)
  1179  00AA  3000               	movlw	0
  1180  00AB  00C8               	movwf	(___awmod@divisor^(0+128)+1)
  1181  00AC  300A               	movlw	10
  1182  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1183  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1184  00AF  00D7               	movwf	___awdiv@divisor
  1185  00B0  3000               	movlw	0
  1186  00B1  00D8               	movwf	___awdiv@divisor+1
  1187  00B2  0831               	movf	_V1+1,w
  1188  00B3  00DA               	movwf	___awdiv@dividend+1
  1189  00B4  0830               	movf	_V1,w
  1190  00B5  00D9               	movwf	___awdiv@dividend
  1191  00B6  120A  118A  2377  120A  118A  	fcall	___awdiv
  1192  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1193  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1194  00BD  0858               	movf	?___awdiv+1,w
  1195  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  1196  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  1197  00C0  00CA               	movwf	(___awmod@dividend+1)^(0+128)
  1198  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1199  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1200  00C3  0857               	movf	?___awdiv,w
  1201  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  1202  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  1203  00C6  00C9               	movwf	___awmod@dividend^(0+128)
  1204  00C7  120A  118A  24D3  120A  118A  	fcall	___awmod
  1205  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  1206  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  1207  00CE  0848               	movf	(?___awmod+1)^(0+128),w
  1208  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1209  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1210  00D1  00AD               	movwf	_POT1B+1
  1211  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  1212  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  1213  00D4  0847               	movf	?___awmod^(0+128),w
  1214  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1215  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1216  00D7  00AC               	movwf	_POT1B
  1217  00D8                     l2849:
  1218                           
  1219                           ;LAB3.c: 118:         itoa(POT1SB,POT1B,10);
  1220  00D8  082D               	movf	_POT1B+1,w
  1221  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1222  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1223  00DB  00D0               	movwf	(itoa@val+1)^(0+128)
  1224  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1225  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1226  00DE  082C               	movf	_POT1B,w
  1227  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1228  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1229  00E1  00CF               	movwf	itoa@val^(0+128)
  1230  00E2  300A               	movlw	10
  1231  00E3  00D1               	movwf	itoa@base^(0+128)
  1232  00E4  3000               	movlw	0
  1233  00E5  00D2               	movwf	(itoa@base^(0+128)+1)
  1234  00E6  303F               	movlw	(low (_POT1SB| 0))& (0+255)
  1235  00E7  120A  118A  26EC  120A  118A  	fcall	_itoa
  1236  00EC                     l2851:
  1237                           
  1238                           ;LAB3.c: 119:         POT1C = (V1/100)%10;
  1239  00EC  300A               	movlw	10
  1240  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  1241  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  1242  00EF  00C7               	movwf	___awmod@divisor^(0+128)
  1243  00F0  3000               	movlw	0
  1244  00F1  00C8               	movwf	(___awmod@divisor^(0+128)+1)
  1245  00F2  3064               	movlw	100
  1246  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1247  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1248  00F5  00D7               	movwf	___awdiv@divisor
  1249  00F6  3000               	movlw	0
  1250  00F7  00D8               	movwf	___awdiv@divisor+1
  1251  00F8  0831               	movf	_V1+1,w
  1252  00F9  00DA               	movwf	___awdiv@dividend+1
  1253  00FA  0830               	movf	_V1,w
  1254  00FB  00D9               	movwf	___awdiv@dividend
  1255  00FC  120A  118A  2377  120A  118A  	fcall	___awdiv
  1256  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0103  0858               	movf	?___awdiv+1,w
  1259  0104  1683               	bsf	3,5	;RP0=1, select bank1
  1260  0105  1303               	bcf	3,6	;RP1=0, select bank1
  1261  0106  00CA               	movwf	(___awmod@dividend+1)^(0+128)
  1262  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0109  0857               	movf	?___awdiv,w
  1265  010A  1683               	bsf	3,5	;RP0=1, select bank1
  1266  010B  1303               	bcf	3,6	;RP1=0, select bank1
  1267  010C  00C9               	movwf	___awmod@dividend^(0+128)
  1268  010D  120A  118A  24D3  120A  118A  	fcall	___awmod
  1269  0112  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0113  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0114  0848               	movf	(?___awmod+1)^(0+128),w
  1272  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0117  00AB               	movwf	_POT1C+1
  1275  0118  1683               	bsf	3,5	;RP0=1, select bank1
  1276  0119  1303               	bcf	3,6	;RP1=0, select bank1
  1277  011A  0847               	movf	?___awmod^(0+128),w
  1278  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1279  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1280  011D  00AA               	movwf	_POT1C
  1281  011E                     l2853:
  1282                           
  1283                           ;LAB3.c: 120:         itoa(POT1SC,POT1C,10);
  1284  011E  082B               	movf	_POT1C+1,w
  1285  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1286  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1287  0121  00D0               	movwf	(itoa@val+1)^(0+128)
  1288  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0124  082A               	movf	_POT1C,w
  1291  0125  1683               	bsf	3,5	;RP0=1, select bank1
  1292  0126  1303               	bcf	3,6	;RP1=0, select bank1
  1293  0127  00CF               	movwf	itoa@val^(0+128)
  1294  0128  300A               	movlw	10
  1295  0129  00D1               	movwf	itoa@base^(0+128)
  1296  012A  3000               	movlw	0
  1297  012B  00D2               	movwf	(itoa@base^(0+128)+1)
  1298  012C  303A               	movlw	(low (_POT1SC| 0))& (0+255)
  1299  012D  120A  118A  26EC  120A  118A  	fcall	_itoa
  1300  0132                     l2855:
  1301                           
  1302                           ;LAB3.c: 121:         strcpy(PUNTO1,".");
  1303  0132  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1304  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1305  0134  1303               	bcf	3,6	;RP1=0, select bank1
  1306  0135  00D6               	movwf	??_main^(0+128)
  1307  0136  0856               	movf	??_main^(0+128),w
  1308  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1310  0139  00D7               	movwf	strcpy@from
  1311  013A  30B9               	movlw	(low (_PUNTO1| 0))& (0+255)
  1312  013B  120A  118A  275B  120A  118A  	fcall	_strcpy
  1313  0140                     l2857:
  1314                           
  1315                           ;LAB3.c: 122:         strcat(POT1SB,POT1SA);
  1316  0140  30BE               	movlw	(low (_POT1SA| 0))& (0+255)
  1317  0141  1683               	bsf	3,5	;RP0=1, select bank1
  1318  0142  1303               	bcf	3,6	;RP1=0, select bank1
  1319  0143  00D6               	movwf	??_main^(0+128)
  1320  0144  0856               	movf	??_main^(0+128),w
  1321  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0147  00D7               	movwf	strcat@from
  1324  0148  303F               	movlw	(low (_POT1SB| 0))& (0+255)
  1325  0149  120A  118A  2672  120A  118A  	fcall	_strcat
  1326  014E                     l2859:
  1327                           
  1328                           ;LAB3.c: 123:         strcat(PUNTO1,POT1SB);
  1329  014E  303F               	movlw	(low (_POT1SB| 0))& (0+255)
  1330  014F  1683               	bsf	3,5	;RP0=1, select bank1
  1331  0150  1303               	bcf	3,6	;RP1=0, select bank1
  1332  0151  00D6               	movwf	??_main^(0+128)
  1333  0152  0856               	movf	??_main^(0+128),w
  1334  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0155  00D7               	movwf	strcat@from
  1337  0156  30B9               	movlw	(low (_PUNTO1| 0))& (0+255)
  1338  0157  120A  118A  2672  120A  118A  	fcall	_strcat
  1339  015C                     l2861:
  1340                           
  1341                           ;LAB3.c: 124:         strcat(POT1SC,PUNTO1);
  1342  015C  30B9               	movlw	(low (_PUNTO1| 0))& (0+255)
  1343  015D  1683               	bsf	3,5	;RP0=1, select bank1
  1344  015E  1303               	bcf	3,6	;RP1=0, select bank1
  1345  015F  00D6               	movwf	??_main^(0+128)
  1346  0160  0856               	movf	??_main^(0+128),w
  1347  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0163  00D7               	movwf	strcat@from
  1350  0164  303A               	movlw	(low (_POT1SC| 0))& (0+255)
  1351  0165  120A  118A  2672  120A  118A  	fcall	_strcat
  1352  016A                     l2863:
  1353                           
  1354                           ;LAB3.c: 126:         _delay((unsigned long)((600)*(4000000/4000000.0)));
  1355  016A  30C7               	movlw	199
  1356  016B  1683               	bsf	3,5	;RP0=1, select bank1
  1357  016C  1303               	bcf	3,6	;RP1=0, select bank1
  1358  016D  00D6               	movwf	??_main^(0+128)
  1359  016E                     u3587:
  1360  016E  0BD6               	decfsz	??_main^(0+128),f
  1361  016F  296E               	goto	u3587
  1362  0170                     l2865:
  1363                           
  1364                           ;LAB3.c: 127:         ADC_Read(1,1,adc);
  1365  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1366  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1367  0172  01D7               	clrf	ADC_Read@b
  1368  0173  0AD7               	incf	ADC_Read@b,f
  1369  0174  01D8               	clrf	ADC_Read@c
  1370  0175  3001               	movlw	1
  1371  0176  120A  158A  27EC  120A  118A  	fcall	_ADC_Read
  1372  017B                     l2867:
  1373                           
  1374                           ;LAB3.c: 129:         voltaje2 = adc*5.0/255.0;
  1375  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1376  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1377  017D  01A8               	clrf	_voltaje2
  1378  017E  01A9               	clrf	_voltaje2+1
  1379  017F                     l2869:
  1380                           
  1381                           ;LAB3.c: 130:         V2 = (voltaje2)*100;
  1382  017F  3000               	movlw	0
  1383  0180  00D7               	movwf	___wmul@multiplier
  1384  0181  00D8               	movwf	___wmul@multiplier+1
  1385  0182  3064               	movlw	100
  1386  0183  00D9               	movwf	___wmul@multiplicand
  1387  0184  3000               	movlw	0
  1388  0185  00DA               	movwf	___wmul@multiplicand+1
  1389  0186  120A  118A  26C5  120A  118A  	fcall	___wmul
  1390  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1391  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1392  018D  0858               	movf	?___wmul+1,w
  1393  018E  00A7               	movwf	_V2+1
  1394  018F  0857               	movf	?___wmul,w
  1395  0190  00A6               	movwf	_V2
  1396  0191                     l2871:
  1397                           
  1398                           ;LAB3.c: 131:         POT2A = V2%10;
  1399  0191  300A               	movlw	10
  1400  0192  1683               	bsf	3,5	;RP0=1, select bank1
  1401  0193  1303               	bcf	3,6	;RP1=0, select bank1
  1402  0194  00C7               	movwf	___awmod@divisor^(0+128)
  1403  0195  3000               	movlw	0
  1404  0196  00C8               	movwf	(___awmod@divisor^(0+128)+1)
  1405  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0199  0827               	movf	_V2+1,w
  1408  019A  1683               	bsf	3,5	;RP0=1, select bank1
  1409  019B  1303               	bcf	3,6	;RP1=0, select bank1
  1410  019C  00CA               	movwf	(___awmod@dividend+1)^(0+128)
  1411  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1412  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1413  019F  0826               	movf	_V2,w
  1414  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  1415  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  1416  01A2  00C9               	movwf	___awmod@dividend^(0+128)
  1417  01A3  120A  118A  24D3  120A  118A  	fcall	___awmod
  1418  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  1419  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  1420  01AA  0848               	movf	(?___awmod+1)^(0+128),w
  1421  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1422  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1423  01AD  00A5               	movwf	_POT2A+1
  1424  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  1425  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  1426  01B0  0847               	movf	?___awmod^(0+128),w
  1427  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1428  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1429  01B3  00A4               	movwf	_POT2A
  1430  01B4                     l2873:
  1431                           
  1432                           ;LAB3.c: 132:         itoa(POT2SA,POT2A,10);
  1433  01B4  0825               	movf	_POT2A+1,w
  1434  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1435  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1436  01B7  00D0               	movwf	(itoa@val+1)^(0+128)
  1437  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1438  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1439  01BA  0824               	movf	_POT2A,w
  1440  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1441  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1442  01BD  00CF               	movwf	itoa@val^(0+128)
  1443  01BE  300A               	movlw	10
  1444  01BF  00D1               	movwf	itoa@base^(0+128)
  1445  01C0  3000               	movlw	0
  1446  01C1  00D2               	movwf	(itoa@base^(0+128)+1)
  1447  01C2  30B4               	movlw	(low (_POT2SA| 0))& (0+255)
  1448  01C3  120A  118A  26EC  120A  118A  	fcall	_itoa
  1449  01C8                     l2875:
  1450                           
  1451                           ;LAB3.c: 133:         POT2B = (V2/10)%10;
  1452  01C8  300A               	movlw	10
  1453  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  1454  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  1455  01CB  00C7               	movwf	___awmod@divisor^(0+128)
  1456  01CC  3000               	movlw	0
  1457  01CD  00C8               	movwf	(___awmod@divisor^(0+128)+1)
  1458  01CE  300A               	movlw	10
  1459  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1460  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1461  01D1  00D7               	movwf	___awdiv@divisor
  1462  01D2  3000               	movlw	0
  1463  01D3  00D8               	movwf	___awdiv@divisor+1
  1464  01D4  0827               	movf	_V2+1,w
  1465  01D5  00DA               	movwf	___awdiv@dividend+1
  1466  01D6  0826               	movf	_V2,w
  1467  01D7  00D9               	movwf	___awdiv@dividend
  1468  01D8  120A  118A  2377  120A  118A  	fcall	___awdiv
  1469  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1470  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1471  01DF  0858               	movf	?___awdiv+1,w
  1472  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  1473  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  1474  01E2  00CA               	movwf	(___awmod@dividend+1)^(0+128)
  1475  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1476  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1477  01E5  0857               	movf	?___awdiv,w
  1478  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1479  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1480  01E8  00C9               	movwf	___awmod@dividend^(0+128)
  1481  01E9  120A  118A  24D3  120A  118A  	fcall	___awmod
  1482  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1483  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  1484  01F0  0848               	movf	(?___awmod+1)^(0+128),w
  1485  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1486  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1487  01F3  00A3               	movwf	_POT2B+1
  1488  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  1489  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  1490  01F6  0847               	movf	?___awmod^(0+128),w
  1491  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1492  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1493  01F9  00A2               	movwf	_POT2B
  1494  01FA                     l2877:
  1495                           
  1496                           ;LAB3.c: 134:         itoa(POT2SB,POT2B,10);
  1497  01FA  0823               	movf	_POT2B+1,w
  1498  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1499  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1500  01FD  00D0               	movwf	(itoa@val+1)^(0+128)
  1501  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1502  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0200  0822               	movf	_POT2B,w
  1504  0201  1683               	bsf	3,5	;RP0=1, select bank1
  1505  0202  1303               	bcf	3,6	;RP1=0, select bank1
  1506  0203  00CF               	movwf	itoa@val^(0+128)
  1507  0204  300A               	movlw	10
  1508  0205  00D1               	movwf	itoa@base^(0+128)
  1509  0206  3000               	movlw	0
  1510  0207  00D2               	movwf	(itoa@base^(0+128)+1)
  1511  0208  30AF               	movlw	(low (_POT2SB| 0))& (0+255)
  1512  0209  120A  118A  26EC  120A  118A  	fcall	_itoa
  1513  020E                     l2879:
  1514                           
  1515                           ;LAB3.c: 135:         POT2C = (V2/100)%10;
  1516  020E  300A               	movlw	10
  1517  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1518  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1519  0211  00C7               	movwf	___awmod@divisor^(0+128)
  1520  0212  3000               	movlw	0
  1521  0213  00C8               	movwf	(___awmod@divisor^(0+128)+1)
  1522  0214  3064               	movlw	100
  1523  0215  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0216  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0217  00D7               	movwf	___awdiv@divisor
  1526  0218  3000               	movlw	0
  1527  0219  00D8               	movwf	___awdiv@divisor+1
  1528  021A  0827               	movf	_V2+1,w
  1529  021B  00DA               	movwf	___awdiv@dividend+1
  1530  021C  0826               	movf	_V2,w
  1531  021D  00D9               	movwf	___awdiv@dividend
  1532  021E  120A  118A  2377  120A  118A  	fcall	___awdiv
  1533  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0225  0858               	movf	?___awdiv+1,w
  1536  0226  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0227  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0228  00CA               	movwf	(___awmod@dividend+1)^(0+128)
  1539  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1540  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1541  022B  0857               	movf	?___awdiv,w
  1542  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1543  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1544  022E  00C9               	movwf	___awmod@dividend^(0+128)
  1545  022F  120A  118A  24D3  120A  118A  	fcall	___awmod
  1546  0234  1683               	bsf	3,5	;RP0=1, select bank1
  1547  0235  1303               	bcf	3,6	;RP1=0, select bank1
  1548  0236  0848               	movf	(?___awmod+1)^(0+128),w
  1549  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0239  00A1               	movwf	_POT2C+1
  1552  023A  1683               	bsf	3,5	;RP0=1, select bank1
  1553  023B  1303               	bcf	3,6	;RP1=0, select bank1
  1554  023C  0847               	movf	?___awmod^(0+128),w
  1555  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1556  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1557  023F  00A0               	movwf	_POT2C
  1558  0240                     l2881:
  1559                           
  1560                           ;LAB3.c: 136:         itoa(POT2SC,POT2C,10);
  1561  0240  0821               	movf	_POT2C+1,w
  1562  0241  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0242  1303               	bcf	3,6	;RP1=0, select bank1
  1564  0243  00D0               	movwf	(itoa@val+1)^(0+128)
  1565  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0246  0820               	movf	_POT2C,w
  1568  0247  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0248  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0249  00CF               	movwf	itoa@val^(0+128)
  1571  024A  300A               	movlw	10
  1572  024B  00D1               	movwf	itoa@base^(0+128)
  1573  024C  3000               	movlw	0
  1574  024D  00D2               	movwf	(itoa@base^(0+128)+1)
  1575  024E  30AA               	movlw	(low (_POT2SC| 0))& (0+255)
  1576  024F  120A  118A  26EC  120A  118A  	fcall	_itoa
  1577  0254                     l2883:
  1578                           
  1579                           ;LAB3.c: 137:         strcpy(PUNTO2,".");
  1580  0254  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1581  0255  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0256  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0257  00D6               	movwf	??_main^(0+128)
  1584  0258  0856               	movf	??_main^(0+128),w
  1585  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1586  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1587  025B  00D7               	movwf	strcpy@from
  1588  025C  30A5               	movlw	(low (_PUNTO2| 0))& (0+255)
  1589  025D  120A  118A  275B  120A  118A  	fcall	_strcpy
  1590  0262                     l2885:
  1591                           
  1592                           ;LAB3.c: 138:         strcat(POT2SB,POT2SA);
  1593  0262  30B4               	movlw	(low (_POT2SA| 0))& (0+255)
  1594  0263  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0264  1303               	bcf	3,6	;RP1=0, select bank1
  1596  0265  00D6               	movwf	??_main^(0+128)
  1597  0266  0856               	movf	??_main^(0+128),w
  1598  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0269  00D7               	movwf	strcat@from
  1601  026A  30AF               	movlw	(low (_POT2SB| 0))& (0+255)
  1602  026B  120A  118A  2672  120A  118A  	fcall	_strcat
  1603  0270                     l2887:
  1604                           
  1605                           ;LAB3.c: 139:         strcat(PUNTO2,POT2SB);
  1606  0270  30AF               	movlw	(low (_POT2SB| 0))& (0+255)
  1607  0271  1683               	bsf	3,5	;RP0=1, select bank1
  1608  0272  1303               	bcf	3,6	;RP1=0, select bank1
  1609  0273  00D6               	movwf	??_main^(0+128)
  1610  0274  0856               	movf	??_main^(0+128),w
  1611  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0277  00D7               	movwf	strcat@from
  1614  0278  30A5               	movlw	(low (_PUNTO2| 0))& (0+255)
  1615  0279  120A  118A  2672  120A  118A  	fcall	_strcat
  1616  027E                     l2889:
  1617                           
  1618                           ;LAB3.c: 140:         strcat(POT2SC,PUNTO2);
  1619  027E  30A5               	movlw	(low (_PUNTO2| 0))& (0+255)
  1620  027F  1683               	bsf	3,5	;RP0=1, select bank1
  1621  0280  1303               	bcf	3,6	;RP1=0, select bank1
  1622  0281  00D6               	movwf	??_main^(0+128)
  1623  0282  0856               	movf	??_main^(0+128),w
  1624  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1625  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1626  0285  00D7               	movwf	strcat@from
  1627  0286  30AA               	movlw	(low (_POT2SC| 0))& (0+255)
  1628  0287  120A  118A  2672  120A  118A  	fcall	_strcat
  1629  028C                     l2891:
  1630                           
  1631                           ;LAB3.c: 142:         Lcd_Cmd(0xC0);
  1632  028C  30C0               	movlw	192
  1633  028D  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1634  0292                     l2893:
  1635                           
  1636                           ;LAB3.c: 143:         Lcd_Write_String(POT1SC);
  1637  0292  303A               	movlw	(low (_POT1SC| 0))& (0+255)
  1638  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0295  00DA               	movwf	Lcd_Write_String@a
  1641  0296  3000               	movlw	0
  1642  0297  00DB               	movwf	Lcd_Write_String@a+1
  1643  0298  120A  118A  269D  120A  118A  	fcall	_Lcd_Write_String
  1644  029D                     l2895:
  1645                           
  1646                           ;LAB3.c: 144:         Lcd_Write_String(" ");
  1647  029D  3010               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  1648  029E  1283               	bcf	3,5	;RP0=0, select bank0
  1649  029F  1303               	bcf	3,6	;RP1=0, select bank0
  1650  02A0  00DA               	movwf	Lcd_Write_String@a
  1651  02A1  3080               	movlw	128
  1652  02A2  00DB               	movwf	Lcd_Write_String@a+1
  1653  02A3  120A  118A  269D  120A  118A  	fcall	_Lcd_Write_String
  1654  02A8                     l2897:
  1655                           
  1656                           ;LAB3.c: 145:         Lcd_Write_String(POT2SC);
  1657  02A8  30AA               	movlw	(low (_POT2SC| 0))& (0+255)
  1658  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1659  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1660  02AB  00DA               	movwf	Lcd_Write_String@a
  1661  02AC  3000               	movlw	0
  1662  02AD  00DB               	movwf	Lcd_Write_String@a+1
  1663  02AE  120A  118A  269D  120A  118A  	fcall	_Lcd_Write_String
  1664  02B3                     l2899:
  1665                           
  1666                           ;LAB3.c: 146:         Lcd_Write_String(" ");
  1667  02B3  3010               	movlw	(low (((STR_1+15)-__stringbase)| (0+32768)))& (0+255)
  1668  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1669  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1670  02B6  00DA               	movwf	Lcd_Write_String@a
  1671  02B7  3080               	movlw	128
  1672  02B8  00DB               	movwf	Lcd_Write_String@a+1
  1673  02B9  120A  118A  269D  120A  118A  	fcall	_Lcd_Write_String
  1674  02BE                     l2901:
  1675                           
  1676                           ;LAB3.c: 147:         Lcd_Write_String(COMPARE);
  1677  02BE  30A0               	movlw	(low (_COMPARE| 0))& (0+255)
  1678  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1679  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1680  02C1  00DA               	movwf	Lcd_Write_String@a
  1681  02C2  3000               	movlw	0
  1682  02C3  00DB               	movwf	Lcd_Write_String@a+1
  1683  02C4  120A  118A  269D  120A  118A  	fcall	_Lcd_Write_String
  1684  02C9  282D               	goto	l109
  1685  02CA  120A  118A  2810   	ljmp	start
  1686  02CD                     __end_of_main:
  1687                           
  1688                           	psect	text1
  1689  075B                     __ptext1:	
  1690 ;; *************** function _strcpy *****************
  1691 ;; Defined at:
  1692 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcpy.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  to              1    wreg     PTR unsigned char 
  1695 ;;		 -> PUNTO2(5), PUNTO1(5), 
  1696 ;;  from            1   19[BANK0 ] PTR const unsigned char 
  1697 ;;		 -> STR_3(2), STR_2(2), 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  to              1   22[BANK0 ] PTR unsigned char 
  1700 ;;		 -> PUNTO2(5), PUNTO1(5), 
  1701 ;;  cp              1   21[BANK0 ] PTR unsigned char 
  1702 ;;		 -> PUNTO2(5), PUNTO1(5), 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      PTR unsigned char 
  1705 ;; Registers used:
  1706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       1       0       0       0
  1713 ;;      Locals:         0       2       0       0       0
  1714 ;;      Temps:          0       1       0       0       0
  1715 ;;      Totals:         0       4       0       0       0
  1716 ;;Total ram usage:        4 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    5
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _strcpy
  1728  075B                     _strcpy:
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  1732                           ;strcpy@to stored from wreg
  1733  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1734  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1735  075D  00DA               	movwf	strcpy@to
  1736  075E                     l2069:
  1737  075E  085A               	movf	strcpy@to,w
  1738  075F  00D8               	movwf	??_strcpy
  1739  0760  0858               	movf	??_strcpy,w
  1740  0761  00D9               	movwf	strcpy@cp
  1741  0762  2F6B               	goto	l2073
  1742  0763                     l2071:
  1743  0763  3001               	movlw	1
  1744  0764  00D8               	movwf	??_strcpy
  1745  0765  0858               	movf	??_strcpy,w
  1746  0766  07D9               	addwf	strcpy@cp,f
  1747  0767  3001               	movlw	1
  1748  0768  00D8               	movwf	??_strcpy
  1749  0769  0858               	movf	??_strcpy,w
  1750  076A  07D7               	addwf	strcpy@from,f
  1751  076B                     l2073:
  1752  076B  0857               	movf	strcpy@from,w
  1753  076C  0084               	movwf	4
  1754  076D  120A  118A  2742  120A  118A  	fcall	stringdir
  1755  0772  00D8               	movwf	??_strcpy
  1756  0773  0859               	movf	strcpy@cp,w
  1757  0774  0084               	movwf	4
  1758  0775  0858               	movf	??_strcpy,w
  1759  0776  1383               	bcf	3,7	;select IRP bank0
  1760  0777  0080               	movwf	0
  1761  0778  0800               	movf	0,w
  1762  0779  1D03               	btfss	3,2
  1763  077A  2F7C               	goto	u1991
  1764  077B  2F7D               	goto	u1990
  1765  077C                     u1991:
  1766  077C  2F63               	goto	l2071
  1767  077D                     u1990:
  1768  077D                     l781:
  1769  077D  0008               	return
  1770  077E                     __end_of_strcpy:
  1771                           
  1772                           	psect	text2
  1773  0672                     __ptext2:	
  1774 ;; *************** function _strcat *****************
  1775 ;; Defined at:
  1776 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  to              1    wreg     PTR unsigned char 
  1779 ;;		 -> PUNTO2(5), POT2SC(5), POT2SB(5), PUNTO1(5), 
  1780 ;;		 -> POT1SC(5), POT1SB(5), 
  1781 ;;  from            1   19[BANK0 ] PTR const unsigned char 
  1782 ;;		 -> PUNTO2(5), POT2SB(5), POT2SA(5), PUNTO1(5), 
  1783 ;;		 -> POT1SB(5), POT1SA(5), 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  to              1   22[BANK0 ] PTR unsigned char 
  1786 ;;		 -> PUNTO2(5), POT2SC(5), POT2SB(5), PUNTO1(5), 
  1787 ;;		 -> POT1SC(5), POT1SB(5), 
  1788 ;;  cp              1   21[BANK0 ] PTR unsigned char 
  1789 ;;		 -> PUNTO2(5), POT2SC(5), POT2SB(5), PUNTO1(5), 
  1790 ;;		 -> POT1SC(5), POT1SB(5), 
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      PTR unsigned char 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1800 ;;      Params:         0       1       0       0       0
  1801 ;;      Locals:         0       2       0       0       0
  1802 ;;      Temps:          0       1       0       0       0
  1803 ;;      Totals:         0       4       0       0       0
  1804 ;;Total ram usage:        4 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    5
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _strcat
  1816  0672                     _strcat:
  1817                           
  1818                           ;incstack = 0
  1819                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  1820                           ;strcat@to stored from wreg
  1821  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0673  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0674  00DA               	movwf	strcat@to
  1824  0675                     l2075:
  1825  0675  085A               	movf	strcat@to,w
  1826  0676  00D8               	movwf	??_strcat
  1827  0677  0858               	movf	??_strcat,w
  1828  0678  00D9               	movwf	strcat@cp
  1829  0679  2E7E               	goto	l2079
  1830  067A                     l2077:
  1831  067A  3001               	movlw	1
  1832  067B  00D8               	movwf	??_strcat
  1833  067C  0858               	movf	??_strcat,w
  1834  067D  07D9               	addwf	strcat@cp,f
  1835  067E                     l2079:
  1836  067E  0859               	movf	strcat@cp,w
  1837  067F  0084               	movwf	4
  1838  0680  1383               	bcf	3,7	;select IRP bank0
  1839  0681  0800               	movf	0,w
  1840  0682  1D03               	btfss	3,2
  1841  0683  2E85               	goto	u2001
  1842  0684  2E86               	goto	u2000
  1843  0685                     u2001:
  1844  0685  2E7A               	goto	l2077
  1845  0686                     u2000:
  1846  0686  2E8F               	goto	l2083
  1847  0687                     l2081:
  1848  0687  3001               	movlw	1
  1849  0688  00D8               	movwf	??_strcat
  1850  0689  0858               	movf	??_strcat,w
  1851  068A  07D9               	addwf	strcat@cp,f
  1852  068B  3001               	movlw	1
  1853  068C  00D8               	movwf	??_strcat
  1854  068D  0858               	movf	??_strcat,w
  1855  068E  07D7               	addwf	strcat@from,f
  1856  068F                     l2083:
  1857  068F  0857               	movf	strcat@from,w
  1858  0690  0084               	movwf	4
  1859  0691  0800               	movf	0,w
  1860  0692  00D8               	movwf	??_strcat
  1861  0693  0859               	movf	strcat@cp,w
  1862  0694  0084               	movwf	4
  1863  0695  0858               	movf	??_strcat,w
  1864  0696  0080               	movwf	0
  1865  0697  0800               	movf	0,w
  1866  0698  1D03               	btfss	3,2
  1867  0699  2E9B               	goto	u2011
  1868  069A  2E9C               	goto	u2010
  1869  069B                     u2011:
  1870  069B  2E87               	goto	l2081
  1871  069C                     u2010:
  1872  069C                     l775:
  1873  069C  0008               	return
  1874  069D                     __end_of_strcat:
  1875                           
  1876                           	psect	text3
  1877  07BD                     __ptext3:	
  1878 ;; *************** function _setup *****************
  1879 ;; Defined at:
  1880 ;;		line 157 in file "LAB3.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    5
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _setup
  1910  07BD                     _setup:
  1911  07BD                     l1989:	
  1912                           ;incstack = 0
  1913                           ; Regs used in _setup: [wreg+status,2+status,0]
  1914                           
  1915                           
  1916                           ;LAB3.c: 158:     ANSEL = 0b00001001;
  1917  07BD  3009               	movlw	9
  1918  07BE  1683               	bsf	3,5	;RP0=1, select bank3
  1919  07BF  1703               	bsf	3,6	;RP1=1, select bank3
  1920  07C0  0088               	movwf	8	;volatile
  1921  07C1                     l1991:
  1922                           
  1923                           ;LAB3.c: 159:     ANSELH= 0b00000000;
  1924  07C1  0189               	clrf	9	;volatile
  1925  07C2                     l1993:
  1926                           
  1927                           ;LAB3.c: 160:     TRISA = 0b00001001;
  1928  07C2  3009               	movlw	9
  1929  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  1930  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  1931  07C5  0085               	movwf	5	;volatile
  1932                           
  1933                           ;LAB3.c: 161:     TRISB = 0b00000000;
  1934  07C6  0186               	clrf	6	;volatile
  1935                           
  1936                           ;LAB3.c: 162:     TRISD = 0b00000000;
  1937  07C7  0188               	clrf	8	;volatile
  1938                           
  1939                           ;LAB3.c: 163:     TRISE = 0;
  1940  07C8  0189               	clrf	9	;volatile
  1941                           
  1942                           ;LAB3.c: 165:     PORTA = 0;
  1943  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  1944  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  1945  07CB  0185               	clrf	5	;volatile
  1946                           
  1947                           ;LAB3.c: 166:     PORTB = 0;
  1948  07CC  0186               	clrf	6	;volatile
  1949                           
  1950                           ;LAB3.c: 167:     PORTC = 0;
  1951  07CD  0187               	clrf	7	;volatile
  1952                           
  1953                           ;LAB3.c: 168:     PORTD = 0;
  1954  07CE  0188               	clrf	8	;volatile
  1955                           
  1956                           ;LAB3.c: 169:     PORTE = 0;
  1957  07CF  0189               	clrf	9	;volatile
  1958  07D0                     l1995:
  1959                           
  1960                           ;LAB3.c: 171:     OSCCONbits.IRCF = 0b110;
  1961  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  1962  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  1963  07D2  080F               	movf	15,w	;volatile
  1964  07D3  398F               	andlw	-113
  1965  07D4  3860               	iorlw	96
  1966  07D5  008F               	movwf	15	;volatile
  1967  07D6                     l1997:
  1968                           
  1969                           ;LAB3.c: 172:     OSCCONbits.OSTS= 0;
  1970  07D6  118F               	bcf	15,3	;volatile
  1971  07D7                     l1999:
  1972                           
  1973                           ;LAB3.c: 173:     OSCCONbits.HTS = 0;
  1974  07D7  110F               	bcf	15,2	;volatile
  1975  07D8                     l2001:
  1976                           
  1977                           ;LAB3.c: 174:     OSCCONbits.LTS = 0;
  1978  07D8  108F               	bcf	15,1	;volatile
  1979  07D9                     l2003:
  1980                           
  1981                           ;LAB3.c: 175:     OSCCONbits.SCS = 1;
  1982  07D9  140F               	bsf	15,0	;volatile
  1983  07DA                     l115:
  1984  07DA  0008               	return
  1985  07DB                     __end_of_setup:
  1986                           
  1987                           	psect	text4
  1988  06EC                     __ptext4:	
  1989 ;; *************** function _itoa *****************
  1990 ;; Defined at:
  1991 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  buf             1    wreg     PTR unsigned char 
  1994 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  1995 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  1996 ;;  val             2   12[BANK1 ] int 
  1997 ;;  base            2   14[BANK1 ] int 
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;  buf             1   18[BANK1 ] PTR unsigned char 
  2000 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  2001 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  2002 ;;  cp              1    0        PTR unsigned char 
  2003 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  2004 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      PTR unsigned char 
  2007 ;; Registers used:
  2008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         0       0       4       0       0
  2015 ;;      Locals:         0       0       2       0       0
  2016 ;;      Temps:          0       0       1       0       0
  2017 ;;      Totals:         0       0       7       0       0
  2018 ;;Total ram usage:        7 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    7
  2021 ;; This function calls:
  2022 ;;		_utoa
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _itoa
  2030  06EC                     _itoa:
  2031                           
  2032                           ;incstack = 0
  2033                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2034                           ;itoa@buf stored from wreg
  2035  06EC  1683               	bsf	3,5	;RP0=1, select bank1
  2036  06ED  1303               	bcf	3,6	;RP1=0, select bank1
  2037  06EE  00D5               	movwf	itoa@buf^(0+128)
  2038  06EF                     l2733:
  2039  06EF                     l2735:
  2040  06EF  1FD0               	btfss	(itoa@val+1)^(0+128),7
  2041  06F0  2EF2               	goto	u3371
  2042  06F1  2EF3               	goto	u3370
  2043  06F2                     u3371:
  2044  06F2  2F03               	goto	l2743
  2045  06F3                     u3370:
  2046  06F3                     l2737:
  2047  06F3  302D               	movlw	45
  2048  06F4  00D3               	movwf	??_itoa^(0+128)
  2049  06F5  0855               	movf	itoa@buf^(0+128),w
  2050  06F6  0084               	movwf	4
  2051  06F7  0853               	movf	??_itoa^(0+128),w
  2052  06F8  1383               	bcf	3,7	;select IRP bank0
  2053  06F9  0080               	movwf	0
  2054  06FA                     l2739:
  2055  06FA  3001               	movlw	1
  2056  06FB  00D3               	movwf	??_itoa^(0+128)
  2057  06FC  0853               	movf	??_itoa^(0+128),w
  2058  06FD  07D5               	addwf	itoa@buf^(0+128),f
  2059  06FE                     l2741:
  2060  06FE  09CF               	comf	itoa@val^(0+128),f
  2061  06FF  09D0               	comf	(itoa@val+1)^(0+128),f
  2062  0700  0ACF               	incf	itoa@val^(0+128),f
  2063  0701  1903               	skipnz
  2064  0702  0AD0               	incf	(itoa@val+1)^(0+128),f
  2065  0703                     l2743:
  2066  0703  0850               	movf	(itoa@val+1)^(0+128),w
  2067  0704  00C7               	movwf	(utoa@val+1)^(0+128)
  2068  0705  084F               	movf	itoa@val^(0+128),w
  2069  0706  00C6               	movwf	utoa@val^(0+128)
  2070  0707  0852               	movf	(itoa@base+1)^(0+128),w
  2071  0708  00C9               	movwf	(utoa@base+1)^(0+128)
  2072  0709  0851               	movf	itoa@base^(0+128),w
  2073  070A  00C8               	movwf	utoa@base^(0+128)
  2074  070B  0855               	movf	itoa@buf^(0+128),w
  2075  070C  120A  118A  22CD  120A  118A  	fcall	_utoa
  2076  0711                     l758:
  2077  0711  0008               	return
  2078  0712                     __end_of_itoa:
  2079                           
  2080                           	psect	text5
  2081  02CD                     __ptext5:	
  2082 ;; *************** function _utoa *****************
  2083 ;; Defined at:
  2084 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  buf             1    wreg     PTR unsigned char 
  2087 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  2088 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  2089 ;;  val             2    3[BANK1 ] unsigned int 
  2090 ;;  base            2    5[BANK1 ] int 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  buf             1   11[BANK1 ] PTR unsigned char 
  2093 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  2094 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  2095 ;;  v               2    8[BANK1 ] unsigned int 
  2096 ;;  c               1   10[BANK1 ] unsigned char 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      PTR unsigned char 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         0       0       4       0       0
  2107 ;;      Locals:         0       0       4       0       0
  2108 ;;      Temps:          0       0       1       0       0
  2109 ;;      Totals:         0       0       9       0       0
  2110 ;;Total ram usage:        9 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    6
  2113 ;; This function calls:
  2114 ;;		___lwdiv
  2115 ;;		___lwmod
  2116 ;; This function is called by:
  2117 ;;		_itoa
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function _utoa
  2123  02CD                     _utoa:
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2127                           ;utoa@buf stored from wreg
  2128  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2129  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2130  02CF  00CE               	movwf	utoa@buf^(0+128)
  2131  02D0                     l2703:
  2132  02D0  0847               	movf	(utoa@val+1)^(0+128),w
  2133  02D1  00CC               	movwf	(utoa@v+1)^(0+128)
  2134  02D2  0846               	movf	utoa@val^(0+128),w
  2135  02D3  00CB               	movwf	utoa@v^(0+128)
  2136  02D4                     l2705:
  2137  02D4  0849               	movf	(utoa@base+1)^(0+128),w
  2138  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2139  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2140  02D7  00D8               	movwf	___lwdiv@divisor+1
  2141  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2142  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  2143  02DA  0848               	movf	utoa@base^(0+128),w
  2144  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2145  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2146  02DD  00D7               	movwf	___lwdiv@divisor
  2147  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2148  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2149  02E0  084C               	movf	(utoa@v+1)^(0+128),w
  2150  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2151  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2152  02E3  00DA               	movwf	___lwdiv@dividend+1
  2153  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  2154  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  2155  02E6  084B               	movf	utoa@v^(0+128),w
  2156  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2157  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2158  02E9  00D9               	movwf	___lwdiv@dividend
  2159  02EA  120A  118A  2474  120A  118A  	fcall	___lwdiv
  2160  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2161  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2162  02F1  0858               	movf	?___lwdiv+1,w
  2163  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2164  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2165  02F4  00CC               	movwf	(utoa@v+1)^(0+128)
  2166  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2167  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2168  02F7  0857               	movf	?___lwdiv,w
  2169  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  2170  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  2171  02FA  00CB               	movwf	utoa@v^(0+128)
  2172  02FB                     l2707:
  2173  02FB  3001               	movlw	1
  2174  02FC  00CA               	movwf	??_utoa^(0+128)
  2175  02FD  084A               	movf	??_utoa^(0+128),w
  2176  02FE  07CE               	addwf	utoa@buf^(0+128),f
  2177  02FF                     l2709:
  2178  02FF  084B               	movf	utoa@v^(0+128),w
  2179  0300  044C               	iorwf	(utoa@v+1)^(0+128),w
  2180  0301  1D03               	btfss	3,2
  2181  0302  2B04               	goto	u3341
  2182  0303  2B05               	goto	u3340
  2183  0304                     u3341:
  2184  0304  2AD4               	goto	l2705
  2185  0305                     u3340:
  2186  0305                     l2711:
  2187  0305  084E               	movf	utoa@buf^(0+128),w
  2188  0306  0084               	movwf	4
  2189  0307  1383               	bcf	3,7	;select IRP bank0
  2190  0308  0180               	clrf	0
  2191  0309                     l2713:
  2192  0309  3001               	movlw	1
  2193  030A  02CE               	subwf	utoa@buf^(0+128),f
  2194  030B                     l2715:
  2195  030B  0849               	movf	(utoa@base+1)^(0+128),w
  2196  030C  1283               	bcf	3,5	;RP0=0, select bank0
  2197  030D  1303               	bcf	3,6	;RP1=0, select bank0
  2198  030E  00D8               	movwf	___lwmod@divisor+1
  2199  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0310  1303               	bcf	3,6	;RP1=0, select bank1
  2201  0311  0848               	movf	utoa@base^(0+128),w
  2202  0312  1283               	bcf	3,5	;RP0=0, select bank0
  2203  0313  1303               	bcf	3,6	;RP1=0, select bank0
  2204  0314  00D7               	movwf	___lwmod@divisor
  2205  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2206  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2207  0317  0847               	movf	(utoa@val+1)^(0+128),w
  2208  0318  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0319  1303               	bcf	3,6	;RP1=0, select bank0
  2210  031A  00DA               	movwf	___lwmod@dividend+1
  2211  031B  1683               	bsf	3,5	;RP0=1, select bank1
  2212  031C  1303               	bcf	3,6	;RP1=0, select bank1
  2213  031D  0846               	movf	utoa@val^(0+128),w
  2214  031E  1283               	bcf	3,5	;RP0=0, select bank0
  2215  031F  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0320  00D9               	movwf	___lwmod@dividend
  2217  0321  120A  118A  25FC  120A  118A  	fcall	___lwmod
  2218  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2220  0328  0857               	movf	?___lwmod,w
  2221  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2222  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2223  032B  00CA               	movwf	??_utoa^(0+128)
  2224  032C  084A               	movf	??_utoa^(0+128),w
  2225  032D  00CD               	movwf	utoa@c^(0+128)
  2226  032E                     l2717:
  2227  032E  0849               	movf	(utoa@base+1)^(0+128),w
  2228  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0331  00D8               	movwf	___lwdiv@divisor+1
  2231  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2233  0334  0848               	movf	utoa@base^(0+128),w
  2234  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0337  00D7               	movwf	___lwdiv@divisor
  2237  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2239  033A  0847               	movf	(utoa@val+1)^(0+128),w
  2240  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2241  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2242  033D  00DA               	movwf	___lwdiv@dividend+1
  2243  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2244  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0340  0846               	movf	utoa@val^(0+128),w
  2246  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0343  00D9               	movwf	___lwdiv@dividend
  2249  0344  120A  118A  2474  120A  118A  	fcall	___lwdiv
  2250  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2251  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2252  034B  0858               	movf	?___lwdiv+1,w
  2253  034C  1683               	bsf	3,5	;RP0=1, select bank1
  2254  034D  1303               	bcf	3,6	;RP1=0, select bank1
  2255  034E  00C7               	movwf	(utoa@val+1)^(0+128)
  2256  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0351  0857               	movf	?___lwdiv,w
  2259  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0354  00C6               	movwf	utoa@val^(0+128)
  2262  0355                     l2719:
  2263  0355  300A               	movlw	10
  2264  0356  024D               	subwf	utoa@c^(0+128),w
  2265  0357  1C03               	skipc
  2266  0358  2B5A               	goto	u3351
  2267  0359  2B5B               	goto	u3350
  2268  035A                     u3351:
  2269  035A  2B5F               	goto	l764
  2270  035B                     u3350:
  2271  035B                     l2721:
  2272  035B  3007               	movlw	7
  2273  035C  00CA               	movwf	??_utoa^(0+128)
  2274  035D  084A               	movf	??_utoa^(0+128),w
  2275  035E  07CD               	addwf	utoa@c^(0+128),f
  2276  035F                     l764:
  2277  035F  3030               	movlw	48
  2278  0360  00CA               	movwf	??_utoa^(0+128)
  2279  0361  084A               	movf	??_utoa^(0+128),w
  2280  0362  07CD               	addwf	utoa@c^(0+128),f
  2281  0363                     l2723:
  2282  0363  084D               	movf	utoa@c^(0+128),w
  2283  0364  00CA               	movwf	??_utoa^(0+128)
  2284  0365  084E               	movf	utoa@buf^(0+128),w
  2285  0366  0084               	movwf	4
  2286  0367  084A               	movf	??_utoa^(0+128),w
  2287  0368  1383               	bcf	3,7	;select IRP bank0
  2288  0369  0080               	movwf	0
  2289  036A                     l2725:
  2290  036A  3001               	movlw	1
  2291  036B  02CE               	subwf	utoa@buf^(0+128),f
  2292  036C                     l2727:
  2293  036C  0846               	movf	utoa@val^(0+128),w
  2294  036D  0447               	iorwf	(utoa@val+1)^(0+128),w
  2295  036E  1D03               	btfss	3,2
  2296  036F  2B71               	goto	u3361
  2297  0370  2B72               	goto	u3360
  2298  0371                     u3361:
  2299  0371  2B0B               	goto	l2715
  2300  0372                     u3360:
  2301  0372                     l2729:
  2302                           
  2303                           ;	Return value of _utoa is never used
  2304  0372  3001               	movlw	1
  2305  0373  00CA               	movwf	??_utoa^(0+128)
  2306  0374  084A               	movf	??_utoa^(0+128),w
  2307  0375  07CE               	addwf	utoa@buf^(0+128),f
  2308  0376                     l766:
  2309  0376  0008               	return
  2310  0377                     __end_of_utoa:
  2311                           
  2312                           	psect	text6
  2313  05FC                     __ptext6:	
  2314 ;; *************** function ___lwmod *****************
  2315 ;; Defined at:
  2316 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  divisor         2   19[BANK0 ] unsigned int 
  2319 ;;  dividend        2   21[BANK0 ] unsigned int 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  counter         1   24[BANK0 ] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  2   19[BANK0 ] unsigned int 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       4       0       0       0
  2332 ;;      Locals:         0       1       0       0       0
  2333 ;;      Temps:          0       1       0       0       0
  2334 ;;      Totals:         0       6       0       0       0
  2335 ;;Total ram usage:        6 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    5
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_utoa
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           
  2346                           ;psect for function ___lwmod
  2347  05FC                     ___lwmod:
  2348  05FC                     l2681:	
  2349                           ;incstack = 0
  2350                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2351                           
  2352  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2353  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2354  05FE  0857               	movf	___lwmod@divisor,w
  2355  05FF  0458               	iorwf	___lwmod@divisor+1,w
  2356  0600  1903               	btfsc	3,2
  2357  0601  2E03               	goto	u3281
  2358  0602  2E04               	goto	u3280
  2359  0603                     u3281:
  2360  0603  2E33               	goto	l2699
  2361  0604                     u3280:
  2362  0604                     l2683:
  2363  0604  01DC               	clrf	___lwmod@counter
  2364  0605  0ADC               	incf	___lwmod@counter,f
  2365  0606  2E12               	goto	l2689
  2366  0607                     l2685:
  2367  0607  3001               	movlw	1
  2368  0608                     u3295:
  2369  0608  1003               	clrc
  2370  0609  0DD7               	rlf	___lwmod@divisor,f
  2371  060A  0DD8               	rlf	___lwmod@divisor+1,f
  2372  060B  3EFF               	addlw	-1
  2373  060C  1D03               	skipz
  2374  060D  2E08               	goto	u3295
  2375  060E                     l2687:
  2376  060E  3001               	movlw	1
  2377  060F  00DB               	movwf	??___lwmod
  2378  0610  085B               	movf	??___lwmod,w
  2379  0611  07DC               	addwf	___lwmod@counter,f
  2380  0612                     l2689:
  2381  0612  1FD8               	btfss	___lwmod@divisor+1,7
  2382  0613  2E15               	goto	u3301
  2383  0614  2E16               	goto	u3300
  2384  0615                     u3301:
  2385  0615  2E07               	goto	l2685
  2386  0616                     u3300:
  2387  0616                     l2691:
  2388  0616  0858               	movf	___lwmod@divisor+1,w
  2389  0617  025A               	subwf	___lwmod@dividend+1,w
  2390  0618  1D03               	skipz
  2391  0619  2E1C               	goto	u3315
  2392  061A  0857               	movf	___lwmod@divisor,w
  2393  061B  0259               	subwf	___lwmod@dividend,w
  2394  061C                     u3315:
  2395  061C  1C03               	skipc
  2396  061D  2E1F               	goto	u3311
  2397  061E  2E20               	goto	u3310
  2398  061F                     u3311:
  2399  061F  2E26               	goto	l2695
  2400  0620                     u3310:
  2401  0620                     l2693:
  2402  0620  0857               	movf	___lwmod@divisor,w
  2403  0621  02D9               	subwf	___lwmod@dividend,f
  2404  0622  0858               	movf	___lwmod@divisor+1,w
  2405  0623  1C03               	skipc
  2406  0624  03DA               	decf	___lwmod@dividend+1,f
  2407  0625  02DA               	subwf	___lwmod@dividend+1,f
  2408  0626                     l2695:
  2409  0626  3001               	movlw	1
  2410  0627                     u3325:
  2411  0627  1003               	clrc
  2412  0628  0CD8               	rrf	___lwmod@divisor+1,f
  2413  0629  0CD7               	rrf	___lwmod@divisor,f
  2414  062A  3EFF               	addlw	-1
  2415  062B  1D03               	skipz
  2416  062C  2E27               	goto	u3325
  2417  062D                     l2697:
  2418  062D  3001               	movlw	1
  2419  062E  02DC               	subwf	___lwmod@counter,f
  2420  062F  1D03               	btfss	3,2
  2421  0630  2E32               	goto	u3331
  2422  0631  2E33               	goto	u3330
  2423  0632                     u3331:
  2424  0632  2E16               	goto	l2691
  2425  0633                     u3330:
  2426  0633                     l2699:
  2427  0633  085A               	movf	___lwmod@dividend+1,w
  2428  0634  00D8               	movwf	?___lwmod+1
  2429  0635  0859               	movf	___lwmod@dividend,w
  2430  0636  00D7               	movwf	?___lwmod
  2431  0637                     l586:
  2432  0637  0008               	return
  2433  0638                     __end_of___lwmod:
  2434                           
  2435                           	psect	text7
  2436  0474                     __ptext7:	
  2437 ;; *************** function ___lwdiv *****************
  2438 ;; Defined at:
  2439 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  divisor         2   19[BANK0 ] unsigned int 
  2442 ;;  dividend        2   21[BANK0 ] unsigned int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  quotient        2    1[BANK1 ] unsigned int 
  2445 ;;  counter         1    0[BANK1 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  2   19[BANK0 ] unsigned int 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       4       0       0       0
  2456 ;;      Locals:         0       0       3       0       0
  2457 ;;      Temps:          0       1       0       0       0
  2458 ;;      Totals:         0       5       3       0       0
  2459 ;;Total ram usage:        8 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    5
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_utoa
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function ___lwdiv
  2471  0474                     ___lwdiv:
  2472  0474                     l2655:	
  2473                           ;incstack = 0
  2474                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2475                           
  2476  0474  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0475  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0476  01C4               	clrf	___lwdiv@quotient^(0+128)
  2479  0477  01C5               	clrf	(___lwdiv@quotient+1)^(0+128)
  2480  0478                     l2657:
  2481  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2483  047A  0857               	movf	___lwdiv@divisor,w
  2484  047B  0458               	iorwf	___lwdiv@divisor+1,w
  2485  047C  1903               	btfsc	3,2
  2486  047D  2C7F               	goto	u3211
  2487  047E  2C80               	goto	u3210
  2488  047F                     u3211:
  2489  047F  2CC6               	goto	l2677
  2490  0480                     u3210:
  2491  0480                     l2659:
  2492  0480  1683               	bsf	3,5	;RP0=1, select bank1
  2493  0481  1303               	bcf	3,6	;RP1=0, select bank1
  2494  0482  01C3               	clrf	___lwdiv@counter^(0+128)
  2495  0483  0AC3               	incf	___lwdiv@counter^(0+128),f
  2496  0484  2C92               	goto	l2665
  2497  0485                     l2661:
  2498  0485  3001               	movlw	1
  2499  0486                     u3225:
  2500  0486  1003               	clrc
  2501  0487  0DD7               	rlf	___lwdiv@divisor,f
  2502  0488  0DD8               	rlf	___lwdiv@divisor+1,f
  2503  0489  3EFF               	addlw	-1
  2504  048A  1D03               	skipz
  2505  048B  2C86               	goto	u3225
  2506  048C                     l2663:
  2507  048C  3001               	movlw	1
  2508  048D  00DB               	movwf	??___lwdiv
  2509  048E  085B               	movf	??___lwdiv,w
  2510  048F  1683               	bsf	3,5	;RP0=1, select bank1
  2511  0490  1303               	bcf	3,6	;RP1=0, select bank1
  2512  0491  07C3               	addwf	___lwdiv@counter^(0+128),f
  2513  0492                     l2665:
  2514  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0494  1FD8               	btfss	___lwdiv@divisor+1,7
  2517  0495  2C97               	goto	u3231
  2518  0496  2C98               	goto	u3230
  2519  0497                     u3231:
  2520  0497  2C85               	goto	l2661
  2521  0498                     u3230:
  2522  0498                     l2667:
  2523  0498  3001               	movlw	1
  2524  0499  1683               	bsf	3,5	;RP0=1, select bank1
  2525  049A  1303               	bcf	3,6	;RP1=0, select bank1
  2526  049B                     u3245:
  2527  049B  1003               	clrc
  2528  049C  0DC4               	rlf	___lwdiv@quotient^(0+128),f
  2529  049D  0DC5               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2530  049E  3EFF               	addlw	-1
  2531  049F  1D03               	skipz
  2532  04A0  2C9B               	goto	u3245
  2533  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2534  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2535  04A3  0858               	movf	___lwdiv@divisor+1,w
  2536  04A4  025A               	subwf	___lwdiv@dividend+1,w
  2537  04A5  1D03               	skipz
  2538  04A6  2CA9               	goto	u3255
  2539  04A7  0857               	movf	___lwdiv@divisor,w
  2540  04A8  0259               	subwf	___lwdiv@dividend,w
  2541  04A9                     u3255:
  2542  04A9  1C03               	skipc
  2543  04AA  2CAC               	goto	u3251
  2544  04AB  2CAD               	goto	u3250
  2545  04AC                     u3251:
  2546  04AC  2CB6               	goto	l2673
  2547  04AD                     u3250:
  2548  04AD                     l2669:
  2549  04AD  0857               	movf	___lwdiv@divisor,w
  2550  04AE  02D9               	subwf	___lwdiv@dividend,f
  2551  04AF  0858               	movf	___lwdiv@divisor+1,w
  2552  04B0  1C03               	skipc
  2553  04B1  03DA               	decf	___lwdiv@dividend+1,f
  2554  04B2  02DA               	subwf	___lwdiv@dividend+1,f
  2555  04B3                     l2671:
  2556  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2557  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2558  04B5  1444               	bsf	___lwdiv@quotient^(0+128),0
  2559  04B6                     l2673:
  2560  04B6  3001               	movlw	1
  2561  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2562  04B8                     u3265:
  2563  04B8  1003               	clrc
  2564  04B9  0CD8               	rrf	___lwdiv@divisor+1,f
  2565  04BA  0CD7               	rrf	___lwdiv@divisor,f
  2566  04BB  3EFF               	addlw	-1
  2567  04BC  1D03               	skipz
  2568  04BD  2CB8               	goto	u3265
  2569  04BE                     l2675:
  2570  04BE  3001               	movlw	1
  2571  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  2572  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  2573  04C1  02C3               	subwf	___lwdiv@counter^(0+128),f
  2574  04C2  1D03               	btfss	3,2
  2575  04C3  2CC5               	goto	u3271
  2576  04C4  2CC6               	goto	u3270
  2577  04C5                     u3271:
  2578  04C5  2C98               	goto	l2667
  2579  04C6                     u3270:
  2580  04C6                     l2677:
  2581  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2582  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  2583  04C8  0845               	movf	(___lwdiv@quotient+1)^(0+128),w
  2584  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2585  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2586  04CB  00D8               	movwf	?___lwdiv+1
  2587  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  2588  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  2589  04CE  0844               	movf	___lwdiv@quotient^(0+128),w
  2590  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2591  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2592  04D1  00D7               	movwf	?___lwdiv
  2593  04D2                     l576:
  2594  04D2  0008               	return
  2595  04D3                     __end_of___lwdiv:
  2596                           
  2597                           	psect	text8
  2598  06C5                     __ptext8:	
  2599 ;; *************** function ___wmul *****************
  2600 ;; Defined at:
  2601 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  multiplier      2   19[BANK0 ] unsigned int 
  2604 ;;  multiplicand    2   21[BANK0 ] unsigned int 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  product         2   23[BANK0 ] unsigned int 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  2   19[BANK0 ] unsigned int 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2616 ;;      Params:         0       4       0       0       0
  2617 ;;      Locals:         0       2       0       0       0
  2618 ;;      Temps:          0       0       0       0       0
  2619 ;;      Totals:         0       6       0       0       0
  2620 ;;Total ram usage:        6 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    5
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           
  2631                           ;psect for function ___wmul
  2632  06C5                     ___wmul:
  2633  06C5                     l2085:	
  2634                           ;incstack = 0
  2635                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2636                           
  2637  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2638  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  2639  06C7  01DB               	clrf	___wmul@product
  2640  06C8  01DC               	clrf	___wmul@product+1
  2641  06C9                     l2087:
  2642  06C9  1C57               	btfss	___wmul@multiplier,0
  2643  06CA  2ECC               	goto	u2021
  2644  06CB  2ECD               	goto	u2020
  2645  06CC                     u2021:
  2646  06CC  2ED3               	goto	l304
  2647  06CD                     u2020:
  2648  06CD                     l2089:
  2649  06CD  0859               	movf	___wmul@multiplicand,w
  2650  06CE  07DB               	addwf	___wmul@product,f
  2651  06CF  1803               	skipnc
  2652  06D0  0ADC               	incf	___wmul@product+1,f
  2653  06D1  085A               	movf	___wmul@multiplicand+1,w
  2654  06D2  07DC               	addwf	___wmul@product+1,f
  2655  06D3                     l304:
  2656  06D3  3001               	movlw	1
  2657  06D4                     u2035:
  2658  06D4  1003               	clrc
  2659  06D5  0DD9               	rlf	___wmul@multiplicand,f
  2660  06D6  0DDA               	rlf	___wmul@multiplicand+1,f
  2661  06D7  3EFF               	addlw	-1
  2662  06D8  1D03               	skipz
  2663  06D9  2ED4               	goto	u2035
  2664  06DA                     l2091:
  2665  06DA  3001               	movlw	1
  2666  06DB                     u2045:
  2667  06DB  1003               	clrc
  2668  06DC  0CD8               	rrf	___wmul@multiplier+1,f
  2669  06DD  0CD7               	rrf	___wmul@multiplier,f
  2670  06DE  3EFF               	addlw	-1
  2671  06DF  1D03               	skipz
  2672  06E0  2EDB               	goto	u2045
  2673  06E1                     l2093:
  2674  06E1  0857               	movf	___wmul@multiplier,w
  2675  06E2  0458               	iorwf	___wmul@multiplier+1,w
  2676  06E3  1D03               	btfss	3,2
  2677  06E4  2EE6               	goto	u2051
  2678  06E5  2EE7               	goto	u2050
  2679  06E6                     u2051:
  2680  06E6  2EC9               	goto	l2087
  2681  06E7                     u2050:
  2682  06E7                     l2095:
  2683  06E7  085C               	movf	___wmul@product+1,w
  2684  06E8  00D8               	movwf	?___wmul+1
  2685  06E9  085B               	movf	___wmul@product,w
  2686  06EA  00D7               	movwf	?___wmul
  2687  06EB                     l306:
  2688  06EB  0008               	return
  2689  06EC                     __end_of___wmul:
  2690                           
  2691                           	psect	text9
  2692  04D3                     __ptext9:	
  2693 ;; *************** function ___awmod *****************
  2694 ;; Defined at:
  2695 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;  divisor         2    4[BANK1 ] int 
  2698 ;;  dividend        2    6[BANK1 ] int 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  sign            1    9[BANK1 ] unsigned char 
  2701 ;;  counter         1    8[BANK1 ] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  2    4[BANK1 ] int 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       4       0       0
  2712 ;;      Locals:         0       0       2       0       0
  2713 ;;      Temps:          0       1       0       0       0
  2714 ;;      Totals:         0       1       6       0       0
  2715 ;;Total ram usage:        7 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    5
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function ___awmod
  2727  04D3                     ___awmod:
  2728  04D3                     l2791:	
  2729                           ;incstack = 0
  2730                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2731                           
  2732  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  2733  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  2734  04D5  01CC               	clrf	___awmod@sign^(0+128)
  2735  04D6                     l2793:
  2736  04D6  1FCA               	btfss	(___awmod@dividend+1)^(0+128),7
  2737  04D7  2CD9               	goto	u3481
  2738  04D8  2CDA               	goto	u3480
  2739  04D9                     u3481:
  2740  04D9  2CE1               	goto	l2799
  2741  04DA                     u3480:
  2742  04DA                     l2795:
  2743  04DA  09C9               	comf	___awmod@dividend^(0+128),f
  2744  04DB  09CA               	comf	(___awmod@dividend+1)^(0+128),f
  2745  04DC  0AC9               	incf	___awmod@dividend^(0+128),f
  2746  04DD  1903               	skipnz
  2747  04DE  0ACA               	incf	(___awmod@dividend+1)^(0+128),f
  2748  04DF                     l2797:
  2749  04DF  01CC               	clrf	___awmod@sign^(0+128)
  2750  04E0  0ACC               	incf	___awmod@sign^(0+128),f
  2751  04E1                     l2799:
  2752  04E1  1FC8               	btfss	(___awmod@divisor+1)^(0+128),7
  2753  04E2  2CE4               	goto	u3491
  2754  04E3  2CE5               	goto	u3490
  2755  04E4                     u3491:
  2756  04E4  2CEA               	goto	l2803
  2757  04E5                     u3490:
  2758  04E5                     l2801:
  2759  04E5  09C7               	comf	___awmod@divisor^(0+128),f
  2760  04E6  09C8               	comf	(___awmod@divisor+1)^(0+128),f
  2761  04E7  0AC7               	incf	___awmod@divisor^(0+128),f
  2762  04E8  1903               	skipnz
  2763  04E9  0AC8               	incf	(___awmod@divisor+1)^(0+128),f
  2764  04EA                     l2803:
  2765  04EA  0847               	movf	___awmod@divisor^(0+128),w
  2766  04EB  0448               	iorwf	(___awmod@divisor+1)^(0+128),w
  2767  04EC  1903               	btfsc	3,2
  2768  04ED  2CEF               	goto	u3501
  2769  04EE  2CF0               	goto	u3500
  2770  04EF                     u3501:
  2771  04EF  2D23               	goto	l2821
  2772  04F0                     u3500:
  2773  04F0                     l2805:
  2774  04F0  01CB               	clrf	___awmod@counter^(0+128)
  2775  04F1  0ACB               	incf	___awmod@counter^(0+128),f
  2776  04F2  2D02               	goto	l2811
  2777  04F3                     l2807:
  2778  04F3  3001               	movlw	1
  2779  04F4                     u3515:
  2780  04F4  1003               	clrc
  2781  04F5  0DC7               	rlf	___awmod@divisor^(0+128),f
  2782  04F6  0DC8               	rlf	(___awmod@divisor+1)^(0+128),f
  2783  04F7  3EFF               	addlw	-1
  2784  04F8  1D03               	skipz
  2785  04F9  2CF4               	goto	u3515
  2786  04FA                     l2809:
  2787  04FA  3001               	movlw	1
  2788  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  2789  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  2790  04FD  00DC               	movwf	??___awmod
  2791  04FE  085C               	movf	??___awmod,w
  2792  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  2793  0500  1303               	bcf	3,6	;RP1=0, select bank1
  2794  0501  07CB               	addwf	___awmod@counter^(0+128),f
  2795  0502                     l2811:
  2796  0502  1FC8               	btfss	(___awmod@divisor+1)^(0+128),7
  2797  0503  2D05               	goto	u3521
  2798  0504  2D06               	goto	u3520
  2799  0505                     u3521:
  2800  0505  2CF3               	goto	l2807
  2801  0506                     u3520:
  2802  0506                     l2813:
  2803  0506  0848               	movf	(___awmod@divisor+1)^(0+128),w
  2804  0507  024A               	subwf	(___awmod@dividend+1)^(0+128),w
  2805  0508  1D03               	skipz
  2806  0509  2D0C               	goto	u3535
  2807  050A  0847               	movf	___awmod@divisor^(0+128),w
  2808  050B  0249               	subwf	___awmod@dividend^(0+128),w
  2809  050C                     u3535:
  2810  050C  1C03               	skipc
  2811  050D  2D0F               	goto	u3531
  2812  050E  2D10               	goto	u3530
  2813  050F                     u3531:
  2814  050F  2D16               	goto	l2817
  2815  0510                     u3530:
  2816  0510                     l2815:
  2817  0510  0847               	movf	___awmod@divisor^(0+128),w
  2818  0511  02C9               	subwf	___awmod@dividend^(0+128),f
  2819  0512  0848               	movf	(___awmod@divisor+1)^(0+128),w
  2820  0513  1C03               	skipc
  2821  0514  03CA               	decf	(___awmod@dividend+1)^(0+128),f
  2822  0515  02CA               	subwf	(___awmod@dividend+1)^(0+128),f
  2823  0516                     l2817:
  2824  0516  3001               	movlw	1
  2825  0517                     u3545:
  2826  0517  1003               	clrc
  2827  0518  0CC8               	rrf	(___awmod@divisor+1)^(0+128),f
  2828  0519  0CC7               	rrf	___awmod@divisor^(0+128),f
  2829  051A  3EFF               	addlw	-1
  2830  051B  1D03               	skipz
  2831  051C  2D17               	goto	u3545
  2832  051D                     l2819:
  2833  051D  3001               	movlw	1
  2834  051E  02CB               	subwf	___awmod@counter^(0+128),f
  2835  051F  1D03               	btfss	3,2
  2836  0520  2D22               	goto	u3551
  2837  0521  2D23               	goto	u3550
  2838  0522                     u3551:
  2839  0522  2D06               	goto	l2813
  2840  0523                     u3550:
  2841  0523                     l2821:
  2842  0523  084C               	movf	___awmod@sign^(0+128),w
  2843  0524  1903               	btfsc	3,2
  2844  0525  2D27               	goto	u3561
  2845  0526  2D28               	goto	u3560
  2846  0527                     u3561:
  2847  0527  2D2D               	goto	l2825
  2848  0528                     u3560:
  2849  0528                     l2823:
  2850  0528  09C9               	comf	___awmod@dividend^(0+128),f
  2851  0529  09CA               	comf	(___awmod@dividend+1)^(0+128),f
  2852  052A  0AC9               	incf	___awmod@dividend^(0+128),f
  2853  052B  1903               	skipnz
  2854  052C  0ACA               	incf	(___awmod@dividend+1)^(0+128),f
  2855  052D                     l2825:
  2856  052D  084A               	movf	(___awmod@dividend+1)^(0+128),w
  2857  052E  00C8               	movwf	(?___awmod+1)^(0+128)
  2858  052F  0849               	movf	___awmod@dividend^(0+128),w
  2859  0530  00C7               	movwf	?___awmod^(0+128)
  2860  0531                     l470:
  2861  0531  0008               	return
  2862  0532                     __end_of___awmod:
  2863                           
  2864                           	psect	text10
  2865  0377                     __ptext10:	
  2866 ;; *************** function ___awdiv *****************
  2867 ;; Defined at:
  2868 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  divisor         2   19[BANK0 ] int 
  2871 ;;  dividend        2   21[BANK0 ] int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  quotient        2    2[BANK1 ] int 
  2874 ;;  sign            1    1[BANK1 ] unsigned char 
  2875 ;;  counter         1    0[BANK1 ] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  2   19[BANK0 ] int 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       4       0       0       0
  2886 ;;      Locals:         0       0       4       0       0
  2887 ;;      Temps:          0       1       0       0       0
  2888 ;;      Totals:         0       5       4       0       0
  2889 ;;Total ram usage:        9 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    5
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_main
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function ___awdiv
  2901  0377                     ___awdiv:
  2902  0377                     l2747:	
  2903                           ;incstack = 0
  2904                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2905                           
  2906  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2907  0378  1303               	bcf	3,6	;RP1=0, select bank1
  2908  0379  01C4               	clrf	___awdiv@sign^(0+128)
  2909  037A                     l2749:
  2910  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2911  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2912  037C  1FD8               	btfss	___awdiv@divisor+1,7
  2913  037D  2B7F               	goto	u3381
  2914  037E  2B80               	goto	u3380
  2915  037F                     u3381:
  2916  037F  2B89               	goto	l2755
  2917  0380                     u3380:
  2918  0380                     l2751:
  2919  0380  09D7               	comf	___awdiv@divisor,f
  2920  0381  09D8               	comf	___awdiv@divisor+1,f
  2921  0382  0AD7               	incf	___awdiv@divisor,f
  2922  0383  1903               	skipnz
  2923  0384  0AD8               	incf	___awdiv@divisor+1,f
  2924  0385                     l2753:
  2925  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2926  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2927  0387  01C4               	clrf	___awdiv@sign^(0+128)
  2928  0388  0AC4               	incf	___awdiv@sign^(0+128),f
  2929  0389                     l2755:
  2930  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2931  038A  1FDA               	btfss	___awdiv@dividend+1,7
  2932  038B  2B8D               	goto	u3391
  2933  038C  2B8E               	goto	u3390
  2934  038D                     u3391:
  2935  038D  2B99               	goto	l2761
  2936  038E                     u3390:
  2937  038E                     l2757:
  2938  038E  09D9               	comf	___awdiv@dividend,f
  2939  038F  09DA               	comf	___awdiv@dividend+1,f
  2940  0390  0AD9               	incf	___awdiv@dividend,f
  2941  0391  1903               	skipnz
  2942  0392  0ADA               	incf	___awdiv@dividend+1,f
  2943  0393                     l2759:
  2944  0393  3001               	movlw	1
  2945  0394  00DB               	movwf	??___awdiv
  2946  0395  085B               	movf	??___awdiv,w
  2947  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2948  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2949  0398  06C4               	xorwf	___awdiv@sign^(0+128),f
  2950  0399                     l2761:
  2951  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2952  039A  1303               	bcf	3,6	;RP1=0, select bank1
  2953  039B  01C5               	clrf	___awdiv@quotient^(0+128)
  2954  039C  01C6               	clrf	(___awdiv@quotient+1)^(0+128)
  2955  039D                     l2763:
  2956  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2957  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2958  039F  0857               	movf	___awdiv@divisor,w
  2959  03A0  0458               	iorwf	___awdiv@divisor+1,w
  2960  03A1  1903               	btfsc	3,2
  2961  03A2  2BA4               	goto	u3401
  2962  03A3  2BA5               	goto	u3400
  2963  03A4                     u3401:
  2964  03A4  2BEB               	goto	l2783
  2965  03A5                     u3400:
  2966  03A5                     l2765:
  2967  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2968  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2969  03A7  01C3               	clrf	___awdiv@counter^(0+128)
  2970  03A8  0AC3               	incf	___awdiv@counter^(0+128),f
  2971  03A9  2BB7               	goto	l2771
  2972  03AA                     l2767:
  2973  03AA  3001               	movlw	1
  2974  03AB                     u3415:
  2975  03AB  1003               	clrc
  2976  03AC  0DD7               	rlf	___awdiv@divisor,f
  2977  03AD  0DD8               	rlf	___awdiv@divisor+1,f
  2978  03AE  3EFF               	addlw	-1
  2979  03AF  1D03               	skipz
  2980  03B0  2BAB               	goto	u3415
  2981  03B1                     l2769:
  2982  03B1  3001               	movlw	1
  2983  03B2  00DB               	movwf	??___awdiv
  2984  03B3  085B               	movf	??___awdiv,w
  2985  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2986  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2987  03B6  07C3               	addwf	___awdiv@counter^(0+128),f
  2988  03B7                     l2771:
  2989  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2990  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2991  03B9  1FD8               	btfss	___awdiv@divisor+1,7
  2992  03BA  2BBC               	goto	u3421
  2993  03BB  2BBD               	goto	u3420
  2994  03BC                     u3421:
  2995  03BC  2BAA               	goto	l2767
  2996  03BD                     u3420:
  2997  03BD                     l2773:
  2998  03BD  3001               	movlw	1
  2999  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  3000  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  3001  03C0                     u3435:
  3002  03C0  1003               	clrc
  3003  03C1  0DC5               	rlf	___awdiv@quotient^(0+128),f
  3004  03C2  0DC6               	rlf	(___awdiv@quotient+1)^(0+128),f
  3005  03C3  3EFF               	addlw	-1
  3006  03C4  1D03               	skipz
  3007  03C5  2BC0               	goto	u3435
  3008  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  3009  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  3010  03C8  0858               	movf	___awdiv@divisor+1,w
  3011  03C9  025A               	subwf	___awdiv@dividend+1,w
  3012  03CA  1D03               	skipz
  3013  03CB  2BCE               	goto	u3445
  3014  03CC  0857               	movf	___awdiv@divisor,w
  3015  03CD  0259               	subwf	___awdiv@dividend,w
  3016  03CE                     u3445:
  3017  03CE  1C03               	skipc
  3018  03CF  2BD1               	goto	u3441
  3019  03D0  2BD2               	goto	u3440
  3020  03D1                     u3441:
  3021  03D1  2BDB               	goto	l2779
  3022  03D2                     u3440:
  3023  03D2                     l2775:
  3024  03D2  0857               	movf	___awdiv@divisor,w
  3025  03D3  02D9               	subwf	___awdiv@dividend,f
  3026  03D4  0858               	movf	___awdiv@divisor+1,w
  3027  03D5  1C03               	skipc
  3028  03D6  03DA               	decf	___awdiv@dividend+1,f
  3029  03D7  02DA               	subwf	___awdiv@dividend+1,f
  3030  03D8                     l2777:
  3031  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  3032  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  3033  03DA  1445               	bsf	___awdiv@quotient^(0+128),0
  3034  03DB                     l2779:
  3035  03DB  3001               	movlw	1
  3036  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3037  03DD                     u3455:
  3038  03DD  1003               	clrc
  3039  03DE  0CD8               	rrf	___awdiv@divisor+1,f
  3040  03DF  0CD7               	rrf	___awdiv@divisor,f
  3041  03E0  3EFF               	addlw	-1
  3042  03E1  1D03               	skipz
  3043  03E2  2BDD               	goto	u3455
  3044  03E3                     l2781:
  3045  03E3  3001               	movlw	1
  3046  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  3047  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  3048  03E6  02C3               	subwf	___awdiv@counter^(0+128),f
  3049  03E7  1D03               	btfss	3,2
  3050  03E8  2BEA               	goto	u3461
  3051  03E9  2BEB               	goto	u3460
  3052  03EA                     u3461:
  3053  03EA  2BBD               	goto	l2773
  3054  03EB                     u3460:
  3055  03EB                     l2783:
  3056  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  3057  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  3058  03ED  0844               	movf	___awdiv@sign^(0+128),w
  3059  03EE  1903               	btfsc	3,2
  3060  03EF  2BF1               	goto	u3471
  3061  03F0  2BF2               	goto	u3470
  3062  03F1                     u3471:
  3063  03F1  2BF7               	goto	l2787
  3064  03F2                     u3470:
  3065  03F2                     l2785:
  3066  03F2  09C5               	comf	___awdiv@quotient^(0+128),f
  3067  03F3  09C6               	comf	(___awdiv@quotient+1)^(0+128),f
  3068  03F4  0AC5               	incf	___awdiv@quotient^(0+128),f
  3069  03F5  1903               	skipnz
  3070  03F6  0AC6               	incf	(___awdiv@quotient+1)^(0+128),f
  3071  03F7                     l2787:
  3072  03F7  0846               	movf	(___awdiv@quotient+1)^(0+128),w
  3073  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3074  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3075  03FA  00D8               	movwf	?___awdiv+1
  3076  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3077  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3078  03FD  0845               	movf	___awdiv@quotient^(0+128),w
  3079  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3080  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0400  00D7               	movwf	?___awdiv
  3082  0401                     l457:
  3083  0401  0008               	return
  3084  0402                     __end_of___awdiv:
  3085                           
  3086                           	psect	text11
  3087  0FD9                     __ptext11:	
  3088 ;; *************** function _SERIAL_Init *****************
  3089 ;; Defined at:
  3090 ;;		line 8 in file "UART.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3104 ;;      Params:         0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    5
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           
  3119                           ;psect for function _SERIAL_Init
  3120  0FD9                     _SERIAL_Init:
  3121  0FD9                     l2007:	
  3122                           ;incstack = 0
  3123                           ; Regs used in _SERIAL_Init: [wreg]
  3124                           
  3125                           
  3126                           ;UART.c: 9:     SPBRG = 25;
  3127  0FD9  3019               	movlw	25
  3128  0FDA  1683               	bsf	3,5	;RP0=1, select bank1
  3129  0FDB  1303               	bcf	3,6	;RP1=0, select bank1
  3130  0FDC  0099               	movwf	25	;volatile
  3131  0FDD                     l2009:
  3132                           
  3133                           ;UART.c: 11:     TXSTAbits.BRGH = 1;
  3134  0FDD  1518               	bsf	24,2	;volatile
  3135  0FDE                     l2011:
  3136                           
  3137                           ;UART.c: 12:     TXSTAbits.TXEN = 1;
  3138  0FDE  1698               	bsf	24,5	;volatile
  3139  0FDF                     l2013:
  3140                           
  3141                           ;UART.c: 13:     TXSTAbits.SYNC = 0;
  3142  0FDF  1218               	bcf	24,4	;volatile
  3143  0FE0                     l2015:
  3144                           
  3145                           ;UART.c: 14:     TXSTAbits.TX9 = 0;
  3146  0FE0  1318               	bcf	24,6	;volatile
  3147  0FE1                     l2017:
  3148                           
  3149                           ;UART.c: 16:     RCSTAbits.CREN = 1;
  3150  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  3151  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  3152  0FE3  1618               	bsf	24,4	;volatile
  3153  0FE4                     l2019:
  3154                           
  3155                           ;UART.c: 17:     RCSTAbits.SPEN = 1;
  3156  0FE4  1798               	bsf	24,7	;volatile
  3157  0FE5                     l2021:
  3158                           
  3159                           ;UART.c: 18:     RCSTAbits.RX9 = 0;
  3160  0FE5  1318               	bcf	24,6	;volatile
  3161  0FE6                     l2023:
  3162                           
  3163                           ;UART.c: 20:     PIE1bits.RCIE = 1;
  3164  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  3165  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  3166  0FE8  168C               	bsf	12,5	;volatile
  3167  0FE9                     l2025:
  3168                           
  3169                           ;UART.c: 21:     INTCONbits.PEIE = 1;
  3170  0FE9  170B               	bsf	11,6	;volatile
  3171  0FEA                     l2027:
  3172                           
  3173                           ;UART.c: 22:     INTCONbits.GIE = 1;
  3174  0FEA  178B               	bsf	11,7	;volatile
  3175  0FEB                     l203:
  3176  0FEB  0008               	return
  3177  0FEC                     __end_of_SERIAL_Init:
  3178                           
  3179                           	psect	text12
  3180  069D                     __ptext12:	
  3181 ;; *************** function _Lcd_Write_String *****************
  3182 ;; Defined at:
  3183 ;;		line 83 in file "LCD.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  a               2   22[BANK0 ] PTR unsigned char 
  3186 ;;		 -> STR_5(2), STR_4(2), POT2SC(5), POT1SC(5), 
  3187 ;;		 -> STR_1(17), COMPARE(5), 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       2       0       0       0
  3200 ;;      Locals:         0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0
  3202 ;;      Totals:         0       2       0       0       0
  3203 ;;Total ram usage:        2 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    6
  3206 ;; This function calls:
  3207 ;;		_Lcd_Write_Char
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           
  3214                           ;psect for function _Lcd_Write_String
  3215  069D                     _Lcd_Write_String:
  3216  069D                     l2031:	
  3217                           ;incstack = 0
  3218                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3219                           
  3220                           
  3221                           ;LCD.c: 84:     while(*a != 0)
  3222  069D  2EB4               	goto	l2037
  3223  069E                     l2033:
  3224                           
  3225                           ;LCD.c: 85:         Lcd_Write_Char(*a++);
  3226  069E  085B               	movf	Lcd_Write_String@a+1,w
  3227  069F  00FF               	movwf	btemp+1
  3228  06A0  085A               	movf	Lcd_Write_String@a,w
  3229  06A1  0084               	movwf	4
  3230  06A2  120A  118A  2738  120A  118A  	fcall	stringtab
  3231  06A7  120A  118A  2576  120A  118A  	fcall	_Lcd_Write_Char
  3232  06AC                     l2035:
  3233  06AC  3001               	movlw	1
  3234  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3235  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3236  06AF  07DA               	addwf	Lcd_Write_String@a,f
  3237  06B0  1803               	skipnc
  3238  06B1  0ADB               	incf	Lcd_Write_String@a+1,f
  3239  06B2  3000               	movlw	0
  3240  06B3  07DB               	addwf	Lcd_Write_String@a+1,f
  3241  06B4                     l2037:
  3242                           
  3243                           ;LCD.c: 84:     while(*a != 0)
  3244  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3245  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  3246  06B6  085B               	movf	Lcd_Write_String@a+1,w
  3247  06B7  00FF               	movwf	btemp+1
  3248  06B8  085A               	movf	Lcd_Write_String@a,w
  3249  06B9  0084               	movwf	4
  3250  06BA  120A  118A  2738  120A  118A  	fcall	stringtab
  3251  06BF  3A00               	xorlw	0
  3252  06C0  1D03               	skipz
  3253  06C1  2EC3               	goto	u1971
  3254  06C2  2EC4               	goto	u1970
  3255  06C3                     u1971:
  3256  06C3  2E9E               	goto	l2033
  3257  06C4                     u1970:
  3258  06C4                     l153:
  3259  06C4  0008               	return
  3260  06C5                     __end_of_Lcd_Write_String:
  3261                           
  3262                           	psect	text13
  3263  0576                     __ptext13:	
  3264 ;; *************** function _Lcd_Write_Char *****************
  3265 ;; Defined at:
  3266 ;;		line 60 in file "LCD.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  a               1    wreg     unsigned char 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  a               1   21[BANK0 ] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3280 ;;      Params:         0       0       0       0       0
  3281 ;;      Locals:         0       1       0       0       0
  3282 ;;      Temps:          0       2       0       0       0
  3283 ;;      Totals:         0       3       0       0       0
  3284 ;;Total ram usage:        3 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    5
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_Lcd_Write_String
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           
  3295                           ;psect for function _Lcd_Write_Char
  3296  0576                     _Lcd_Write_Char:
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0]
  3300                           ;Lcd_Write_Char@a stored from wreg
  3301  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3302  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3303  0578  00D9               	movwf	Lcd_Write_Char@a
  3304  0579                     l1909:
  3305                           
  3306                           ;LCD.c: 61:     PORTD = 0xFF;
  3307  0579  30FF               	movlw	255
  3308  057A  0088               	movwf	8	;volatile
  3309  057B                     l1911:
  3310                           
  3311                           ;LCD.c: 62:     PORTD &= 0x80;
  3312  057B  3080               	movlw	128
  3313  057C  00D7               	movwf	??_Lcd_Write_Char
  3314  057D  0857               	movf	??_Lcd_Write_Char,w
  3315  057E  0588               	andwf	8,f	;volatile
  3316  057F                     l1913:
  3317                           
  3318                           ;LCD.c: 63:     RE0 = 0;
  3319  057F  1009               	bcf	9,0	;volatile
  3320  0580                     l1915:
  3321                           
  3322                           ;LCD.c: 64:     RE1 = 1;
  3323  0580  1489               	bsf	9,1	;volatile
  3324  0581                     l1917:
  3325                           
  3326                           ;LCD.c: 65:     RE2 = 0;
  3327  0581  1109               	bcf	9,2	;volatile
  3328  0582                     l1919:
  3329                           
  3330                           ;LCD.c: 66:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3331  0582  3027               	movlw	39
  3332  0583  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0584  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0585  00D8               	movwf	??_Lcd_Write_Char+1
  3335  0586  30F4               	movlw	244
  3336  0587  00D7               	movwf	??_Lcd_Write_Char
  3337  0588                     u3597:
  3338  0588  0BD7               	decfsz	??_Lcd_Write_Char,f
  3339  0589  2D88               	goto	u3597
  3340  058A  0BD8               	decfsz	??_Lcd_Write_Char+1,f
  3341  058B  2D88               	goto	u3597
  3342  058C  0000               	nop
  3343  058D                     l1921:
  3344                           
  3345                           ;LCD.c: 67:     RE2 = 1;
  3346  058D  1283               	bcf	3,5	;RP0=0, select bank0
  3347  058E  1303               	bcf	3,6	;RP1=0, select bank0
  3348  058F  1509               	bsf	9,2	;volatile
  3349                           
  3350                           ;LCD.c: 68:     if (PORTD == 0x80){
  3351  0590  3080               	movlw	128
  3352  0591  0608               	xorwf	8,w	;volatile
  3353  0592  1D03               	btfss	3,2
  3354  0593  2D95               	goto	u1921
  3355  0594  2D96               	goto	u1920
  3356  0595                     u1921:
  3357  0595  2DA5               	goto	l1929
  3358  0596                     u1920:
  3359  0596                     l1923:
  3360                           
  3361                           ;LCD.c: 69:     RE2 = 0;
  3362  0596  1109               	bcf	9,2	;volatile
  3363  0597                     l1925:
  3364                           
  3365                           ;LCD.c: 70:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3366  0597  3027               	movlw	39
  3367  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3368  0599  1303               	bcf	3,6	;RP1=0, select bank0
  3369  059A  00D8               	movwf	??_Lcd_Write_Char+1
  3370  059B  30F4               	movlw	244
  3371  059C  00D7               	movwf	??_Lcd_Write_Char
  3372  059D                     u3607:
  3373  059D  0BD7               	decfsz	??_Lcd_Write_Char,f
  3374  059E  2D9D               	goto	u3607
  3375  059F  0BD8               	decfsz	??_Lcd_Write_Char+1,f
  3376  05A0  2D9D               	goto	u3607
  3377  05A1  0000               	nop
  3378  05A2                     l1927:
  3379                           
  3380                           ;LCD.c: 71:     RE2 = 1;
  3381  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3382  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  3383  05A4  1509               	bsf	9,2	;volatile
  3384  05A5                     l1929:	
  3385                           ;LCD.c: 72:     }
  3386                           
  3387                           
  3388                           ;LCD.c: 75:     PORTD = a;
  3389  05A5  0859               	movf	Lcd_Write_Char@a,w
  3390  05A6  0088               	movwf	8	;volatile
  3391  05A7                     l1931:
  3392                           
  3393                           ;LCD.c: 76:     RE0 = 1;
  3394  05A7  1409               	bsf	9,0	;volatile
  3395  05A8                     l1933:
  3396                           
  3397                           ;LCD.c: 77:     RE1 = 0;
  3398  05A8  1089               	bcf	9,1	;volatile
  3399  05A9                     l1935:
  3400                           
  3401                           ;LCD.c: 78:     RE2 = 1;
  3402  05A9  1509               	bsf	9,2	;volatile
  3403                           
  3404                           ;LCD.c: 79:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3405  05AA  3027               	movlw	39
  3406  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  3407  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  3408  05AD  00D8               	movwf	??_Lcd_Write_Char+1
  3409  05AE  30F4               	movlw	244
  3410  05AF  00D7               	movwf	??_Lcd_Write_Char
  3411  05B0                     u3617:
  3412  05B0  0BD7               	decfsz	??_Lcd_Write_Char,f
  3413  05B1  2DB0               	goto	u3617
  3414  05B2  0BD8               	decfsz	??_Lcd_Write_Char+1,f
  3415  05B3  2DB0               	goto	u3617
  3416  05B4  0000               	nop
  3417  05B5                     l1937:
  3418                           
  3419                           ;LCD.c: 80:     RE2 = 0;
  3420  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3421  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3422  05B7  1109               	bcf	9,2	;volatile
  3423  05B8                     l147:
  3424  05B8  0008               	return
  3425  05B9                     __end_of_Lcd_Write_Char:
  3426                           
  3427                           	psect	text14
  3428  079E                     __ptext14:	
  3429 ;; *************** function _Lcd_Init *****************
  3430 ;; Defined at:
  3431 ;;		line 52 in file "LCD.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, pclath, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         0       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0
  3448 ;;      Totals:         0       0       0       0       0
  3449 ;;Total ram usage:        0 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    6
  3452 ;; This function calls:
  3453 ;;		_Lcd_Cmd
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459                           
  3460                           ;psect for function _Lcd_Init
  3461  079E                     _Lcd_Init:
  3462  079E                     l2005:	
  3463                           ;incstack = 0
  3464                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3465                           
  3466                           
  3467                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  3468  079E  3038               	movlw	56
  3469  079F  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  3470                           
  3471                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  3472  07A4  300C               	movlw	12
  3473  07A5  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  3474                           
  3475                           ;LCD.c: 55:     Lcd_Cmd(0x01);
  3476  07AA  3001               	movlw	1
  3477  07AB  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  3478                           
  3479                           ;LCD.c: 56:     Lcd_Cmd(0x06);
  3480  07B0  3006               	movlw	6
  3481  07B1  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  3482                           
  3483                           ;LCD.c: 57:     Lcd_Cmd(0x80);
  3484  07B6  3080               	movlw	128
  3485  07B7  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  3486  07BC                     l142:
  3487  07BC  0008               	return
  3488  07BD                     __end_of_Lcd_Init:
  3489                           
  3490                           	psect	text15
  3491  05B9                     __ptext15:	
  3492 ;; *************** function _Lcd_Cmd *****************
  3493 ;; Defined at:
  3494 ;;		line 13 in file "LCD.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  a               1    wreg     unsigned char 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  a               1   21[BANK0 ] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3508 ;;      Params:         0       0       0       0       0
  3509 ;;      Locals:         0       1       0       0       0
  3510 ;;      Temps:          0       2       0       0       0
  3511 ;;      Totals:         0       3       0       0       0
  3512 ;;Total ram usage:        3 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    5
  3515 ;; This function calls:
  3516 ;;		Nothing
  3517 ;; This function is called by:
  3518 ;;		_main
  3519 ;;		_Lcd_Init
  3520 ;;		_Lcd_Clear
  3521 ;;		_Lcd_Set_Cursor
  3522 ;;		_Lcd_Shift_Right
  3523 ;;		_Lcd_Shift_Left
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _Lcd_Cmd
  3529  05B9                     _Lcd_Cmd:
  3530                           
  3531                           ;incstack = 0
  3532                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0]
  3533                           ;Lcd_Cmd@a stored from wreg
  3534  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3535  05BA  1303               	bcf	3,6	;RP1=0, select bank0
  3536  05BB  00D9               	movwf	Lcd_Cmd@a
  3537  05BC                     l1879:
  3538                           
  3539                           ;LCD.c: 14:  PORTD = 0xFF;
  3540  05BC  30FF               	movlw	255
  3541  05BD  0088               	movwf	8	;volatile
  3542  05BE                     l1881:
  3543                           
  3544                           ;LCD.c: 15:     PORTD &= 0x80;
  3545  05BE  3080               	movlw	128
  3546  05BF  00D7               	movwf	??_Lcd_Cmd
  3547  05C0  0857               	movf	??_Lcd_Cmd,w
  3548  05C1  0588               	andwf	8,f	;volatile
  3549  05C2                     l1883:
  3550                           
  3551                           ;LCD.c: 16:     RE0 = 0;
  3552  05C2  1009               	bcf	9,0	;volatile
  3553  05C3                     l1885:
  3554                           
  3555                           ;LCD.c: 17:     RE1 = 1;
  3556  05C3  1489               	bsf	9,1	;volatile
  3557  05C4                     l1887:
  3558                           
  3559                           ;LCD.c: 18:     RE2 = 0;
  3560  05C4  1109               	bcf	9,2	;volatile
  3561  05C5                     l1889:
  3562                           
  3563                           ;LCD.c: 19:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3564  05C5  3027               	movlw	39
  3565  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3566  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  3567  05C8  00D8               	movwf	??_Lcd_Cmd+1
  3568  05C9  30F4               	movlw	244
  3569  05CA  00D7               	movwf	??_Lcd_Cmd
  3570  05CB                     u3627:
  3571  05CB  0BD7               	decfsz	??_Lcd_Cmd,f
  3572  05CC  2DCB               	goto	u3627
  3573  05CD  0BD8               	decfsz	??_Lcd_Cmd+1,f
  3574  05CE  2DCB               	goto	u3627
  3575  05CF  0000               	nop
  3576  05D0                     l1891:
  3577                           
  3578                           ;LCD.c: 20:     RE2 = 1;
  3579  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  3580  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  3581  05D2  1509               	bsf	9,2	;volatile
  3582                           
  3583                           ;LCD.c: 21:     if (PORTD == 0x80){
  3584  05D3  3080               	movlw	128
  3585  05D4  0608               	xorwf	8,w	;volatile
  3586  05D5  1D03               	btfss	3,2
  3587  05D6  2DD8               	goto	u1911
  3588  05D7  2DD9               	goto	u1910
  3589  05D8                     u1911:
  3590  05D8  2DE8               	goto	l1899
  3591  05D9                     u1910:
  3592  05D9                     l1893:
  3593                           
  3594                           ;LCD.c: 22:     RE2 = 0;
  3595  05D9  1109               	bcf	9,2	;volatile
  3596  05DA                     l1895:
  3597                           
  3598                           ;LCD.c: 23:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3599  05DA  3027               	movlw	39
  3600  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3601  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3602  05DD  00D8               	movwf	??_Lcd_Cmd+1
  3603  05DE  30F4               	movlw	244
  3604  05DF  00D7               	movwf	??_Lcd_Cmd
  3605  05E0                     u3637:
  3606  05E0  0BD7               	decfsz	??_Lcd_Cmd,f
  3607  05E1  2DE0               	goto	u3637
  3608  05E2  0BD8               	decfsz	??_Lcd_Cmd+1,f
  3609  05E3  2DE0               	goto	u3637
  3610  05E4  0000               	nop
  3611  05E5                     l1897:
  3612                           
  3613                           ;LCD.c: 24:     RE2 = 1;
  3614  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3615  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3616  05E7  1509               	bsf	9,2	;volatile
  3617  05E8                     l1899:	
  3618                           ;LCD.c: 25:     }
  3619                           
  3620                           
  3621                           ;LCD.c: 28:     PORTD = a;
  3622  05E8  0859               	movf	Lcd_Cmd@a,w
  3623  05E9  0088               	movwf	8	;volatile
  3624  05EA                     l1901:
  3625                           
  3626                           ;LCD.c: 29:     RE0 = 0;
  3627  05EA  1009               	bcf	9,0	;volatile
  3628  05EB                     l1903:
  3629                           
  3630                           ;LCD.c: 30:     RE1 = 0;
  3631  05EB  1089               	bcf	9,1	;volatile
  3632  05EC                     l1905:
  3633                           
  3634                           ;LCD.c: 31:     RE2 = 1;
  3635  05EC  1509               	bsf	9,2	;volatile
  3636                           
  3637                           ;LCD.c: 32:     _delay((unsigned long)((30)*(4000000/4000.0)));
  3638  05ED  3027               	movlw	39
  3639  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3640  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3641  05F0  00D8               	movwf	??_Lcd_Cmd+1
  3642  05F1  30F4               	movlw	244
  3643  05F2  00D7               	movwf	??_Lcd_Cmd
  3644  05F3                     u3647:
  3645  05F3  0BD7               	decfsz	??_Lcd_Cmd,f
  3646  05F4  2DF3               	goto	u3647
  3647  05F5  0BD8               	decfsz	??_Lcd_Cmd+1,f
  3648  05F6  2DF3               	goto	u3647
  3649  05F7  0000               	nop
  3650  05F8                     l1907:
  3651                           
  3652                           ;LCD.c: 33:     RE2 = 0;
  3653  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  3654  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  3655  05FA  1109               	bcf	9,2	;volatile
  3656  05FB                     l130:
  3657  05FB  0008               	return
  3658  05FC                     __end_of_Lcd_Cmd:
  3659                           
  3660                           	psect	text16
  3661  0FEC                     __ptext16:	
  3662 ;; *************** function _ADC_Read *****************
  3663 ;; Defined at:
  3664 ;;		line 24 in file "ADC.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  a               1    wreg     unsigned char 
  3667 ;;  b               1   19[BANK0 ] unsigned char 
  3668 ;;  c               1   20[BANK0 ] unsigned char 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  a               1   21[BANK0 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, status,0
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         0       2       0       0       0
  3681 ;;      Locals:         0       1       0       0       0
  3682 ;;      Temps:          0       0       0       0       0
  3683 ;;      Totals:         0       3       0       0       0
  3684 ;;Total ram usage:        3 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    5
  3687 ;; This function calls:
  3688 ;;		Nothing
  3689 ;; This function is called by:
  3690 ;;		_main
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           
  3695                           ;psect for function _ADC_Read
  3696  0FEC                     _ADC_Read:
  3697                           
  3698                           ;incstack = 0
  3699                           ; Regs used in _ADC_Read: [wreg+status,0]
  3700                           ;ADC_Read@a stored from wreg
  3701  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  3703  0FEE  00D9               	movwf	ADC_Read@a
  3704  0FEF                     l2039:
  3705                           
  3706                           ;ADC.c: 25:     ADCON0bits.CHS0 = a;
  3707  0FEF  0C59               	rrf	ADC_Read@a,w
  3708  0FF0  1C03               	skipc
  3709  0FF1  111F               	bcf	31,2	;volatile
  3710  0FF2  1803               	skipnc
  3711  0FF3  151F               	bsf	31,2	;volatile
  3712                           
  3713                           ;ADC.c: 26:     ADCON0bits.CHS1 = b;
  3714  0FF4  0C57               	rrf	ADC_Read@b,w
  3715  0FF5  1C03               	skipc
  3716  0FF6  119F               	bcf	31,3	;volatile
  3717  0FF7  1803               	skipnc
  3718  0FF8  159F               	bsf	31,3	;volatile
  3719  0FF9                     l2041:
  3720                           
  3721                           ;ADC.c: 27:     ADCON0bits.CHS2 = 0;
  3722  0FF9  121F               	bcf	31,4	;volatile
  3723  0FFA                     l2043:
  3724                           
  3725                           ;ADC.c: 28:     ADCON0bits.CHS3 = 0;
  3726  0FFA  129F               	bcf	31,5	;volatile
  3727  0FFB                     l2045:
  3728                           
  3729                           ;ADC.c: 29:     ADCON0bits.ADON = 1;
  3730  0FFB  141F               	bsf	31,0	;volatile
  3731  0FFC                     l2047:
  3732                           
  3733                           ;ADC.c: 30:     ADCON0bits.GO = 1;
  3734  0FFC  149F               	bsf	31,1	;volatile
  3735  0FFD                     l2049:
  3736                           
  3737                           ;ADC.c: 31:     PIR1bits.ADIF = 0;
  3738  0FFD  130C               	bcf	12,6	;volatile
  3739  0FFE                     l2051:
  3740  0FFE  081E               	movf	30,w	;volatile
  3741  0FFF                     l182:
  3742  0FFF  0008               	return
  3743  1000                     __end_of_ADC_Read:
  3744                           
  3745                           	psect	text17
  3746  07F4                     __ptext17:	
  3747 ;; *************** function _ADC_Init *****************
  3748 ;; Defined at:
  3749 ;;		line 15 in file "ADC.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;		None
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;		None
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		None
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       0       0       0
  3764 ;;      Locals:         0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0
  3766 ;;      Totals:         0       0       0       0       0
  3767 ;;Total ram usage:        0 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    5
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           
  3778                           ;psect for function _ADC_Init
  3779  07F4                     _ADC_Init:
  3780  07F4                     l2029:	
  3781                           ;incstack = 0
  3782                           ; Regs used in _ADC_Init: []
  3783                           
  3784                           
  3785                           ;ADC.c: 16:     ADCON0bits.ADCS0 = 1;
  3786  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  3787  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  3788  07F6  171F               	bsf	31,6	;volatile
  3789                           
  3790                           ;ADC.c: 17:     ADCON0bits.ADCS1 = 0;
  3791  07F7  139F               	bcf	31,7	;volatile
  3792                           
  3793                           ;ADC.c: 18:     ADCON0bits.ADON = 1;
  3794  07F8  141F               	bsf	31,0	;volatile
  3795                           
  3796                           ;ADC.c: 19:     ADCON1bits.ADFM = 0;
  3797  07F9  1683               	bsf	3,5	;RP0=1, select bank1
  3798  07FA  1303               	bcf	3,6	;RP1=0, select bank1
  3799  07FB  139F               	bcf	31,7	;volatile
  3800                           
  3801                           ;ADC.c: 20:     ADCON1bits.VCFG0 = 0;
  3802  07FC  121F               	bcf	31,4	;volatile
  3803                           
  3804                           ;ADC.c: 21:     ADCON1bits.VCFG1 = 0;
  3805  07FD  129F               	bcf	31,5	;volatile
  3806  07FE                     l179:
  3807  07FE  0008               	return
  3808  07FF                     __end_of_ADC_Init:
  3809                           
  3810                           	psect	text18
  3811  077E                     __ptext18:	
  3812 ;; *************** function _ISR *****************
  3813 ;; Defined at:
  3814 ;;		line 87 in file "LAB3.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;		None
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         0       0       0       0       0
  3829 ;;      Locals:         0       0       0       0       0
  3830 ;;      Temps:          0       6       0       0       0
  3831 ;;      Totals:         0       6       0       0       0
  3832 ;;Total ram usage:        6 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    4
  3835 ;; This function calls:
  3836 ;;		_CONTADOR
  3837 ;; This function is called by:
  3838 ;;		Interrupt level 1
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           
  3843                           ;psect for function _ISR
  3844  077E                     _ISR:
  3845  077E                     i1l2181:
  3846                           
  3847                           ;LAB3.c: 88:     if (RCIF==1){
  3848  077E  1E8C               	btfss	12,5	;volatile
  3849  077F  2F81               	goto	u225_21
  3850  0780  2F82               	goto	u225_20
  3851  0781                     u225_21:
  3852  0781  2F95               	goto	i1l104
  3853  0782                     u225_20:
  3854  0782                     i1l2183:
  3855                           
  3856                           ;LAB3.c: 89:         CONTADOR ((int)RCREG,COMPARE);
  3857  0782  081A               	movf	26,w	;volatile
  3858  0783  00D1               	movwf	??_ISR
  3859  0784  01D2               	clrf	??_ISR+1
  3860  0785  0851               	movf	??_ISR,w
  3861  0786  00CE               	movwf	CONTADOR@n
  3862  0787  0852               	movf	??_ISR+1,w
  3863  0788  00CF               	movwf	CONTADOR@n+1
  3864  0789  30A0               	movlw	(low (_COMPARE| 0))& (0+255)
  3865  078A  00D3               	movwf	??_ISR+2
  3866  078B  0853               	movf	??_ISR+2,w
  3867  078C  00D0               	movwf	CONTADOR@a
  3868  078D  120A  118A  27DB  120A  118A  	fcall	_CONTADOR
  3869  0792                     i1l2185:
  3870                           
  3871                           ;LAB3.c: 91:         RCIF=0;
  3872  0792  1283               	bcf	3,5	;RP0=0, select bank0
  3873  0793  1303               	bcf	3,6	;RP1=0, select bank0
  3874  0794  128C               	bcf	12,5	;volatile
  3875  0795                     i1l104:
  3876  0795  0856               	movf	??_ISR+5,w
  3877  0796  008A               	movwf	10
  3878  0797  0855               	movf	??_ISR+4,w
  3879  0798  0084               	movwf	4
  3880  0799  0E54               	swapf	??_ISR+3,w
  3881  079A  0083               	movwf	3
  3882  079B  0EFE               	swapf	btemp,f
  3883  079C  0E7E               	swapf	btemp,w
  3884  079D  0009               	retfie
  3885  079E                     __end_of_ISR:
  3886                           
  3887                           	psect	intentry
  3888  0004                     __pintentry:	
  3889                           ;incstack = 0
  3890                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3891                           
  3892  0004                     interrupt_function:
  3893  007E                     saved_w	set	btemp
  3894  0004  00FE               	movwf	btemp
  3895  0005  0E03               	swapf	3,w
  3896  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3897  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3898  0008  00D4               	movwf	??_ISR+3
  3899  0009  0804               	movf	4,w
  3900  000A  00D5               	movwf	??_ISR+4
  3901  000B  080A               	movf	10,w
  3902  000C  00D6               	movwf	??_ISR+5
  3903  000D  120A  118A  2F7E   	ljmp	_ISR
  3904                           
  3905                           	psect	text19
  3906  07DB                     __ptext19:	
  3907 ;; *************** function _CONTADOR *****************
  3908 ;; Defined at:
  3909 ;;		line 8 in file "ADC.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  n               2   10[BANK0 ] int 
  3912 ;;  a               1   12[BANK0 ] PTR unsigned char 
  3913 ;;		 -> COMPARE(5), 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3925 ;;      Params:         0       3       0       0       0
  3926 ;;      Locals:         0       0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0
  3928 ;;      Totals:         0       3       0       0       0
  3929 ;;Total ram usage:        3 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    3
  3932 ;; This function calls:
  3933 ;;		i1_itoa
  3934 ;; This function is called by:
  3935 ;;		_ISR
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           
  3940                           ;psect for function _CONTADOR
  3941  07DB                     _CONTADOR:
  3942  07DB                     i1l1983:	
  3943                           ;incstack = 0
  3944                           ; Regs used in _CONTADOR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3945                           
  3946                           
  3947                           ;ADC.c: 9:     Destination = n;
  3948  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  3949  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  3950  07DD  084F               	movf	CONTADOR@n+1,w
  3951  07DE  00B5               	movwf	_Destination+1
  3952  07DF  084E               	movf	CONTADOR@n,w
  3953  07E0  00B4               	movwf	_Destination
  3954                           
  3955                           ;ADC.c: 10:     O = (Destination)*1;
  3956  07E1  0835               	movf	_Destination+1,w
  3957  07E2  00B7               	movwf	_O+1
  3958  07E3  0834               	movf	_Destination,w
  3959  07E4  00B6               	movwf	_O
  3960  07E5                     i1l1985:
  3961                           
  3962                           ;ADC.c: 11:     itoa(a,O,10);
  3963  07E5  0837               	movf	_O+1,w
  3964  07E6  00C9               	movwf	i1itoa@val+1
  3965  07E7  0836               	movf	_O,w
  3966  07E8  00C8               	movwf	i1itoa@val
  3967  07E9  300A               	movlw	10
  3968  07EA  00CA               	movwf	i1itoa@base
  3969  07EB  3000               	movlw	0
  3970  07EC  00CB               	movwf	i1itoa@base+1
  3971  07ED  0850               	movf	CONTADOR@a,w
  3972  07EE  120A  118A  2712  120A  118A  	fcall	i1_itoa
  3973  07F3                     i1l176:
  3974  07F3  0008               	return
  3975  07F4                     __end_of_CONTADOR:
  3976                           
  3977                           	psect	text20
  3978  0712                     __ptext20:	
  3979 ;; *************** function i1_itoa *****************
  3980 ;; Defined at:
  3981 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  buf             1    wreg     PTR unsigned char 
  3984 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  3985 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  3986 ;;  val             2    4[BANK0 ] int 
  3987 ;;  base            2    6[BANK0 ] int 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  3990 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  3991 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  3992 ;;  cp              1    0        PTR unsigned char 
  3993 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  3994 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      PTR unsigned char 
  3997 ;; Registers used:
  3998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4004 ;;      Params:         0       4       0       0       0
  4005 ;;      Locals:         0       2       0       0       0
  4006 ;;      Temps:          1       0       0       0       0
  4007 ;;      Totals:         1       6       0       0       0
  4008 ;;Total ram usage:        7 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    2
  4011 ;; This function calls:
  4012 ;;		i1_utoa
  4013 ;; This function is called by:
  4014 ;;		_CONTADOR
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           
  4019                           ;psect for function i1_itoa
  4020  0712                     i1_itoa:
  4021                           
  4022                           ;incstack = 0
  4023                           ; Regs used in i1_itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4024                           ;i1itoa@buf stored from wreg
  4025  0712  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0713  1303               	bcf	3,6	;RP1=0, select bank0
  4027  0714  00CD               	movwf	i1itoa@buf
  4028  0715                     i1l1969:
  4029  0715                     i1l1971:
  4030  0715  1FC9               	btfss	i1itoa@val+1,7
  4031  0716  2F18               	goto	u196_21
  4032  0717  2F19               	goto	u196_20
  4033  0718                     u196_21:
  4034  0718  2F29               	goto	i1l1979
  4035  0719                     u196_20:
  4036  0719                     i1l1973:
  4037  0719  302D               	movlw	45
  4038  071A  00FD               	movwf	??i1_itoa
  4039  071B  084D               	movf	i1itoa@buf,w
  4040  071C  0084               	movwf	4
  4041  071D  087D               	movf	??i1_itoa,w
  4042  071E  1383               	bcf	3,7	;select IRP bank0
  4043  071F  0080               	movwf	0
  4044  0720                     i1l1975:
  4045  0720  3001               	movlw	1
  4046  0721  00FD               	movwf	??i1_itoa
  4047  0722  087D               	movf	??i1_itoa,w
  4048  0723  07CD               	addwf	i1itoa@buf,f
  4049  0724                     i1l1977:
  4050  0724  09C8               	comf	i1itoa@val,f
  4051  0725  09C9               	comf	i1itoa@val+1,f
  4052  0726  0AC8               	incf	i1itoa@val,f
  4053  0727  1903               	skipnz
  4054  0728  0AC9               	incf	i1itoa@val+1,f
  4055  0729                     i1l1979:
  4056  0729  0849               	movf	i1itoa@val+1,w
  4057  072A  00F9               	movwf	i1utoa@val+1
  4058  072B  0848               	movf	i1itoa@val,w
  4059  072C  00F8               	movwf	i1utoa@val
  4060  072D  084B               	movf	i1itoa@base+1,w
  4061  072E  00FB               	movwf	i1utoa@base+1
  4062  072F  084A               	movf	i1itoa@base,w
  4063  0730  00FA               	movwf	i1utoa@base
  4064  0731  084D               	movf	i1itoa@buf,w
  4065  0732  120A  118A  2402  120A  118A  	fcall	i1_utoa
  4066  0737                     i1l758:
  4067  0737  0008               	return
  4068  0738                     __end_ofi1_itoa:
  4069                           
  4070                           	psect	text21
  4071  0402                     __ptext21:	
  4072 ;; *************** function i1_utoa *****************
  4073 ;; Defined at:
  4074 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\itoa.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  buf             1    wreg     PTR unsigned char 
  4077 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  4078 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  4079 ;;  val             2    8[COMMON] unsigned int 
  4080 ;;  base            2   10[COMMON] int 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  4083 ;;		 -> POT2SC(5), POT2SB(5), POT2SA(5), POT1SC(5), 
  4084 ;;		 -> POT1SB(5), POT1SA(5), COMPARE(5), 
  4085 ;;  v               2    0[BANK0 ] unsigned int 
  4086 ;;  c               1    2[BANK0 ] unsigned char 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      PTR unsigned char 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4096 ;;      Params:         4       0       0       0       0
  4097 ;;      Locals:         0       4       0       0       0
  4098 ;;      Temps:          1       0       0       0       0
  4099 ;;      Totals:         5       4       0       0       0
  4100 ;;Total ram usage:        9 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    1
  4103 ;; This function calls:
  4104 ;;		i1___lwdiv
  4105 ;;		i1___lwmod
  4106 ;; This function is called by:
  4107 ;;		i1_itoa
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function i1_utoa
  4113  0402                     i1_utoa:
  4114                           
  4115                           ;incstack = 0
  4116                           ; Regs used in i1_utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4117                           ;i1utoa@buf stored from wreg
  4118  0402  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0403  1303               	bcf	3,6	;RP1=0, select bank0
  4120  0404  00C7               	movwf	i1utoa@buf
  4121  0405                     i1l1849:
  4122  0405  0879               	movf	i1utoa@val+1,w
  4123  0406  00C5               	movwf	i1utoa@v+1
  4124  0407  0878               	movf	i1utoa@val,w
  4125  0408  00C4               	movwf	i1utoa@v
  4126  0409                     i1l1851:
  4127  0409  087B               	movf	i1utoa@base+1,w
  4128  040A  00F1               	movwf	i1___lwdiv@divisor+1
  4129  040B  087A               	movf	i1utoa@base,w
  4130  040C  00F0               	movwf	i1___lwdiv@divisor
  4131  040D  0845               	movf	i1utoa@v+1,w
  4132  040E  00F3               	movwf	i1___lwdiv@dividend+1
  4133  040F  0844               	movf	i1utoa@v,w
  4134  0410  00F2               	movwf	i1___lwdiv@dividend
  4135  0411  120A  118A  2532  120A  118A  	fcall	i1___lwdiv
  4136  0416  0871               	movf	?i1___lwdiv+1,w
  4137  0417  1283               	bcf	3,5	;RP0=0, select bank0
  4138  0418  1303               	bcf	3,6	;RP1=0, select bank0
  4139  0419  00C5               	movwf	i1utoa@v+1
  4140  041A  0870               	movf	?i1___lwdiv,w
  4141  041B  00C4               	movwf	i1utoa@v
  4142  041C                     i1l1853:
  4143  041C  3001               	movlw	1
  4144  041D  00FC               	movwf	??i1_utoa
  4145  041E  087C               	movf	??i1_utoa,w
  4146  041F  07C7               	addwf	i1utoa@buf,f
  4147  0420                     i1l1855:
  4148  0420  0844               	movf	i1utoa@v,w
  4149  0421  0445               	iorwf	i1utoa@v+1,w
  4150  0422  1D03               	btfss	3,2
  4151  0423  2C25               	goto	u188_21
  4152  0424  2C26               	goto	u188_20
  4153  0425                     u188_21:
  4154  0425  2C09               	goto	i1l1851
  4155  0426                     u188_20:
  4156  0426                     i1l1857:
  4157  0426  0847               	movf	i1utoa@buf,w
  4158  0427  0084               	movwf	4
  4159  0428  1383               	bcf	3,7	;select IRP bank0
  4160  0429  0180               	clrf	0
  4161  042A                     i1l1859:
  4162  042A  3001               	movlw	1
  4163  042B  02C7               	subwf	i1utoa@buf,f
  4164  042C                     i1l1861:
  4165  042C  087B               	movf	i1utoa@base+1,w
  4166  042D  00F1               	movwf	i1___lwmod@divisor+1
  4167  042E  087A               	movf	i1utoa@base,w
  4168  042F  00F0               	movwf	i1___lwmod@divisor
  4169  0430  0879               	movf	i1utoa@val+1,w
  4170  0431  00F3               	movwf	i1___lwmod@dividend+1
  4171  0432  0878               	movf	i1utoa@val,w
  4172  0433  00F2               	movwf	i1___lwmod@dividend
  4173  0434  120A  118A  2638  120A  118A  	fcall	i1___lwmod
  4174  0439  0870               	movf	?i1___lwmod,w
  4175  043A  00FC               	movwf	??i1_utoa
  4176  043B  087C               	movf	??i1_utoa,w
  4177  043C  1283               	bcf	3,5	;RP0=0, select bank0
  4178  043D  1303               	bcf	3,6	;RP1=0, select bank0
  4179  043E  00C6               	movwf	i1utoa@c
  4180  043F                     i1l1863:
  4181  043F  087B               	movf	i1utoa@base+1,w
  4182  0440  00F1               	movwf	i1___lwdiv@divisor+1
  4183  0441  087A               	movf	i1utoa@base,w
  4184  0442  00F0               	movwf	i1___lwdiv@divisor
  4185  0443  0879               	movf	i1utoa@val+1,w
  4186  0444  00F3               	movwf	i1___lwdiv@dividend+1
  4187  0445  0878               	movf	i1utoa@val,w
  4188  0446  00F2               	movwf	i1___lwdiv@dividend
  4189  0447  120A  118A  2532  120A  118A  	fcall	i1___lwdiv
  4190  044C  0871               	movf	?i1___lwdiv+1,w
  4191  044D  00F9               	movwf	i1utoa@val+1
  4192  044E  0870               	movf	?i1___lwdiv,w
  4193  044F  00F8               	movwf	i1utoa@val
  4194  0450                     i1l1865:
  4195  0450  300A               	movlw	10
  4196  0451  1283               	bcf	3,5	;RP0=0, select bank0
  4197  0452  1303               	bcf	3,6	;RP1=0, select bank0
  4198  0453  0246               	subwf	i1utoa@c,w
  4199  0454  1C03               	skipc
  4200  0455  2C57               	goto	u189_21
  4201  0456  2C58               	goto	u189_20
  4202  0457                     u189_21:
  4203  0457  2C5C               	goto	i1l764
  4204  0458                     u189_20:
  4205  0458                     i1l1867:
  4206  0458  3007               	movlw	7
  4207  0459  00FC               	movwf	??i1_utoa
  4208  045A  087C               	movf	??i1_utoa,w
  4209  045B  07C6               	addwf	i1utoa@c,f
  4210  045C                     i1l764:
  4211  045C  3030               	movlw	48
  4212  045D  00FC               	movwf	??i1_utoa
  4213  045E  087C               	movf	??i1_utoa,w
  4214  045F  07C6               	addwf	i1utoa@c,f
  4215  0460                     i1l1869:
  4216  0460  0846               	movf	i1utoa@c,w
  4217  0461  00FC               	movwf	??i1_utoa
  4218  0462  0847               	movf	i1utoa@buf,w
  4219  0463  0084               	movwf	4
  4220  0464  087C               	movf	??i1_utoa,w
  4221  0465  1383               	bcf	3,7	;select IRP bank0
  4222  0466  0080               	movwf	0
  4223  0467                     i1l1871:
  4224  0467  3001               	movlw	1
  4225  0468  02C7               	subwf	i1utoa@buf,f
  4226  0469                     i1l1873:
  4227  0469  0878               	movf	i1utoa@val,w
  4228  046A  0479               	iorwf	i1utoa@val+1,w
  4229  046B  1D03               	btfss	3,2
  4230  046C  2C6E               	goto	u190_21
  4231  046D  2C6F               	goto	u190_20
  4232  046E                     u190_21:
  4233  046E  2C2C               	goto	i1l1861
  4234  046F                     u190_20:
  4235  046F                     i1l1875:
  4236                           
  4237                           ;	Return value of i1_utoa is never used
  4238  046F  3001               	movlw	1
  4239  0470  00FC               	movwf	??i1_utoa
  4240  0471  087C               	movf	??i1_utoa,w
  4241  0472  07C7               	addwf	i1utoa@buf,f
  4242  0473                     i1l766:
  4243  0473  0008               	return
  4244  0474                     __end_ofi1_utoa:
  4245                           
  4246                           	psect	text22
  4247  0638                     __ptext22:	
  4248 ;; *************** function i1___lwmod *****************
  4249 ;; Defined at:
  4250 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  divisor         2    0[COMMON] unsigned int 
  4253 ;;  dividend        2    2[COMMON] unsigned int 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  counter         1    5[COMMON] unsigned char 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2    0[COMMON] unsigned int 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4265 ;;      Params:         4       0       0       0       0
  4266 ;;      Locals:         1       0       0       0       0
  4267 ;;      Temps:          1       0       0       0       0
  4268 ;;      Totals:         6       0       0       0       0
  4269 ;;Total ram usage:        6 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		i1_utoa
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           
  4279                           ;psect for function i1___lwmod
  4280  0638                     i1___lwmod:
  4281  0638                     i1l1779:	
  4282                           ;incstack = 0
  4283                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  4284                           
  4285  0638  0870               	movf	i1___lwmod@divisor,w
  4286  0639  0471               	iorwf	i1___lwmod@divisor+1,w
  4287  063A  1903               	btfsc	3,2
  4288  063B  2E3D               	goto	u169_21
  4289  063C  2E3E               	goto	u169_20
  4290  063D                     u169_21:
  4291  063D  2E6D               	goto	i1l1797
  4292  063E                     u169_20:
  4293  063E                     i1l1781:
  4294  063E  01F5               	clrf	i1___lwmod@counter
  4295  063F  0AF5               	incf	i1___lwmod@counter,f
  4296  0640  2E4C               	goto	i1l1787
  4297  0641                     i1l1783:
  4298  0641  3001               	movlw	1
  4299  0642                     u170_25:
  4300  0642  1003               	clrc
  4301  0643  0DF0               	rlf	i1___lwmod@divisor,f
  4302  0644  0DF1               	rlf	i1___lwmod@divisor+1,f
  4303  0645  3EFF               	addlw	-1
  4304  0646  1D03               	skipz
  4305  0647  2E42               	goto	u170_25
  4306  0648                     i1l1785:
  4307  0648  3001               	movlw	1
  4308  0649  00F4               	movwf	??i1___lwmod
  4309  064A  0874               	movf	??i1___lwmod,w
  4310  064B  07F5               	addwf	i1___lwmod@counter,f
  4311  064C                     i1l1787:
  4312  064C  1FF1               	btfss	i1___lwmod@divisor+1,7
  4313  064D  2E4F               	goto	u171_21
  4314  064E  2E50               	goto	u171_20
  4315  064F                     u171_21:
  4316  064F  2E41               	goto	i1l1783
  4317  0650                     u171_20:
  4318  0650                     i1l1789:
  4319  0650  0871               	movf	i1___lwmod@divisor+1,w
  4320  0651  0273               	subwf	i1___lwmod@dividend+1,w
  4321  0652  1D03               	skipz
  4322  0653  2E56               	goto	u172_25
  4323  0654  0870               	movf	i1___lwmod@divisor,w
  4324  0655  0272               	subwf	i1___lwmod@dividend,w
  4325  0656                     u172_25:
  4326  0656  1C03               	skipc
  4327  0657  2E59               	goto	u172_21
  4328  0658  2E5A               	goto	u172_20
  4329  0659                     u172_21:
  4330  0659  2E60               	goto	i1l1793
  4331  065A                     u172_20:
  4332  065A                     i1l1791:
  4333  065A  0870               	movf	i1___lwmod@divisor,w
  4334  065B  02F2               	subwf	i1___lwmod@dividend,f
  4335  065C  0871               	movf	i1___lwmod@divisor+1,w
  4336  065D  1C03               	skipc
  4337  065E  03F3               	decf	i1___lwmod@dividend+1,f
  4338  065F  02F3               	subwf	i1___lwmod@dividend+1,f
  4339  0660                     i1l1793:
  4340  0660  3001               	movlw	1
  4341  0661                     u173_25:
  4342  0661  1003               	clrc
  4343  0662  0CF1               	rrf	i1___lwmod@divisor+1,f
  4344  0663  0CF0               	rrf	i1___lwmod@divisor,f
  4345  0664  3EFF               	addlw	-1
  4346  0665  1D03               	skipz
  4347  0666  2E61               	goto	u173_25
  4348  0667                     i1l1795:
  4349  0667  3001               	movlw	1
  4350  0668  02F5               	subwf	i1___lwmod@counter,f
  4351  0669  1D03               	btfss	3,2
  4352  066A  2E6C               	goto	u174_21
  4353  066B  2E6D               	goto	u174_20
  4354  066C                     u174_21:
  4355  066C  2E50               	goto	i1l1789
  4356  066D                     u174_20:
  4357  066D                     i1l1797:
  4358  066D  0873               	movf	i1___lwmod@dividend+1,w
  4359  066E  00F1               	movwf	?i1___lwmod+1
  4360  066F  0872               	movf	i1___lwmod@dividend,w
  4361  0670  00F0               	movwf	?i1___lwmod
  4362  0671                     i1l586:
  4363  0671  0008               	return
  4364  0672                     __end_ofi1___lwmod:
  4365                           
  4366                           	psect	text23
  4367  0532                     __ptext23:	
  4368 ;; *************** function i1___lwdiv *****************
  4369 ;; Defined at:
  4370 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  divisor         2    0[COMMON] unsigned int 
  4373 ;;  dividend        2    2[COMMON] unsigned int 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  quotient        2    5[COMMON] unsigned int 
  4376 ;;  counter         1    7[COMMON] unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  2    0[COMMON] unsigned int 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         4       0       0       0       0
  4387 ;;      Locals:         3       0       0       0       0
  4388 ;;      Temps:          1       0       0       0       0
  4389 ;;      Totals:         8       0       0       0       0
  4390 ;;Total ram usage:        8 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		i1_utoa
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           
  4400                           ;psect for function i1___lwdiv
  4401  0532                     i1___lwdiv:
  4402  0532                     i1l1753:	
  4403                           ;incstack = 0
  4404                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  4405                           
  4406  0532  01F5               	clrf	i1___lwdiv@quotient
  4407  0533  01F6               	clrf	i1___lwdiv@quotient+1
  4408  0534                     i1l1755:
  4409  0534  0870               	movf	i1___lwdiv@divisor,w
  4410  0535  0471               	iorwf	i1___lwdiv@divisor+1,w
  4411  0536  1903               	btfsc	3,2
  4412  0537  2D39               	goto	u162_21
  4413  0538  2D3A               	goto	u162_20
  4414  0539                     u162_21:
  4415  0539  2D71               	goto	i1l1775
  4416  053A                     u162_20:
  4417  053A                     i1l1757:
  4418  053A  01F7               	clrf	i1___lwdiv@counter
  4419  053B  0AF7               	incf	i1___lwdiv@counter,f
  4420  053C  2D48               	goto	i1l1763
  4421  053D                     i1l1759:
  4422  053D  3001               	movlw	1
  4423  053E                     u163_25:
  4424  053E  1003               	clrc
  4425  053F  0DF0               	rlf	i1___lwdiv@divisor,f
  4426  0540  0DF1               	rlf	i1___lwdiv@divisor+1,f
  4427  0541  3EFF               	addlw	-1
  4428  0542  1D03               	skipz
  4429  0543  2D3E               	goto	u163_25
  4430  0544                     i1l1761:
  4431  0544  3001               	movlw	1
  4432  0545  00F4               	movwf	??i1___lwdiv
  4433  0546  0874               	movf	??i1___lwdiv,w
  4434  0547  07F7               	addwf	i1___lwdiv@counter,f
  4435  0548                     i1l1763:
  4436  0548  1FF1               	btfss	i1___lwdiv@divisor+1,7
  4437  0549  2D4B               	goto	u164_21
  4438  054A  2D4C               	goto	u164_20
  4439  054B                     u164_21:
  4440  054B  2D3D               	goto	i1l1759
  4441  054C                     u164_20:
  4442  054C                     i1l1765:
  4443  054C  3001               	movlw	1
  4444  054D                     u165_25:
  4445  054D  1003               	clrc
  4446  054E  0DF5               	rlf	i1___lwdiv@quotient,f
  4447  054F  0DF6               	rlf	i1___lwdiv@quotient+1,f
  4448  0550  3EFF               	addlw	-1
  4449  0551  1D03               	skipz
  4450  0552  2D4D               	goto	u165_25
  4451  0553  0871               	movf	i1___lwdiv@divisor+1,w
  4452  0554  0273               	subwf	i1___lwdiv@dividend+1,w
  4453  0555  1D03               	skipz
  4454  0556  2D59               	goto	u166_25
  4455  0557  0870               	movf	i1___lwdiv@divisor,w
  4456  0558  0272               	subwf	i1___lwdiv@dividend,w
  4457  0559                     u166_25:
  4458  0559  1C03               	skipc
  4459  055A  2D5C               	goto	u166_21
  4460  055B  2D5D               	goto	u166_20
  4461  055C                     u166_21:
  4462  055C  2D64               	goto	i1l1771
  4463  055D                     u166_20:
  4464  055D                     i1l1767:
  4465  055D  0870               	movf	i1___lwdiv@divisor,w
  4466  055E  02F2               	subwf	i1___lwdiv@dividend,f
  4467  055F  0871               	movf	i1___lwdiv@divisor+1,w
  4468  0560  1C03               	skipc
  4469  0561  03F3               	decf	i1___lwdiv@dividend+1,f
  4470  0562  02F3               	subwf	i1___lwdiv@dividend+1,f
  4471  0563                     i1l1769:
  4472  0563  1475               	bsf	i1___lwdiv@quotient,0
  4473  0564                     i1l1771:
  4474  0564  3001               	movlw	1
  4475  0565                     u167_25:
  4476  0565  1003               	clrc
  4477  0566  0CF1               	rrf	i1___lwdiv@divisor+1,f
  4478  0567  0CF0               	rrf	i1___lwdiv@divisor,f
  4479  0568  3EFF               	addlw	-1
  4480  0569  1D03               	skipz
  4481  056A  2D65               	goto	u167_25
  4482  056B                     i1l1773:
  4483  056B  3001               	movlw	1
  4484  056C  02F7               	subwf	i1___lwdiv@counter,f
  4485  056D  1D03               	btfss	3,2
  4486  056E  2D70               	goto	u168_21
  4487  056F  2D71               	goto	u168_20
  4488  0570                     u168_21:
  4489  0570  2D4C               	goto	i1l1765
  4490  0571                     u168_20:
  4491  0571                     i1l1775:
  4492  0571  0876               	movf	i1___lwdiv@quotient+1,w
  4493  0572  00F1               	movwf	?i1___lwdiv+1
  4494  0573  0875               	movf	i1___lwdiv@quotient,w
  4495  0574  00F0               	movwf	?i1___lwdiv
  4496  0575                     i1l576:
  4497  0575  0008               	return
  4498  0576                     __end_ofi1___lwdiv:
  4499  007E                     btemp	set	126	;btemp
  4500  007E                     wtemp0	set	126
  4501                           
  4502                           	psect	config
  4503                           
  4504                           ;Config register CONFIG1 @ 0x2007
  4505                           ;	Oscillator Selection bits
  4506                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4507                           ;	Watchdog Timer Enable bit
  4508                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4509                           ;	Power-up Timer Enable bit
  4510                           ;	PWRTE = OFF, PWRT disabled
  4511                           ;	RE3/MCLR pin function select bit
  4512                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4513                           ;	Code Protection bit
  4514                           ;	CP = OFF, Program memory code protection is disabled
  4515                           ;	Data Code Protection bit
  4516                           ;	CPD = OFF, Data memory code protection is disabled
  4517                           ;	Brown Out Reset Selection bits
  4518                           ;	BOREN = OFF, BOR disabled
  4519                           ;	Internal External Switchover bit
  4520                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4521                           ;	Fail-Safe Clock Monitor Enabled bit
  4522                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4523                           ;	Low Voltage Programming Enable bit
  4524                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4525                           ;	In-Circuit Debugger Mode bit
  4526                           ;	DEBUG = 0x1, unprogrammed default
  4527  2007                     	org	8199
  4528  2007  20D4               	dw	8404
  4529                           
  4530                           ;Config register CONFIG2 @ 0x2008
  4531                           ;	Brown-out Reset Selection bit
  4532                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4533                           ;	Flash Program Memory Self Write Enable bits
  4534                           ;	WRT = OFF, Write protection off
  4535  2008                     	org	8200
  4536  2008  3FFF               	dw	16383

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         71
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      61
    BANK1            80     20      55
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_3(CODE[2]), STR_2(CODE[2]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2(BANK1[5]), PUNTO1(BANK1[5]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2(BANK1[5]), PUNTO1(BANK1[5]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 5
		 -> PUNTO2(BANK1[5]), POT2SB(BANK1[5]), POT2SA(BANK1[5]), PUNTO1(BANK1[5]), 
		 -> POT1SB(BANK0[5]), POT1SA(BANK1[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2(BANK1[5]), POT2SC(BANK1[5]), POT2SB(BANK1[5]), PUNTO1(BANK1[5]), 
		 -> POT1SC(BANK0[5]), POT1SB(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2(BANK1[5]), POT2SC(BANK1[5]), POT2SB(BANK1[5]), PUNTO1(BANK1[5]), 
		 -> POT1SC(BANK0[5]), POT1SB(BANK0[5]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> POT2SC(BANK1[5]), POT2SB(BANK1[5]), POT2SA(BANK1[5]), POT1SC(BANK0[5]), 
		 -> POT1SB(BANK0[5]), POT1SA(BANK1[5]), COMPARE(BANK1[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> POT2SC(BANK1[5]), POT2SB(BANK1[5]), POT2SA(BANK1[5]), POT1SC(BANK0[5]), 
		 -> POT1SB(BANK0[5]), POT1SA(BANK1[5]), COMPARE(BANK1[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> POT2SC(BANK1[5]), POT2SB(BANK1[5]), POT2SA(BANK1[5]), POT1SC(BANK0[5]), 
		 -> POT1SB(BANK0[5]), POT1SA(BANK1[5]), COMPARE(BANK1[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> POT2SC(BANK1[5]), POT2SB(BANK1[5]), POT2SA(BANK1[5]), POT1SC(BANK0[5]), 
		 -> POT1SB(BANK0[5]), POT1SA(BANK1[5]), COMPARE(BANK1[5]), 

    CONTADOR@a	PTR unsigned char  size(1) Largest target is 5
		 -> COMPARE(BANK1[5]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[2]), STR_4(CODE[2]), POT2SC(BANK1[5]), POT1SC(BANK0[5]), 
		 -> STR_1(CODE[17]), COMPARE(BANK1[5]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2(BANK1[5]), POT2SC(BANK1[5]), POT2SB(BANK1[5]), PUNTO1(BANK1[5]), 
		 -> POT1SC(BANK0[5]), POT1SB(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 5
		 -> PUNTO2(BANK1[5]), PUNTO1(BANK1[5]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> POT2SC(BANK1[5]), POT2SB(BANK1[5]), POT2SA(BANK1[5]), POT1SC(BANK0[5]), 
		 -> POT1SB(BANK0[5]), POT1SA(BANK1[5]), COMPARE(BANK1[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _CONTADOR->i1_itoa
    i1_itoa->i1_utoa
    i1_utoa->i1___lwdiv

Critical Paths under _main in BANK0

    _main->___awmod
    _main->___wmul
    _utoa->___lwmod
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    _ISR->_CONTADOR
    _CONTADOR->i1_itoa
    i1_itoa->i1_utoa

Critical Paths under _main in BANK1

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    ___awmod->___awdiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    8379
                                             19 BANK1      1     1      0
                           _ADC_Init
                           _ADC_Read
                            _Lcd_Cmd
                           _Lcd_Init
                   _Lcd_Write_String
                        _SERIAL_Init
                            ___awdiv
                            ___awmod
                             ___wmul
                               _itoa
                              _setup
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               4     3      1     293
                                             19 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     752
                                             19 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    3344
                                             12 BANK1      7     3      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1669
                                              3 BANK1      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                             19 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     601
                                             19 BANK0      5     1      4
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     396
                                             19 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1513
                                             24 BANK0      1     1      0
                                              4 BANK1      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1165
                                             19 BANK0      5     1      4
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SERIAL_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     2     0      2     523
                                             22 BANK0      2     0      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2     349
                                             19 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  6     6      0    1242
                                             13 BANK0      6     6      0
                           _CONTADOR
 ---------------------------------------------------------------------------------
 (5) _CONTADOR                                             3     0      3    1242
                                             10 BANK0      3     0      3
                             i1_itoa
 ---------------------------------------------------------------------------------
 (6) i1_itoa                                               7     3      4    1046
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                             i1_utoa
 ---------------------------------------------------------------------------------
 (7) i1_utoa                                               9     5      4     831
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (8) i1___lwmod                                            6     2      4     211
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _SERIAL_Init
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___wmul
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _setup
   _strcat
   _strcpy

 _ISR (ROOT)
   _CONTADOR
     i1_itoa
       i1_utoa
         i1___lwdiv
         i1___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      82       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      3D       5       76.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     14      37       7       68.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      82      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 13:51:09 2021

                        _O 0036                          pc 0002                         _V1 0030  
                       _V2 0026               ___awdiv@sign 00C4                         fsr 0004  
      ___wmul@multiplicand 0059                        l130 05FB                        l203 0FEB  
                      l115 07DA                        l109 002D                        l142 07BC  
                      l304 06D3                        l153 06C4                        l306 06EB  
                      l147 05B8                        l182 0FFF                        l179 07FE  
                      l470 0531                        l457 0401                        l576 04D2  
                      l586 0637                        l764 035F                        l781 077D  
                      l766 0376                        l758 0711                        l775 069C  
                      _RE0 0048                        _RE1 0049                        _RE2 004A  
                      _ISR 077E                        _adc 0039                        fsr0 0004  
                      indf 0000               ___awmod@sign 00CC                       ?_ISR 0070  
                     l2001 07D8                       l2011 0FDE                       l2003 07D9  
                     l2005 079E                       l2021 0FE5                       l2013 0FDF  
                     l2031 069D                       l2023 0FE6                       l2015 0FE0  
                     l2007 0FD9                       l2041 0FF9                       l2033 069E  
                     l2025 0FE9                       l2017 0FE1                       l2009 0FDD  
                     l2051 0FFE                       l2043 0FFA                       l2035 06AC  
                     l2027 0FEA                       l2019 0FE4                       l2029 07F4  
                     l2045 0FFB                       l2037 06B4                       l2047 0FFC  
                     l2039 0FEF                       l2071 0763                       l2049 0FFD  
                     l2081 0687                       l2073 076B                       l2091 06DA  
                     l2083 068F                       l2075 0675                       l2093 06E1  
                     l2085 06C5                       l2077 067A                       l2069 075E  
                     l2095 06E7                       l2087 06C9                       l2079 067E  
                     l2089 06CD                       l1901 05EA                       l1903 05EB  
                     l1911 057B                       l2711 0305                       l2703 02D0  
                     l1905 05EC                       l1921 058D                       l1913 057F  
                     l2801 04E5                       l2721 035B                       l2713 0309  
                     l2705 02D4                       l1907 05F8                       l1931 05A7  
                     l1923 0596                       l1915 0580                       l2811 0502  
                     l2803 04EA                       l2723 0363                       l2715 030B  
                     l2707 02FB                       l1933 05A8                       l1925 0597  
                     l1917 0581                       l1909 0579                       l2813 0506  
                     l2805 04F0                       l2821 0523                       l2661 0485  
                     l2725 036A                       l2717 032E                       l2709 02FF  
                     l2741 06FE                       l2733 06EF                       l2901 02BE  
                     l1935 05A9                       l1927 05A2                       l1919 0582  
                     l2751 0380                       l2823 0528                       l2815 0510  
                     l2807 04F3                       l2671 04B3                       l2663 048C  
                     l2655 0474                       l2727 036C                       l2719 0355  
                     l2743 0703                       l2735 06EF                       l2831 0037  
                     l1881 05BE                       l1937 05B5                       l1929 05A5  
                     l2761 0399                       l2753 0385                       l2825 052D  
                     l2817 0516                       l2809 04FA                       l2673 04B6  
                     l2665 0492                       l2657 0478                       l2681 05FC  
                     l2729 0372                       l2737 06F3                       l2841 005D  
                     l2833 003C                       l1891 05D0                       l1883 05C2  
                     l2771 03B7                       l2763 039D                       l2755 0389  
                     l2747 0377                       l2819 051D                       l2675 04BE  
                     l2667 0498                       l2659 0480                       l2691 0616  
                     l2683 0604                       l2739 06FA                       l2851 00EC  
                     l2843 006F                       l2835 0047                       l1893 05D9  
                     l1885 05C3                       l2781 03E3                       l2773 03BD  
                     l2765 03A5                       l2757 038E                       l2749 037A  
                     l2669 04AD                       l2677 04C6                       l2693 0620  
                     l2685 0607                       l2861 015C                       l2853 011E  
                     l2845 0092                       l2837 004F                       l2829 0028  
                     l1895 05DA                       l1887 05C4                       l1879 05BC  
                     l2775 03D2                       l2767 03AA                       l2783 03EB  
                     l2759 0393                       l2791 04D3                       l2695 0626  
                     l2687 060E                       l1991 07C1                       l2871 0191  
                     l2863 016A                       l2855 0132                       l2847 00A6  
                     l2839 0059                       l1897 05E5                       l1889 05C5  
                     l2785 03F2                       l2777 03D8                       l2769 03B1  
                     l2793 04D6                       l2697 062D                       l2689 0612  
                     l1993 07C2                       l2881 0240                       l2873 01B4  
                     l2865 0170                       l2857 0140                       l2849 00D8  
                     l1899 05E8                       l2787 03F7                       l2779 03DB  
                     l2795 04DA                       l2699 0633                       l1995 07D0  
                     l2891 028C                       l2883 0254                       l2875 01C8  
                     l2867 017B                       l2859 014E                       l2797 04DF  
                     l1997 07D6                       l1989 07BD                       l2893 0292  
                     l2885 0262                       l2877 01FA                       l2869 017F  
                     l2799 04E1                       l1999 07D7                       l2895 029D  
                     l2887 0270                       l2879 020E                       l2897 02A8  
                     l2889 027E                       l2899 02B3                       STR_1 0748  
                     STR_2 0759                       STR_3 0759                       STR_4 0757  
                     STR_5 0757                       u2000 0686                       u2001 0685  
                     u2010 069C                       u2011 069B                       u2020 06CD  
                     u2021 06CC                       u2050 06E7                       u2051 06E6  
                     u2035 06D4                       u2045 06DB                       u3210 0480  
                     u3211 047F                       u3300 0616                       u3301 0615  
                     u3230 0498                       u3310 0620                       u3231 0497  
                     u3311 061F                       u3400 03A5                       u3401 03A4  
                     u3225 0486                       u3250 04AD                       u3330 0633  
                     u3251 04AC                       u3331 0632                       u3315 061C  
                     u3420 03BD                       u3500 04F0                       u3340 0305  
                     u3421 03BC                       u3501 04EF                       u3245 049B  
                     u3325 0627                       u3341 0304                       u1910 05D9  
                     u3270 04C6                       u3350 035B                       u1911 05D8  
                     u3415 03AB                       u3271 04C5                       u3255 04A9  
                     u3351 035A                       u1920 0596                       u3440 03D2  
                     u3520 0506                       u3280 0604                       u3360 0372  
                     u1921 0595                       u3441 03D1                       u3521 0505  
                     u3265 04B8                       u3281 0603                       u3361 0371  
                     u3530 0510                       u3370 06F3                       u3435 03C0  
                     u3531 050F                       u3515 04F4                       u3371 06F2  
                     u3460 03EB                       u3380 0380                       u3461 03EA  
                     u3445 03CE                       u3381 037F                       u3470 03F2  
                     u3390 038E                       u3550 0523                       u3607 059D  
                     u3471 03F1                       u3455 03DD                       u3391 038D  
                     u3551 0522                       u3535 050C                       u3295 0608  
                     u3560 0528                       u3480 04DA                       u3617 05B0  
                     u3561 0527                       u3545 0517                       u3481 04D9  
                     u1970 06C4                       u3490 04E5                       u3627 05CB  
                     u1971 06C3                       u3491 04E4                       u3637 05E0  
                     u1990 077D                       u3647 05F3                       u1991 077C  
                     u3577 004B                       u3587 016E                       _RCIF 0065  
                     u3597 0588                       _TRMT 04C1          ?_Lcd_Write_String 005A  
                     _main 0028                       _itoa 06EC                       btemp 007E  
                     _utoa 02CD           __end_of_ADC_Init 07FF           __end_of_ADC_Read 1000  
                     start 0010         ??_Lcd_Write_String 005C            __end_of_Lcd_Cmd 05FC  
         __end_of_CONTADOR 07F4                      ??_ISR 0051                      ?_main 0070  
                    ?_itoa 00CF            __end_of___awdiv 0402            __end_of___awmod 0532  
                    _ANSEL 0188                      ?_utoa 00C6            ___awdiv@divisor 0057  
          __end_of___lwdiv 04D3                      i1l104 0795                      i1l176 07F3  
          __end_of___lwmod 0638                      i1l576 0575                      i1l586 0671  
                    i1l764 045C                      i1l766 0473                      i1l758 0737  
          ___awdiv@counter 00C3                      _RCREG 001A                      _POT1A 002E  
                    _POT1B 002C                      _POT1C 002A                      _POT2A 0024  
                    _POT2B 0022                      _POT2C 0020                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088                      _TRISE 0089  
               i1itoa@base 004A                      _TXREG 0019         i1___lwmod@dividend 0072  
                    _setup 07BD                      pclath 000A                      utoa@c 00CD  
                    utoa@v 00CB                      status 0003                      wtemp0 007E  
       __size_ofi1___lwdiv 0044         __size_ofi1___lwmod 003A           __end_of_Lcd_Init 07BD  
             ?_SERIAL_Init 0070            __initialization 0013               __end_of_main 02CD  
             __end_of_itoa 0712               __end_of_utoa 0377                 i1utoa@base 007A  
                   ??_main 00D6                     ??_itoa 00D3                     ??_utoa 00CA  
                   _ADRESH 001E           ___awdiv@dividend 0059                  ADC_Read@a 0059  
                ADC_Read@b 0057                  ADC_Read@c 0058                     ?_setup 0070  
                   _ANSELH 0189                _Destination 0034                     i1l2181 077E  
                   i1l2183 0782                     i1l2185 0792                     i1l1761 0544  
                   i1l1753 0532                     i1l1771 0564                     i1l1763 0548  
                   i1l1755 0534                     i1l1851 0409                     i1l1773 056B  
                   i1l1765 054C                     i1l1757 053A                     i1l1781 063E  
                   i1l1861 042C                     i1l1853 041C                     i1l1767 055D  
                   i1l1759 053D                     i1l1775 0571                     i1l1791 065A  
                   i1l1783 0641                     i1l1871 0467                     i1l1863 043F  
                   i1l1855 0420                     i1l1769 0563                     i1l1793 0660  
                   i1l1785 0648                     i1l1873 0469                     i1l1865 0450  
                   i1l1857 0426                     i1l1849 0405                     i1l1795 0667  
                   i1l1787 064C                     i1l1779 0638                     i1l1875 046F  
                   i1l1867 0458                     i1l1859 042A                     i1l1971 0715  
                   i1l1789 0650                     i1l1797 066D                     i1l1869 0460  
                   i1l1973 0719                     i1l1975 0720                     i1l1983 07DB  
                   i1l1977 0724                     i1l1969 0715                     i1l1985 07E5  
                   i1l1979 0729                     u225_20 0782                     u225_21 0781  
                   u162_20 053A                     u162_21 0539                     u170_25 0642  
                   u171_20 0650                     u171_21 064F                     u163_25 053E  
                   u164_20 054C                     u172_20 065A                     u164_21 054B  
                   u172_21 0659                     u172_25 0656                     u165_25 054D  
                   u173_25 0661                     u166_20 055D                     u174_20 066D  
                   u190_20 046F                     u166_21 055C                     u174_21 066C  
                   u190_21 046E                     u166_25 0559                     u167_25 0565  
                   u168_20 0571                     u168_21 0570                     u169_20 063E  
                   u169_21 063D                     u188_20 0426                     u196_20 0719  
                   u188_21 0425                     u196_21 0718                     u189_20 0458  
                   u189_21 0457                     _POT1SA 00BE                     _POT1SB 003F  
                   _POT1SC 003A                     _POT2SA 00B4                     _POT2SB 00AF  
                   _POT2SC 00AA                  ??_Lcd_Cmd 0057    __size_of_Lcd_Write_Char 0043  
                   _PUNTO1 00B9                     _PUNTO2 00A5                     i1_itoa 0712  
                   i1_utoa 0402                     ___wmul 06C5                  ??___awdiv 005B  
                ??___awmod 005C                  ??___lwdiv 005B                  ??___lwmod 005B  
         ___awdiv@quotient 00C5            ___awmod@divisor 00C7            ___awmod@counter 00CB  
                   _strcat 0672                     _strcpy 075B          __end_ofi1___lwdiv 0576  
        __end_ofi1___lwmod 0672                  CONTADOR@a 0050                  CONTADOR@n 004E  
                ?_ADC_Init 0070                  ?_ADC_Read 0057                     saved_w 007E  
                ?_CONTADOR 004E    __end_of__initialization 0024             __pcstackCOMMON 0070  
            __end_of_setup 07DB                 ??_ADC_Init 0057                 ??_ADC_Read 0059  
                ?_Lcd_Init 0070                    ??_setup 0057                 ??_CONTADOR 007E  
               __pbssBANK0 0020                 __pbssBANK1 00A0                    ?i1_itoa 0048  
                  ?i1_utoa 0078                 __pmaintext 0028                    ?___wmul 0057  
     __size_of_SERIAL_Init 0013                 __pintentry 0004  __size_of_Lcd_Write_String 0028  
                  ?_strcat 0057                    ?_strcpy 0057                    _COMPARE 00A0  
               ??_Lcd_Init 005A                 __stringtab 0738             _Lcd_Write_Char 0576  
                  _Lcd_Cmd 05B9            __size_ofi1_itoa 0026                    i1utoa@c 0046  
                  i1utoa@v 0044            __size_ofi1_utoa 0072                    ___awdiv 0377  
                  ___awmod 04D3            __size_of___wmul 0027                    ___lwdiv 0474  
                  ___lwmod 05FC                    __ptext1 075B                    __ptext2 0672  
                  __ptext3 07BD                    __ptext4 06EC                    __ptext5 02CD  
                  __ptext6 05FC                    __ptext7 0474                    __ptext8 06C5  
                  __ptext9 04D3            __size_of_strcat 002B            __size_of_strcpy 0023  
             __size_of_ISR 0020          i1___lwdiv@divisor 0070          i1___lwdiv@counter 0077  
         ___awmod@dividend 00C9                    clrloop0 0FD2                    _voltaje 0032  
   __end_of_Lcd_Write_Char 05B9       end_of_initialization 0024                    itoa@buf 00D5  
                  itoa@val 00CF                  _RCSTAbits 0018                    utoa@buf 00CE  
                  utoa@val 00C6          __size_of_ADC_Init 000B          __size_of_ADC_Read 0014  
                i1___lwdiv 0532                  i1___lwmod 0638            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 005A          __size_of_CONTADOR 0019                  _TXSTAbits 0098  
           __end_ofi1_itoa 0738             __end_ofi1_utoa 0474             __end_of___wmul 06EC  
                i1itoa@buf 004D           _Lcd_Write_String 069D                  i1itoa@val 0048  
        i1___lwmod@divisor 0070          i1___lwmod@counter 0075             __end_of_strcat 069D  
           __end_of_strcpy 077E        start_initialization 0013                __end_of_ISR 079E  
               ?i1___lwdiv 0070                 ?i1___lwmod 0070                  i1utoa@buf 0047  
                i1utoa@val 0078          __size_of_Lcd_Init 001F                   ??i1_itoa 007D  
                 ??i1_utoa 007C                   ??___wmul 005B            Lcd_Write_Char@a 0059  
                 ??_strcat 0058                   ??_strcpy 0058                  ___latbits 0002  
            __pcstackBANK0 0044              __pcstackBANK1 00C3                   ?_Lcd_Cmd 0070  
            ??_SERIAL_Init 0057           ___lwdiv@dividend 0059                   ?___awdiv 0057  
                 ?___awmod 00C7                   ?___lwdiv 0057                   ?___lwmod 0057  
                __pstrings 0738                   _ADC_Init 07F4                   _ADC_Read 0FEC  
         ___lwdiv@quotient 00C4                ??i1___lwdiv 0074                ??i1___lwmod 0074  
                 _CONTADOR 07DB             __size_of_setup 001E          interrupt_function 0004  
           ___wmul@product 005B                  clear_ram0 0FD1                   _PIE1bits 008C  
                 Lcd_Cmd@a 0059                   _PIR1bits 000C        __end_of_SERIAL_Init 0FEC  
               _ADCON0bits 001F                __stringbase 0747                 _ADCON1bits 009F  
        ___wmul@multiplier 0057           ??_Lcd_Write_Char 0057                   _Lcd_Init 079E  
                 _Contador 0038   __end_of_Lcd_Write_String 06C5           __size_of_Lcd_Cmd 0043  
         __size_of___awdiv 008B           __size_of___awmod 005F           __size_of___lwdiv 005F  
         __size_of___lwmod 003C         __end_of__stringtab 0748                 strcat@from 0057  
          ___lwdiv@divisor 0057            ___lwdiv@counter 00C3                   __ptext10 0377  
                 __ptext11 0FD9                   __ptext20 0712                   __ptext12 069D  
                 __ptext21 0402                   __ptext13 0576                   __ptext22 0638  
                 __ptext14 079E                   __ptext23 0532                   __ptext15 05B9  
                 __ptext16 0FEC                   __ptext17 07F4                   __ptext18 077E  
                 __ptext19 07DB         i1___lwdiv@dividend 0072                 strcpy@from 0057  
            __size_of_main 02A5              __size_of_itoa 0026              __size_of_utoa 00AA  
              _SERIAL_Init 0FD9                   _voltaje2 0028         i1___lwdiv@quotient 0075  
               _INTCONbits 000B                   itoa@base 00D1                   intlevel1 0000  
         ___lwmod@dividend 0059                  stringcode 0742                 _OSCCONbits 008F  
                 utoa@base 00C8                   strcat@cp 0059                   strcat@to 005A  
          ___lwmod@divisor 0057                   strcpy@cp 0059                   strcpy@to 005A  
          ___lwmod@counter 005C                   stringdir 0742                   stringtab 0738  
