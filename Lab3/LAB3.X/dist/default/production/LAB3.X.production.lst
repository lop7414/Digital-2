

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 00:41:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0009                     _PORTEbits	set	9
   290  0009                     _PORTE	set	9
   291  0008                     _PORTD	set	8
   292  0007                     _PORTC	set	7
   293  0006                     _PORTB	set	6
   294  0047                     _RD7	set	71
   295  0046                     _RD6	set	70
   296  0045                     _RD5	set	69
   297  0044                     _RD4	set	68
   298  0043                     _RD3	set	67
   299  0042                     _RD2	set	66
   300  0041                     _RD1	set	65
   301  0040                     _RD0	set	64
   302  0087                     _TRISC	set	135
   303  0086                     _TRISB	set	134
   304  0088                     _TRISD	set	136
   305  0089                     _TRISE	set	137
   306  0189                     _ANSELH	set	393
   307  0188                     _ANSEL	set	392
   308                           
   309                           	psect	strings
   310  0003                     __pstrings:
   311  0003                     stringtab:
   312  0003                     __stringtab:
   313  0003                     stringcode:	
   314                           ;	String table - string pointers are 1 byte each
   315                           
   316  0003                     stringdir:
   317  0003  3000               	movlw	high stringdir
   318  0004  008A               	movwf	10
   319  0005  0804               	movf	4,w
   320  0006  0A84               	incf	4,f
   321  0007  0782               	addwf	2,f
   322  0008                     __stringbase:
   323  0008  3400               	retlw	0
   324  0009                     __end_of__stringtab:
   325  0009                     STR_5:
   326  0009  3477               	retlw	119	;'w'
   327  000A  3477               	retlw	119	;'w'
   328  000B  3477               	retlw	119	;'w'
   329  000C  342E               	retlw	46	;'.'
   330  000D  3465               	retlw	101	;'e'
   331  000E  346C               	retlw	108	;'l'
   332  000F  3465               	retlw	101	;'e'
   333  0010  3463               	retlw	99	;'c'
   334  0011  3474               	retlw	116	;'t'
   335  0012  3472               	retlw	114	;'r'
   336  0013  346F               	retlw	111	;'o'
   337  0014  3453               	retlw	83	;'S'
   338  0015  346F               	retlw	111	;'o'
   339  0016  346D               	retlw	109	;'m'
   340  0017  3465               	retlw	101	;'e'
   341  0018  342E               	retlw	46	;'.'
   342  0019  3463               	retlw	99	;'c'
   343  001A  346F               	retlw	111	;'o'
   344  001B  346D               	retlw	109	;'m'
   345  001C  3400               	retlw	0
   346  001D                     STR_1:
   347  001D  344C               	retlw	76	;'L'
   348  001E  3443               	retlw	67	;'C'
   349  001F  3444               	retlw	68	;'D'
   350  0020  3420               	retlw	32	;' '
   351  0021  344C               	retlw	76	;'L'
   352  0022  3469               	retlw	105	;'i'
   353  0023  3462               	retlw	98	;'b'
   354  0024  3472               	retlw	114	;'r'
   355  0025  3461               	retlw	97	;'a'
   356  0026  3472               	retlw	114	;'r'
   357  0027  3479               	retlw	121	;'y'
   358  0028  3420               	retlw	32	;' '
   359  0029  3466               	retlw	102	;'f'
   360  002A  346F               	retlw	111	;'o'
   361  002B  3472               	retlw	114	;'r'
   362  002C  3400               	retlw	0
   363  002D                     STR_3:
   364  002D  3444               	retlw	68	;'D'
   365  002E  3465               	retlw	101	;'e'
   366  002F  3476               	retlw	118	;'v'
   367  0030  3465               	retlw	101	;'e'
   368  0031  346C               	retlw	108	;'l'
   369  0032  346F               	retlw	111	;'o'
   370  0033  3470               	retlw	112	;'p'
   371  0034  3465               	retlw	101	;'e'
   372  0035  3464               	retlw	100	;'d'
   373  0036  3420               	retlw	32	;' '
   374  0037  3442               	retlw	66	;'B'
   375  0038  3479               	retlw	121	;'y'
   376  0039  3400               	retlw	0
   377  003A                     STR_4:
   378  003A  3465               	retlw	101	;'e'
   379  003B  346C               	retlw	108	;'l'
   380  003C  3465               	retlw	101	;'e'
   381  003D  3463               	retlw	99	;'c'
   382  003E  3474               	retlw	116	;'t'
   383  003F  3472               	retlw	114	;'r'
   384  0040  346F               	retlw	111	;'o'
   385  0041  3453               	retlw	83	;'S'
   386  0042  346F               	retlw	111	;'o'
   387  0043  346D               	retlw	109	;'m'
   388  0044  3465               	retlw	101	;'e'
   389  0045  3400               	retlw	0
   390  0046                     STR_2:
   391  0046  344D               	retlw	77	;'M'
   392  0047  3450               	retlw	80	;'P'
   393  0048  344C               	retlw	76	;'L'
   394  0049  3441               	retlw	65	;'A'
   395  004A  3442               	retlw	66	;'B'
   396  004B  3420               	retlw	32	;' '
   397  004C  3458               	retlw	88	;'X'
   398  004D  3443               	retlw	67	;'C'
   399  004E  3438               	retlw	56	;'8'
   400  004F  3400               	retlw	0
   401                           
   402                           	psect	cinit
   403  07FC                     start_initialization:	
   404                           ; #config settings
   405                           
   406  07FC                     __initialization:
   407  07FC                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  07FC                     __end_of__initialization:
   411  07FC  0183               	clrf	3
   412  07FD  120A  118A  2F0F   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	cstackCOMMON
   415  0070                     __pcstackCOMMON:
   416  0070                     ?_setup:
   417  0070                     ??_setup:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_Lcd_Init:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_Lcd_Clear:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_Lcd_Write_String:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_Lcd_Shift_Left:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_Lcd_Shift_Right:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_Lcd_Write_Char:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_main:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_Lcd_Port:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ??_Lcd_Port:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?_Lcd_Cmd:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     Lcd_Port@a:	
   451                           ; 1 bytes @ 0x0
   452                           
   453                           
   454                           ; 1 bytes @ 0x0
   455  0070                     	ds	1
   456  0071                     ??_Lcd_Write_Char:
   457  0071                     ??_Lcd_Cmd:	
   458                           ; 1 bytes @ 0x1
   459                           
   460                           
   461                           ; 1 bytes @ 0x1
   462  0071                     	ds	1
   463  0072                     Lcd_Write_Char@a:
   464                           
   465                           ; 1 bytes @ 0x2
   466  0072                     	ds	1
   467  0073                     Lcd_Cmd@a:
   468  0073                     Lcd_Write_Char@temp:	
   469                           ; 1 bytes @ 0x3
   470                           
   471                           
   472                           ; 1 bytes @ 0x3
   473  0073                     	ds	1
   474  0074                     ??_Lcd_Init:
   475  0074                     ??_Lcd_Clear:	
   476                           ; 1 bytes @ 0x4
   477                           
   478  0074                     ?_Lcd_Set_Cursor:	
   479                           ; 1 bytes @ 0x4
   480                           
   481  0074                     ??_Lcd_Write_String:	
   482                           ; 1 bytes @ 0x4
   483                           
   484  0074                     ??_Lcd_Shift_Left:	
   485                           ; 1 bytes @ 0x4
   486                           
   487  0074                     ??_Lcd_Shift_Right:	
   488                           ; 1 bytes @ 0x4
   489                           
   490  0074                     Lcd_Set_Cursor@b:	
   491                           ; 1 bytes @ 0x4
   492                           
   493  0074                     Lcd_Write_String@i:	
   494                           ; 1 bytes @ 0x4
   495                           
   496                           
   497                           ; 2 bytes @ 0x4
   498  0074                     	ds	1
   499  0075                     ??_Lcd_Set_Cursor:
   500                           
   501                           ; 1 bytes @ 0x5
   502  0075                     	ds	1
   503  0076                     Lcd_Set_Cursor@a:
   504  0076                     Lcd_Write_String@a:	
   505                           ; 1 bytes @ 0x6
   506                           
   507                           
   508                           ; 1 bytes @ 0x6
   509  0076                     	ds	1
   510  0077                     Lcd_Set_Cursor@temp:
   511                           
   512                           ; 1 bytes @ 0x7
   513  0077                     	ds	1
   514  0078                     ??_main:
   515                           
   516                           ; 1 bytes @ 0x8
   517  0078                     	ds	3
   518  007B                     main@a:
   519                           
   520                           ; 2 bytes @ 0xB
   521  007B                     	ds	2
   522                           
   523                           	psect	maintext
   524  070F                     __pmaintext:	
   525 ;;
   526 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   527 ;;
   528 ;; *************** function _main *****************
   529 ;; Defined at:
   530 ;;		line 71 in file "LAB3.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  a               2   11[COMMON] unsigned int 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : B00/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         2       0       0       0       0
   546 ;;      Temps:          3       0       0       0       0
   547 ;;      Totals:         5       0       0       0       0
   548 ;;Total ram usage:        5 bytes
   549 ;; Hardware stack levels required when called:    3
   550 ;; This function calls:
   551 ;;		_Lcd_Clear
   552 ;;		_Lcd_Init
   553 ;;		_Lcd_Set_Cursor
   554 ;;		_Lcd_Shift_Left
   555 ;;		_Lcd_Shift_Right
   556 ;;		_Lcd_Write_Char
   557 ;;		_Lcd_Write_String
   558 ;;		_setup
   559 ;; This function is called by:
   560 ;;		Startup code after reset
   561 ;; This function uses a non-reentrant model
   562 ;;
   563                           
   564                           
   565                           ;psect for function _main
   566  070F                     _main:
   567  070F                     l876:	
   568                           ;incstack = 0
   569                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   570                           
   571                           
   572                           ;LAB3.c: 73:     setup();
   573  070F  120A  118A  2620  120A  118A  	fcall	_setup
   574  0714                     l878:
   575                           
   576                           ;LAB3.c: 75:     unsigned int a;;LAB3.c: 76:   TRISE = 0x00;
   577  0714  1683               	bsf	3,5	;RP0=1, select bank1
   578  0715  1303               	bcf	3,6	;RP1=0, select bank1
   579  0716  0189               	clrf	9	;volatile
   580  0717                     l880:
   581                           
   582                           ;LAB3.c: 77:   TRISD = 0x00;
   583  0717  0188               	clrf	8	;volatile
   584  0718                     l882:
   585                           
   586                           ;LAB3.c: 78:   Lcd_Init();
   587  0718  120A  118A  26C4  120A  118A  	fcall	_Lcd_Init
   588  071D                     l884:
   589                           
   590                           ;LAB3.c: 85:         Lcd_Clear();
   591  071D  120A  118A  25D7  120A  118A  	fcall	_Lcd_Clear
   592  0722                     l886:
   593                           
   594                           ;LAB3.c: 86:     Lcd_Set_Cursor(1,1);
   595  0722  01F4               	clrf	Lcd_Set_Cursor@b
   596  0723  0AF4               	incf	Lcd_Set_Cursor@b,f
   597  0724  3001               	movlw	1
   598  0725  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   599  072A                     l888:
   600                           
   601                           ;LAB3.c: 87:     Lcd_Write_String("LCD Library for");
   602  072A  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   603  072B  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   604  0730                     l890:
   605                           
   606                           ;LAB3.c: 88:     Lcd_Set_Cursor(2,1);
   607  0730  01F4               	clrf	Lcd_Set_Cursor@b
   608  0731  0AF4               	incf	Lcd_Set_Cursor@b,f
   609  0732  3002               	movlw	2
   610  0733  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   611  0738                     l892:
   612                           
   613                           ;LAB3.c: 89:     Lcd_Write_String("MPLAB XC8");
   614  0738  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   615  0739  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   616  073E                     l894:
   617                           
   618                           ;LAB3.c: 90:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   619  073E  3015               	movlw	21
   620  073F  00FA               	movwf	??_main+2
   621  0740  304B               	movlw	75
   622  0741  00F9               	movwf	??_main+1
   623  0742  30BE               	movlw	190
   624  0743  00F8               	movwf	??_main
   625  0744                     u197:
   626  0744  0BF8               	decfsz	??_main,f
   627  0745  2F44               	goto	u197
   628  0746  0BF9               	decfsz	??_main+1,f
   629  0747  2F44               	goto	u197
   630  0748  0BFA               	decfsz	??_main+2,f
   631  0749  2F44               	goto	u197
   632  074A  0000               	nop
   633                           
   634                           ;LAB3.c: 91:     Lcd_Clear();
   635  074B  120A  118A  25D7  120A  118A  	fcall	_Lcd_Clear
   636                           
   637                           ;LAB3.c: 92:     Lcd_Set_Cursor(1,1);
   638  0750  01F4               	clrf	Lcd_Set_Cursor@b
   639  0751  0AF4               	incf	Lcd_Set_Cursor@b,f
   640  0752  3001               	movlw	1
   641  0753  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   642  0758                     l896:
   643                           
   644                           ;LAB3.c: 93:     Lcd_Write_String("Developed By");
   645  0758  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   646  0759  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   647  075E                     l898:
   648                           
   649                           ;LAB3.c: 94:     Lcd_Set_Cursor(2,1);
   650  075E  01F4               	clrf	Lcd_Set_Cursor@b
   651  075F  0AF4               	incf	Lcd_Set_Cursor@b,f
   652  0760  3002               	movlw	2
   653  0761  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   654                           
   655                           ;LAB3.c: 95:     Lcd_Write_String("electroSome");
   656  0766  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   657  0767  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   658  076C                     l900:
   659                           
   660                           ;LAB3.c: 96:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   661  076C  3015               	movlw	21
   662  076D  00FA               	movwf	??_main+2
   663  076E  304B               	movlw	75
   664  076F  00F9               	movwf	??_main+1
   665  0770  30BE               	movlw	190
   666  0771  00F8               	movwf	??_main
   667  0772                     u207:
   668  0772  0BF8               	decfsz	??_main,f
   669  0773  2F72               	goto	u207
   670  0774  0BF9               	decfsz	??_main+1,f
   671  0775  2F72               	goto	u207
   672  0776  0BFA               	decfsz	??_main+2,f
   673  0777  2F72               	goto	u207
   674  0778  0000               	nop
   675  0779                     l902:
   676                           
   677                           ;LAB3.c: 97:     Lcd_Clear();
   678  0779  120A  118A  25D7  120A  118A  	fcall	_Lcd_Clear
   679  077E                     l904:
   680                           
   681                           ;LAB3.c: 98:     Lcd_Set_Cursor(1,1);
   682  077E  01F4               	clrf	Lcd_Set_Cursor@b
   683  077F  0AF4               	incf	Lcd_Set_Cursor@b,f
   684  0780  3001               	movlw	1
   685  0781  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   686  0786                     l906:
   687                           
   688                           ;LAB3.c: 99:     Lcd_Write_String("www.electroSome.com");
   689  0786  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   690  0787  120A  118A  2661  120A  118A  	fcall	_Lcd_Write_String
   691  078C                     l908:
   692                           
   693                           ;LAB3.c: 101:     for(a=0;a<15;a++)
   694  078C  01FB               	clrf	main@a
   695  078D  01FC               	clrf	main@a+1
   696  078E                     l914:
   697                           
   698                           ;LAB3.c: 102:     {;LAB3.c: 103:         _delay((unsigned long)((300)*(8000000/4000.0)))
      +                          ;
   699  078E  3004               	movlw	4
   700  078F  00FA               	movwf	??_main+2
   701  0790  300C               	movlw	12
   702  0791  00F9               	movwf	??_main+1
   703  0792  3033               	movlw	51
   704  0793  00F8               	movwf	??_main
   705  0794                     u217:
   706  0794  0BF8               	decfsz	??_main,f
   707  0795  2F94               	goto	u217
   708  0796  0BF9               	decfsz	??_main+1,f
   709  0797  2F94               	goto	u217
   710  0798  0BFA               	decfsz	??_main+2,f
   711  0799  2F94               	goto	u217
   712  079A  2F9B               	nop2
   713  079B                     l916:
   714                           
   715                           ;LAB3.c: 104:         Lcd_Shift_Left();
   716  079B  120A  118A  25DE  120A  118A  	fcall	_Lcd_Shift_Left
   717  07A0                     l918:
   718                           
   719                           ;LAB3.c: 105:     }
   720  07A0  3001               	movlw	1
   721  07A1  07FB               	addwf	main@a,f
   722  07A2  1803               	skipnc
   723  07A3  0AFC               	incf	main@a+1,f
   724  07A4  3000               	movlw	0
   725  07A5  07FC               	addwf	main@a+1,f
   726  07A6                     l920:
   727  07A6  3000               	movlw	0
   728  07A7  027C               	subwf	main@a+1,w
   729  07A8  300F               	movlw	15
   730  07A9  1903               	skipnz
   731  07AA  027B               	subwf	main@a,w
   732  07AB  1C03               	skipc
   733  07AC  2FAE               	goto	u171
   734  07AD  2FAF               	goto	u170
   735  07AE                     u171:
   736  07AE  2F8E               	goto	l914
   737  07AF                     u170:
   738  07AF                     l922:
   739                           
   740                           ;LAB3.c: 107:     for(a=0;a<15;a++)
   741  07AF  01FB               	clrf	main@a
   742  07B0  01FC               	clrf	main@a+1
   743  07B1                     l928:
   744                           
   745                           ;LAB3.c: 108:     {;LAB3.c: 109:         _delay((unsigned long)((300)*(8000000/4000.0)))
      +                          ;
   746  07B1  3004               	movlw	4
   747  07B2  00FA               	movwf	??_main+2
   748  07B3  300C               	movlw	12
   749  07B4  00F9               	movwf	??_main+1
   750  07B5  3033               	movlw	51
   751  07B6  00F8               	movwf	??_main
   752  07B7                     u227:
   753  07B7  0BF8               	decfsz	??_main,f
   754  07B8  2FB7               	goto	u227
   755  07B9  0BF9               	decfsz	??_main+1,f
   756  07BA  2FB7               	goto	u227
   757  07BB  0BFA               	decfsz	??_main+2,f
   758  07BC  2FB7               	goto	u227
   759  07BD  2FBE               	nop2
   760  07BE                     l930:
   761                           
   762                           ;LAB3.c: 110:         Lcd_Shift_Right();
   763  07BE  120A  118A  25E5  120A  118A  	fcall	_Lcd_Shift_Right
   764  07C3                     l932:
   765                           
   766                           ;LAB3.c: 111:     }
   767  07C3  3001               	movlw	1
   768  07C4  07FB               	addwf	main@a,f
   769  07C5  1803               	skipnc
   770  07C6  0AFC               	incf	main@a+1,f
   771  07C7  3000               	movlw	0
   772  07C8  07FC               	addwf	main@a+1,f
   773  07C9                     l934:
   774  07C9  3000               	movlw	0
   775  07CA  027C               	subwf	main@a+1,w
   776  07CB  300F               	movlw	15
   777  07CC  1903               	skipnz
   778  07CD  027B               	subwf	main@a,w
   779  07CE  1C03               	skipc
   780  07CF  2FD1               	goto	u181
   781  07D0  2FD2               	goto	u180
   782  07D1                     u181:
   783  07D1  2FB1               	goto	l928
   784  07D2                     u180:
   785  07D2                     l936:
   786                           
   787                           ;LAB3.c: 113:     Lcd_Clear();
   788  07D2  120A  118A  25D7  120A  118A  	fcall	_Lcd_Clear
   789                           
   790                           ;LAB3.c: 114:     Lcd_Set_Cursor(2,1);
   791  07D7  01F4               	clrf	Lcd_Set_Cursor@b
   792  07D8  0AF4               	incf	Lcd_Set_Cursor@b,f
   793  07D9  3002               	movlw	2
   794  07DA  120A  118A  263D  120A  118A  	fcall	_Lcd_Set_Cursor
   795                           
   796                           ;LAB3.c: 115:     Lcd_Write_Char('e');
   797  07DF  3065               	movlw	101
   798  07E0  120A  118A  2606  120A  118A  	fcall	_Lcd_Write_Char
   799                           
   800                           ;LAB3.c: 116:     Lcd_Write_Char('S');
   801  07E5  3053               	movlw	83
   802  07E6  120A  118A  2606  120A  118A  	fcall	_Lcd_Write_Char
   803  07EB                     l938:
   804                           
   805                           ;LAB3.c: 117:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   806  07EB  3015               	movlw	21
   807  07EC  00FA               	movwf	??_main+2
   808  07ED  304B               	movlw	75
   809  07EE  00F9               	movwf	??_main+1
   810  07EF  30BE               	movlw	190
   811  07F0  00F8               	movwf	??_main
   812  07F1                     u237:
   813  07F1  0BF8               	decfsz	??_main,f
   814  07F2  2FF1               	goto	u237
   815  07F3  0BF9               	decfsz	??_main+1,f
   816  07F4  2FF1               	goto	u237
   817  07F5  0BFA               	decfsz	??_main+2,f
   818  07F6  2FF1               	goto	u237
   819  07F7  0000               	nop
   820  07F8  2F1D               	goto	l884
   821  07F9  120A  118A  2800   	ljmp	start
   822  07FC                     __end_of_main:
   823                           
   824                           	psect	text1
   825  0620                     __ptext1:	
   826 ;; *************** function _setup *****************
   827 ;; Defined at:
   828 ;;		line 127 in file "LAB3.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		status,2
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0
   845 ;;      Totals:         0       0       0       0       0
   846 ;;Total ram usage:        0 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; This function calls:
   849 ;;		Nothing
   850 ;; This function is called by:
   851 ;;		_main
   852 ;; This function uses a non-reentrant model
   853 ;;
   854                           
   855                           
   856                           ;psect for function _setup
   857  0620                     _setup:
   858  0620                     l754:	
   859                           ;incstack = 0
   860                           ; Regs used in _setup: [status,2]
   861                           
   862                           
   863                           ;LAB3.c: 128:     ANSEL = 0;
   864  0620  1683               	bsf	3,5	;RP0=1, select bank3
   865  0621  1703               	bsf	3,6	;RP1=1, select bank3
   866  0622  0188               	clrf	8	;volatile
   867                           
   868                           ;LAB3.c: 129:     ANSELH = 0;
   869  0623  0189               	clrf	9	;volatile
   870                           
   871                           ;LAB3.c: 130:     TRISB = 0;
   872  0624  1683               	bsf	3,5	;RP0=1, select bank1
   873  0625  1303               	bcf	3,6	;RP1=0, select bank1
   874  0626  0186               	clrf	6	;volatile
   875                           
   876                           ;LAB3.c: 131:     PORTB = 0;
   877  0627  1283               	bcf	3,5	;RP0=0, select bank0
   878  0628  1303               	bcf	3,6	;RP1=0, select bank0
   879  0629  0186               	clrf	6	;volatile
   880                           
   881                           ;LAB3.c: 132:     TRISC = 0;
   882  062A  1683               	bsf	3,5	;RP0=1, select bank1
   883  062B  1303               	bcf	3,6	;RP1=0, select bank1
   884  062C  0187               	clrf	7	;volatile
   885                           
   886                           ;LAB3.c: 133:     PORTC = 0;
   887  062D  1283               	bcf	3,5	;RP0=0, select bank0
   888  062E  1303               	bcf	3,6	;RP1=0, select bank0
   889  062F  0187               	clrf	7	;volatile
   890                           
   891                           ;LAB3.c: 134:     TRISD = 0;
   892  0630  1683               	bsf	3,5	;RP0=1, select bank1
   893  0631  1303               	bcf	3,6	;RP1=0, select bank1
   894  0632  0188               	clrf	8	;volatile
   895                           
   896                           ;LAB3.c: 135:     PORTD = 0;
   897  0633  1283               	bcf	3,5	;RP0=0, select bank0
   898  0634  1303               	bcf	3,6	;RP1=0, select bank0
   899  0635  0188               	clrf	8	;volatile
   900                           
   901                           ;LAB3.c: 136:     TRISE = 0;
   902  0636  1683               	bsf	3,5	;RP0=1, select bank1
   903  0637  1303               	bcf	3,6	;RP1=0, select bank1
   904  0638  0189               	clrf	9	;volatile
   905                           
   906                           ;LAB3.c: 137:     PORTE = 0;
   907  0639  1283               	bcf	3,5	;RP0=0, select bank0
   908  063A  1303               	bcf	3,6	;RP1=0, select bank0
   909  063B  0189               	clrf	9	;volatile
   910  063C                     l53:
   911  063C  0008               	return
   912  063D                     __end_of_setup:
   913                           
   914                           	psect	text2
   915  0661                     __ptext2:	
   916 ;; *************** function _Lcd_Write_String *****************
   917 ;; Defined at:
   918 ;;		line 104 in file "LCD.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  a               1    wreg     PTR unsigned char 
   921 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   922 ;;		 -> STR_1(16), 
   923 ;; Auto vars:     Size  Location     Type
   924 ;;  a               1    6[COMMON] PTR unsigned char 
   925 ;;		 -> STR_5(20), STR_4(12), STR_3(13), STR_2(10), 
   926 ;;		 -> STR_1(16), 
   927 ;;  i               2    4[COMMON] int 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         3       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0
   940 ;;      Totals:         3       0       0       0       0
   941 ;;Total ram usage:        3 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    2
   944 ;; This function calls:
   945 ;;		_Lcd_Write_Char
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _Lcd_Write_String
   953  0661                     _Lcd_Write_String:
   954                           
   955                           ;incstack = 0
   956                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   957                           ;Lcd_Write_String@a stored from wreg
   958  0661  00F6               	movwf	Lcd_Write_String@a
   959  0662                     l868:
   960                           
   961                           ;LCD.c: 105:  int i;;LCD.c: 106:  for(i=0;a[i]!='\0';i++)
   962  0662  01F4               	clrf	Lcd_Write_String@i
   963  0663  01F5               	clrf	Lcd_Write_String@i+1
   964  0664  2E78               	goto	l874
   965  0665                     l870:
   966                           
   967                           ;LCD.c: 107:     Lcd_Write_Char(a[i]);
   968  0665  0874               	movf	Lcd_Write_String@i,w
   969  0666  0776               	addwf	Lcd_Write_String@a,w
   970  0667  0084               	movwf	4
   971  0668  120A  118A  2003  120A  118A  	fcall	stringdir
   972  066D  120A  118A  2606  120A  118A  	fcall	_Lcd_Write_Char
   973  0672                     l872:
   974  0672  3001               	movlw	1
   975  0673  07F4               	addwf	Lcd_Write_String@i,f
   976  0674  1803               	skipnc
   977  0675  0AF5               	incf	Lcd_Write_String@i+1,f
   978  0676  3000               	movlw	0
   979  0677  07F5               	addwf	Lcd_Write_String@i+1,f
   980  0678                     l874:
   981  0678  0874               	movf	Lcd_Write_String@i,w
   982  0679  0776               	addwf	Lcd_Write_String@a,w
   983  067A  0084               	movwf	4
   984  067B  120A  118A  2003  120A  118A  	fcall	stringdir
   985  0680  3A00               	xorlw	0
   986  0681  1D03               	skipz
   987  0682  2E84               	goto	u161
   988  0683  2E85               	goto	u160
   989  0684                     u161:
   990  0684  2E65               	goto	l870
   991  0685                     u160:
   992  0685                     l116:
   993  0685  0008               	return
   994  0686                     __end_of_Lcd_Write_String:
   995                           
   996                           	psect	text3
   997  0606                     __ptext3:	
   998 ;; *************** function _Lcd_Write_Char *****************
   999 ;; Defined at:
  1000 ;;		line 94 in file "LCD.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  a               1    wreg     unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  a               1    2[COMMON] unsigned char 
  1005 ;;  temp            1    3[COMMON] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0, pclath, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1015 ;;      Params:         0       0       0       0       0
  1016 ;;      Locals:         2       0       0       0       0
  1017 ;;      Temps:          1       0       0       0       0
  1018 ;;      Totals:         3       0       0       0       0
  1019 ;;Total ram usage:        3 bytes
  1020 ;; Hardware stack levels used:    1
  1021 ;; Hardware stack levels required when called:    1
  1022 ;; This function calls:
  1023 ;;		_Lcd_Port
  1024 ;; This function is called by:
  1025 ;;		_main
  1026 ;;		_Lcd_Write_String
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           
  1031                           ;psect for function _Lcd_Write_Char
  1032  0606                     _Lcd_Write_Char:
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1036                           ;Lcd_Write_Char@a stored from wreg
  1037  0606  00F2               	movwf	Lcd_Write_Char@a
  1038  0607                     l732:
  1039                           
  1040                           ;LCD.c: 95:    char temp;;LCD.c: 96:    temp = a;
  1041  0607  0872               	movf	Lcd_Write_Char@a,w
  1042  0608  00F1               	movwf	??_Lcd_Write_Char
  1043  0609  0871               	movf	??_Lcd_Write_Char,w
  1044  060A  00F3               	movwf	Lcd_Write_Char@temp
  1045  060B                     l734:
  1046                           
  1047                           ;LCD.c: 97:    PORTEbits.RE0 = 1;
  1048  060B  1283               	bcf	3,5	;RP0=0, select bank0
  1049  060C  1303               	bcf	3,6	;RP1=0, select bank0
  1050  060D  1409               	bsf	9,0	;volatile
  1051  060E                     l736:
  1052                           
  1053                           ;LCD.c: 98:    Lcd_Port(temp);
  1054  060E  0873               	movf	Lcd_Write_Char@temp,w
  1055  060F  120A  118A  2686  120A  118A  	fcall	_Lcd_Port
  1056  0614                     l738:
  1057                           
  1058                           ;LCD.c: 99:    PORTEbits.RE1 = 1;
  1059  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0616  1489               	bsf	9,1	;volatile
  1062  0617                     l740:
  1063                           
  1064                           ;LCD.c: 100:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1065  0617  301A               	movlw	26
  1066  0618  00F1               	movwf	??_Lcd_Write_Char
  1067  0619                     u247:
  1068  0619  0BF1               	decfsz	??_Lcd_Write_Char,f
  1069  061A  2E19               	goto	u247
  1070  061B  0000               	nop
  1071  061C                     l742:
  1072                           
  1073                           ;LCD.c: 101:    PORTEbits.RE1 = 0;
  1074  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1075  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1076  061E  1089               	bcf	9,1	;volatile
  1077  061F                     l110:
  1078  061F  0008               	return
  1079  0620                     __end_of_Lcd_Write_Char:
  1080                           
  1081                           	psect	text4
  1082  05E5                     __ptext4:	
  1083 ;; *************** function _Lcd_Shift_Right *****************
  1084 ;; Defined at:
  1085 ;;		line 110 in file "LCD.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0
  1102 ;;      Totals:         0       0       0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    2
  1106 ;; This function calls:
  1107 ;;		_Lcd_Cmd
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _Lcd_Shift_Right
  1115  05E5                     _Lcd_Shift_Right:
  1116  05E5                     l790:	
  1117                           ;incstack = 0
  1118                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1119                           
  1120                           
  1121                           ;LCD.c: 111:  Lcd_Cmd(0x1C);
  1122  05E5  301C               	movlw	28
  1123  05E6  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1124  05EB                     l119:
  1125  05EB  0008               	return
  1126  05EC                     __end_of_Lcd_Shift_Right:
  1127                           
  1128                           	psect	text5
  1129  05DE                     __ptext5:	
  1130 ;; *************** function _Lcd_Shift_Left *****************
  1131 ;; Defined at:
  1132 ;;		line 114 in file "LCD.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0
  1149 ;;      Totals:         0       0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		_Lcd_Cmd
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           
  1161                           ;psect for function _Lcd_Shift_Left
  1162  05DE                     _Lcd_Shift_Left:
  1163  05DE                     l788:	
  1164                           ;incstack = 0
  1165                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1166                           
  1167                           
  1168                           ;LCD.c: 115:  Lcd_Cmd(0x18);
  1169  05DE  3018               	movlw	24
  1170  05DF  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1171  05E4                     l122:
  1172  05E4  0008               	return
  1173  05E5                     __end_of_Lcd_Shift_Left:
  1174                           
  1175                           	psect	text6
  1176  063D                     __ptext6:	
  1177 ;; *************** function _Lcd_Set_Cursor *****************
  1178 ;; Defined at:
  1179 ;;		line 67 in file "LCD.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  a               1    wreg     unsigned char 
  1182 ;;  b               1    4[COMMON] unsigned char 
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;  a               1    6[COMMON] unsigned char 
  1185 ;;  temp            1    7[COMMON] unsigned char 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0, pclath, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1195 ;;      Params:         1       0       0       0       0
  1196 ;;      Locals:         2       0       0       0       0
  1197 ;;      Temps:          1       0       0       0       0
  1198 ;;      Totals:         4       0       0       0       0
  1199 ;;Total ram usage:        4 bytes
  1200 ;; Hardware stack levels used:    1
  1201 ;; Hardware stack levels required when called:    2
  1202 ;; This function calls:
  1203 ;;		_Lcd_Cmd
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _Lcd_Set_Cursor
  1211  063D                     _Lcd_Set_Cursor:
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1215                           ;Lcd_Set_Cursor@a stored from wreg
  1216  063D  00F6               	movwf	Lcd_Set_Cursor@a
  1217  063E                     l856:
  1218                           
  1219                           ;LCD.c: 68:  char temp;;LCD.c: 69:  if(a == 1){
  1220  063E  0376               	decf	Lcd_Set_Cursor@a,w
  1221  063F  1D03               	btfss	3,2
  1222  0640  2E42               	goto	u141
  1223  0641  2E43               	goto	u140
  1224  0642                     u141:
  1225  0642  2E4F               	goto	l862
  1226  0643                     u140:
  1227  0643                     l858:
  1228                           
  1229                           ;LCD.c: 70:    temp = 0x80 + b - 1;
  1230  0643  0874               	movf	Lcd_Set_Cursor@b,w
  1231  0644  3E7F               	addlw	127
  1232  0645  00F5               	movwf	??_Lcd_Set_Cursor
  1233  0646  0875               	movf	??_Lcd_Set_Cursor,w
  1234  0647  00F7               	movwf	Lcd_Set_Cursor@temp
  1235  0648                     l860:
  1236                           
  1237                           ;LCD.c: 71:   Lcd_Cmd(temp);
  1238  0648  0877               	movf	Lcd_Set_Cursor@temp,w
  1239  0649  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1240                           
  1241                           ;LCD.c: 72:  }
  1242  064E  2E60               	goto	l104
  1243  064F                     l862:
  1244  064F  3002               	movlw	2
  1245  0650  0676               	xorwf	Lcd_Set_Cursor@a,w
  1246  0651  1D03               	btfss	3,2
  1247  0652  2E54               	goto	u151
  1248  0653  2E55               	goto	u150
  1249  0654                     u151:
  1250  0654  2E60               	goto	l104
  1251  0655                     u150:
  1252  0655                     l864:
  1253                           
  1254                           ;LCD.c: 74:   temp = 0xC0 + b - 1;
  1255  0655  0874               	movf	Lcd_Set_Cursor@b,w
  1256  0656  3EBF               	addlw	191
  1257  0657  00F5               	movwf	??_Lcd_Set_Cursor
  1258  0658  0875               	movf	??_Lcd_Set_Cursor,w
  1259  0659  00F7               	movwf	Lcd_Set_Cursor@temp
  1260  065A                     l866:
  1261                           
  1262                           ;LCD.c: 75:   Lcd_Cmd(temp);
  1263  065A  0877               	movf	Lcd_Set_Cursor@temp,w
  1264  065B  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1265  0660                     l104:
  1266  0660  0008               	return
  1267  0661                     __end_of_Lcd_Set_Cursor:
  1268                           
  1269                           	psect	text7
  1270  06C4                     __ptext7:	
  1271 ;; *************** function _Lcd_Init *****************
  1272 ;; Defined at:
  1273 ;;		line 79 in file "LCD.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0, pclath, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          2       0       0       0       0
  1290 ;;      Totals:         2       0       0       0       0
  1291 ;;Total ram usage:        2 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    2
  1294 ;; This function calls:
  1295 ;;		_Lcd_Cmd
  1296 ;;		_Lcd_Port
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _Lcd_Init
  1304  06C4                     _Lcd_Init:
  1305  06C4                     l756:	
  1306                           ;incstack = 0
  1307                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1308                           
  1309                           
  1310                           ;LCD.c: 80:   Lcd_Port(0x00);
  1311  06C4  3000               	movlw	0
  1312  06C5  120A  118A  2686  120A  118A  	fcall	_Lcd_Port
  1313  06CA                     l758:
  1314                           
  1315                           ;LCD.c: 81:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1316  06CA  3034               	movlw	52
  1317  06CB  00F5               	movwf	??_Lcd_Init+1
  1318  06CC  30F1               	movlw	241
  1319  06CD  00F4               	movwf	??_Lcd_Init
  1320  06CE                     u257:
  1321  06CE  0BF4               	decfsz	??_Lcd_Init,f
  1322  06CF  2ECE               	goto	u257
  1323  06D0  0BF5               	decfsz	??_Lcd_Init+1,f
  1324  06D1  2ECE               	goto	u257
  1325  06D2  2ED3               	nop2
  1326  06D3                     l760:
  1327                           
  1328                           ;LCD.c: 82:   Lcd_Cmd(0x30);
  1329  06D3  3030               	movlw	48
  1330  06D4  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1331                           
  1332                           ;LCD.c: 83:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1333  06D9  300D               	movlw	13
  1334  06DA  00F5               	movwf	??_Lcd_Init+1
  1335  06DB  30FB               	movlw	251
  1336  06DC  00F4               	movwf	??_Lcd_Init
  1337  06DD                     u267:
  1338  06DD  0BF4               	decfsz	??_Lcd_Init,f
  1339  06DE  2EDD               	goto	u267
  1340  06DF  0BF5               	decfsz	??_Lcd_Init+1,f
  1341  06E0  2EDD               	goto	u267
  1342  06E1  2EE2               	nop2
  1343  06E2                     l762:
  1344                           
  1345                           ;LCD.c: 84:   Lcd_Cmd(0x30);
  1346  06E2  3030               	movlw	48
  1347  06E3  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1348  06E8                     l764:
  1349                           
  1350                           ;LCD.c: 85:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1351  06E8  301D               	movlw	29
  1352  06E9  00F5               	movwf	??_Lcd_Init+1
  1353  06EA  3091               	movlw	145
  1354  06EB  00F4               	movwf	??_Lcd_Init
  1355  06EC                     u277:
  1356  06EC  0BF4               	decfsz	??_Lcd_Init,f
  1357  06ED  2EEC               	goto	u277
  1358  06EE  0BF5               	decfsz	??_Lcd_Init+1,f
  1359  06EF  2EEC               	goto	u277
  1360                           
  1361                           ;LCD.c: 86:   Lcd_Cmd(0x30);
  1362  06F0  3030               	movlw	48
  1363  06F1  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1364                           
  1365                           ;LCD.c: 88:   Lcd_Cmd(0x38);
  1366  06F6  3038               	movlw	56
  1367  06F7  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1368                           
  1369                           ;LCD.c: 89:   Lcd_Cmd(0x08);
  1370  06FC  3008               	movlw	8
  1371  06FD  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1372                           
  1373                           ;LCD.c: 90:   Lcd_Cmd(0x01);
  1374  0702  3001               	movlw	1
  1375  0703  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1376                           
  1377                           ;LCD.c: 91:   Lcd_Cmd(0x06);
  1378  0708  3006               	movlw	6
  1379  0709  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1380  070E                     l107:
  1381  070E  0008               	return
  1382  070F                     __end_of_Lcd_Init:
  1383                           
  1384                           	psect	text8
  1385  05D7                     __ptext8:	
  1386 ;; *************** function _Lcd_Clear *****************
  1387 ;; Defined at:
  1388 ;;		line 63 in file "LCD.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0
  1405 ;;      Totals:         0       0       0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    2
  1409 ;; This function calls:
  1410 ;;		_Lcd_Cmd
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _Lcd_Clear
  1418  05D7                     _Lcd_Clear:
  1419  05D7                     l766:	
  1420                           ;incstack = 0
  1421                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1422                           
  1423                           
  1424                           ;LCD.c: 64:  Lcd_Cmd(1);
  1425  05D7  3001               	movlw	1
  1426  05D8  120A  118A  25EC  120A  118A  	fcall	_Lcd_Cmd
  1427  05DD                     l98:
  1428  05DD  0008               	return
  1429  05DE                     __end_of_Lcd_Clear:
  1430                           
  1431                           	psect	text9
  1432  05EC                     __ptext9:	
  1433 ;; *************** function _Lcd_Cmd *****************
  1434 ;; Defined at:
  1435 ;;		line 55 in file "LCD.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  a               1    wreg     unsigned char 
  1438 ;; Auto vars:     Size  Location     Type
  1439 ;;  a               1    3[COMMON] unsigned char 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, status,2, status,0, pclath, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1449 ;;      Params:         0       0       0       0       0
  1450 ;;      Locals:         1       0       0       0       0
  1451 ;;      Temps:          2       0       0       0       0
  1452 ;;      Totals:         3       0       0       0       0
  1453 ;;Total ram usage:        3 bytes
  1454 ;; Hardware stack levels used:    1
  1455 ;; Hardware stack levels required when called:    1
  1456 ;; This function calls:
  1457 ;;		_Lcd_Port
  1458 ;; This function is called by:
  1459 ;;		_Lcd_Clear
  1460 ;;		_Lcd_Set_Cursor
  1461 ;;		_Lcd_Init
  1462 ;;		_Lcd_Shift_Right
  1463 ;;		_Lcd_Shift_Left
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _Lcd_Cmd
  1469  05EC                     _Lcd_Cmd:
  1470                           
  1471                           ;incstack = 0
  1472                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1473                           ;Lcd_Cmd@a stored from wreg
  1474  05EC  00F3               	movwf	Lcd_Cmd@a
  1475  05ED                     l744:
  1476                           
  1477                           ;LCD.c: 56:  PORTEbits.RE0 = 0;
  1478  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1479  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1480  05EF  1009               	bcf	9,0	;volatile
  1481  05F0                     l746:
  1482                           
  1483                           ;LCD.c: 57:  Lcd_Port(a);
  1484  05F0  0873               	movf	Lcd_Cmd@a,w
  1485  05F1  120A  118A  2686  120A  118A  	fcall	_Lcd_Port
  1486  05F6                     l748:
  1487                           
  1488                           ;LCD.c: 58:  PORTEbits.RE1 = 1;
  1489  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  1490  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  1491  05F8  1489               	bsf	9,1	;volatile
  1492  05F9                     l750:
  1493                           
  1494                           ;LCD.c: 59:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1495  05F9  300B               	movlw	11
  1496  05FA  00F2               	movwf	??_Lcd_Cmd+1
  1497  05FB  3062               	movlw	98
  1498  05FC  00F1               	movwf	??_Lcd_Cmd
  1499  05FD                     u287:
  1500  05FD  0BF1               	decfsz	??_Lcd_Cmd,f
  1501  05FE  2DFD               	goto	u287
  1502  05FF  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1503  0600  2DFD               	goto	u287
  1504  0601  0000               	nop
  1505  0602                     l752:
  1506                           
  1507                           ;LCD.c: 60:         PORTEbits.RE1 = 0;
  1508  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0604  1089               	bcf	9,1	;volatile
  1511  0605                     l95:
  1512  0605  0008               	return
  1513  0606                     __end_of_Lcd_Cmd:
  1514                           
  1515                           	psect	text10
  1516  0686                     __ptext10:	
  1517 ;; *************** function _Lcd_Port *****************
  1518 ;; Defined at:
  1519 ;;		line 13 in file "LCD.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  a               1    wreg     unsigned char 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  a               1    0[COMMON] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         1       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0
  1536 ;;      Totals:         1       0       0       0       0
  1537 ;;Total ram usage:        1 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_Lcd_Cmd
  1543 ;;		_Lcd_Init
  1544 ;;		_Lcd_Write_Char
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function _Lcd_Port
  1550  0686                     _Lcd_Port:
  1551                           
  1552                           ;incstack = 0
  1553                           ; Regs used in _Lcd_Port: [wreg]
  1554                           ;Lcd_Port@a stored from wreg
  1555  0686  00F0               	movwf	Lcd_Port@a
  1556  0687                     l714:
  1557                           
  1558                           ;LCD.c: 14:  if(a & 1)
  1559  0687  1C70               	btfss	Lcd_Port@a,0
  1560  0688  2E8A               	goto	u11
  1561  0689  2E8B               	goto	u10
  1562  068A                     u11:
  1563  068A  2E8F               	goto	l76
  1564  068B                     u10:
  1565  068B                     l716:
  1566                           
  1567                           ;LCD.c: 15:   RD0 = 1;
  1568  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1569  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1570  068D  1408               	bsf	8,0	;volatile
  1571  068E  2E92               	goto	l77
  1572  068F                     l76:	
  1573                           ;LCD.c: 16:  else
  1574                           
  1575                           
  1576                           ;LCD.c: 17:   RD0 = 0;
  1577  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0691  1008               	bcf	8,0	;volatile
  1580  0692                     l77:
  1581                           
  1582                           ;LCD.c: 19:     if(a & 2)
  1583  0692  1CF0               	btfss	Lcd_Port@a,1
  1584  0693  2E95               	goto	u21
  1585  0694  2E96               	goto	u20
  1586  0695                     u21:
  1587  0695  2E98               	goto	l78
  1588  0696                     u20:
  1589  0696                     l718:
  1590                           
  1591                           ;LCD.c: 20:   RD1 = 1;
  1592  0696  1488               	bsf	8,1	;volatile
  1593  0697  2E99               	goto	l79
  1594  0698                     l78:	
  1595                           ;LCD.c: 21:  else
  1596                           
  1597                           
  1598                           ;LCD.c: 22:   RD1 = 0;
  1599  0698  1088               	bcf	8,1	;volatile
  1600  0699                     l79:
  1601                           
  1602                           ;LCD.c: 24:     if(a & 4)
  1603  0699  1D70               	btfss	Lcd_Port@a,2
  1604  069A  2E9C               	goto	u31
  1605  069B  2E9D               	goto	u30
  1606  069C                     u31:
  1607  069C  2E9F               	goto	l80
  1608  069D                     u30:
  1609  069D                     l720:
  1610                           
  1611                           ;LCD.c: 25:   RD2 = 1;
  1612  069D  1508               	bsf	8,2	;volatile
  1613  069E  2EA0               	goto	l81
  1614  069F                     l80:	
  1615                           ;LCD.c: 26:  else
  1616                           
  1617                           
  1618                           ;LCD.c: 27:   RD2 = 0;
  1619  069F  1108               	bcf	8,2	;volatile
  1620  06A0                     l81:
  1621                           
  1622                           ;LCD.c: 29:     if(a & 8)
  1623  06A0  1DF0               	btfss	Lcd_Port@a,3
  1624  06A1  2EA3               	goto	u41
  1625  06A2  2EA4               	goto	u40
  1626  06A3                     u41:
  1627  06A3  2EA6               	goto	l82
  1628  06A4                     u40:
  1629  06A4                     l722:
  1630                           
  1631                           ;LCD.c: 30:   RD3 = 1;
  1632  06A4  1588               	bsf	8,3	;volatile
  1633  06A5  2EA7               	goto	l83
  1634  06A6                     l82:	
  1635                           ;LCD.c: 31:  else
  1636                           
  1637                           
  1638                           ;LCD.c: 32:   RD3 = 0;
  1639  06A6  1188               	bcf	8,3	;volatile
  1640  06A7                     l83:
  1641                           
  1642                           ;LCD.c: 34:     if(a & 16)
  1643  06A7  1E70               	btfss	Lcd_Port@a,4
  1644  06A8  2EAA               	goto	u51
  1645  06A9  2EAB               	goto	u50
  1646  06AA                     u51:
  1647  06AA  2EAD               	goto	l84
  1648  06AB                     u50:
  1649  06AB                     l724:
  1650                           
  1651                           ;LCD.c: 35:   RD4 = 1;
  1652  06AB  1608               	bsf	8,4	;volatile
  1653  06AC  2EAE               	goto	l85
  1654  06AD                     l84:	
  1655                           ;LCD.c: 36:  else
  1656                           
  1657                           
  1658                           ;LCD.c: 37:   RD4 = 0;
  1659  06AD  1208               	bcf	8,4	;volatile
  1660  06AE                     l85:
  1661                           
  1662                           ;LCD.c: 39:  if(a & 32)
  1663  06AE  1EF0               	btfss	Lcd_Port@a,5
  1664  06AF  2EB1               	goto	u61
  1665  06B0  2EB2               	goto	u60
  1666  06B1                     u61:
  1667  06B1  2EB4               	goto	l86
  1668  06B2                     u60:
  1669  06B2                     l726:
  1670                           
  1671                           ;LCD.c: 40:   RD5 = 1;
  1672  06B2  1688               	bsf	8,5	;volatile
  1673  06B3  2EB5               	goto	l87
  1674  06B4                     l86:	
  1675                           ;LCD.c: 41:  else
  1676                           
  1677                           
  1678                           ;LCD.c: 42:   RD5 = 0;
  1679  06B4  1288               	bcf	8,5	;volatile
  1680  06B5                     l87:
  1681                           
  1682                           ;LCD.c: 44:  if(a & 64)
  1683  06B5  1F70               	btfss	Lcd_Port@a,6
  1684  06B6  2EB8               	goto	u71
  1685  06B7  2EB9               	goto	u70
  1686  06B8                     u71:
  1687  06B8  2EBB               	goto	l88
  1688  06B9                     u70:
  1689  06B9                     l728:
  1690                           
  1691                           ;LCD.c: 45:   RD6 = 1;
  1692  06B9  1708               	bsf	8,6	;volatile
  1693  06BA  2EBC               	goto	l89
  1694  06BB                     l88:	
  1695                           ;LCD.c: 46:  else
  1696                           
  1697                           
  1698                           ;LCD.c: 47:   RD6 = 0;
  1699  06BB  1308               	bcf	8,6	;volatile
  1700  06BC                     l89:
  1701                           
  1702                           ;LCD.c: 49:  if(a & 128)
  1703  06BC  1FF0               	btfss	Lcd_Port@a,7
  1704  06BD  2EBF               	goto	u81
  1705  06BE  2EC0               	goto	u80
  1706  06BF                     u81:
  1707  06BF  2EC2               	goto	l90
  1708  06C0                     u80:
  1709  06C0                     l730:
  1710                           
  1711                           ;LCD.c: 50:   RD7 = 1;
  1712  06C0  1788               	bsf	8,7	;volatile
  1713  06C1  2EC3               	goto	l92
  1714  06C2                     l90:	
  1715                           ;LCD.c: 51:  else
  1716                           
  1717                           
  1718                           ;LCD.c: 52:   RD7 = 0;
  1719  06C2  1388               	bcf	8,7	;volatile
  1720  06C3                     l92:
  1721  06C3  0008               	return
  1722  06C4                     __end_of_Lcd_Port:
  1723  007E                     btemp	set	126	;btemp
  1724  007E                     wtemp0	set	126
  1725                           
  1726                           	psect	config
  1727                           
  1728                           ;Config register CONFIG1 @ 0x2007
  1729                           ;	Oscillator Selection bits
  1730                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1731                           ;	Watchdog Timer Enable bit
  1732                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1733                           ;	Power-up Timer Enable bit
  1734                           ;	PWRTE = OFF, PWRT disabled
  1735                           ;	RE3/MCLR pin function select bit
  1736                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1737                           ;	Code Protection bit
  1738                           ;	CP = OFF, Program memory code protection is disabled
  1739                           ;	Data Code Protection bit
  1740                           ;	CPD = OFF, Data memory code protection is disabled
  1741                           ;	Brown Out Reset Selection bits
  1742                           ;	BOREN = OFF, BOR disabled
  1743                           ;	Internal External Switchover bit
  1744                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1745                           ;	Fail-Safe Clock Monitor Enabled bit
  1746                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1747                           ;	Low Voltage Programming Enable bit
  1748                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1749                           ;	In-Circuit Debugger Mode bit
  1750                           ;	DEBUG = 0x1, unprogrammed default
  1751  2007                     	org	8199
  1752  2007  20D6               	dw	8406
  1753                           
  1754                           ;Config register CONFIG2 @ 0x2008
  1755                           ;	Brown-out Reset Selection bit
  1756                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1757                           ;	Flash Program Memory Self Write Enable bits
  1758                           ;	WRT = OFF, Write protection off
  1759  2008                     	org	8200
  1760  2008  3FFF               	dw	16383

Data Sizes:
    Strings     71
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2032
                                              8 COMMON     5     5      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     405
                                              4 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     150
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     725
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     255
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     135
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     135
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     120
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 00:41:13 2021

                        pc 0002                         l53 063C                         l80 069F  
                       l81 06A0                         l90 06C2                         l82 06A6  
                       l83 06A7                         l92 06C3                         l84 06AD  
                       l76 068F                         l85 06AE                         l77 0692  
                       l86 06B4                         l78 0698                         l87 06B5  
                       l79 0699                         l95 0605                         l88 06BB  
                       l89 06BC                         l98 05DD                         u10 068B  
                       u11 068A                         u20 0696                         u21 0695  
                       u30 069D                         u31 069C                         u40 06A4  
                       u41 06A3                         u50 06AB                         u51 06AA  
                       u60 06B2                         u61 06B1                         u70 06B9  
                       u71 06B8                         u80 06C0                         u81 06BF  
                       fsr 0004                        l110 061F                        l104 0660  
                      l122 05E4                        l107 070E                        l116 0685  
                      l119 05EB                        l720 069D                        l730 06C0  
                      l722 06A4                        l714 0687                        l724 06AB  
                      l716 068B                        l740 0617                        l732 0607  
                      l900 076C                        l726 06B2                        l718 0696  
                      l750 05F9                        l742 061C                        l734 060B  
                      l902 0779                        l728 06B9                        l752 0602  
                      l744 05ED                        l760 06D3                        l736 060E  
                      l920 07A6                        l904 077E                        l746 05F0  
                      l762 06E2                        l738 0614                        l754 0620  
                      l930 07BE                        l922 07AF                        l914 078E  
                      l906 0786                        l748 05F6                        l764 06E8  
                      l756 06C4                        l860 0648                        l932 07C3  
                      l916 079B                        l908 078C                        l766 05D7  
                      l758 06CA                        l862 064F                        l790 05E5  
                      l870 0665                        l934 07C9                        l918 07A0  
                      l864 0655                        l856 063E                        l872 0672  
                      l936 07D2                        l928 07B1                        l880 0717  
                      l866 065A                        l858 0643                        l874 0678  
                      l938 07EB                        l890 0730                        l882 0718  
                      l788 05DE                        l868 0662                        l892 0738  
                      l884 071D                        l876 070F                        l894 073E  
                      l886 0722                        l878 0714                        l896 0758  
                      l888 072A                        l898 075E                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        u140 0643                        u141 0642  
                      u150 0655                        u151 0654                        u207 0772  
                      u160 0685                        u161 0684                        u217 0794  
                      u170 07AF                        u227 07B7                        u171 07AE  
                      u180 07D2                        u237 07F1                        u181 07D1  
                      u247 0619                        u257 06CE                        u267 06DD  
                      u277 06EC                        u197 0744                        u287 05FD  
                      fsr0 0004                       STR_1 001D                       STR_2 0046  
                     STR_3 002D                       STR_4 003A                       STR_5 0009  
        ?_Lcd_Write_String 0070                       _main 070F                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0074            __end_of_Lcd_Cmd 0606  
                    ?_main 0070                      _ANSEL 0188                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089    __size_of_Lcd_Shift_Left 0007  
                    _setup 0620                      main@a 007B                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 070F  
         __end_of_Lcd_Port 06C4            __initialization 07FC               __end_of_main 07FC  
                   ??_main 0078         __size_of_Lcd_Clear 0007                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001A  
 __size_of_Lcd_Shift_Right 0007            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 05DE             __pcstackCOMMON 0070  
            __end_of_setup 063D             _Lcd_Set_Cursor 063D             _Lcd_Shift_Left 05DE  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0070  
               __pmaintext 070F  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0661  
   __end_of_Lcd_Shift_Left 05E5          ??_Lcd_Shift_Right 0074                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0003             _Lcd_Write_Char 0606  
                  _Lcd_Cmd 05EC            ?_Lcd_Set_Cursor 0074                    __ptext1 0620  
                  __ptext2 0661                    __ptext3 0606                    __ptext4 05E5  
                  __ptext5 05DE                    __ptext6 063D                    __ptext7 06C4  
                  __ptext8 05D7                    __ptext9 05EC            ?_Lcd_Shift_Left 0070  
   __end_of_Lcd_Write_Char 0620       end_of_initialization 07FC                  Lcd_Port@a 0070  
                _PORTEbits 0009            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076  
        Lcd_Write_String@i 0074                  _Lcd_Clear 05D7           _Lcd_Write_String 0661  
      start_initialization 07FC          __size_of_Lcd_Init 004B          __size_of_Lcd_Port 003E  
               ?_Lcd_Clear 0070            _Lcd_Shift_Right 05E5            Lcd_Write_Char@a 0072  
                ___latbits 0002                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075  
         ??_Lcd_Shift_Left 0074                  __pstrings 0003             __size_of_setup 001D  
  __end_of_Lcd_Shift_Right 05EC                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              __stringbase 0008           ??_Lcd_Write_Char 0071                   _Lcd_Init 06C4  
                 _Lcd_Port 0686   __end_of_Lcd_Write_String 0686           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 0009                   __ptext10 0686              __size_of_main 00ED  
         ?_Lcd_Shift_Right 0070         Lcd_Write_Char@temp 0073                  stringcode 0003  
       Lcd_Set_Cursor@temp 0077                   stringdir 0003                   stringtab 0003  
